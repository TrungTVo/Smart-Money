{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/ManageAccounts.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddAccount from './AddAccount';\nimport { loadAccounts } from '../actions/accountActions';\nimport { update_bankAccount } from '../actions/accountActions';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport InputGroup from '../common/InputGroup';\nimport ModalDelete from '../common/ModalDelete';\nimport * as actions from '../actions/types';\nimport AlertMessage from '../common/AlertMessage';\n\nclass ManageAccounts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabIndex: 0,\n      id: '',\n      name: '',\n      currency: '',\n      balance: '',\n      budget: ''\n    };\n\n    this.select_bankAccount = tabIndex => {\n      const accounts = this.props.accounts;\n      this.setState({\n        tabIndex\n      }, () => {\n        // parse value info of this bank account into input fields\n        const tabIndex = this.state.tabIndex;\n\n        if (tabIndex < accounts.accounts.length) {\n          const select_account = accounts.accounts[tabIndex];\n          this.setState({\n            id: select_account._id,\n            name: select_account.name,\n            currency: select_account.currency,\n            balance: select_account.balance,\n            budget: select_account.budget\n          });\n        }\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.updateAccount = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            id = _this$state.id,\n            name = _this$state.name,\n            currency = _this$state.currency,\n            balance = _this$state.balance,\n            budget = _this$state.budget;\n      const account = {\n        id: id,\n        name: name,\n        currency: currency,\n        balance: balance,\n        budget: budget\n      };\n      this.props.update_bankAccount(account);\n      this.setState({\n        tabIndex: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const accounts = nextProps.accounts;\n    this.setState({\n      tabIndex: 0\n    });\n\n    if (accounts.accounts.length > 0) {\n      const default_account = accounts.accounts[0];\n\n      if (typeof default_account !== 'undefined' && Object.keys(default_account).length > 0) {\n        this.setState({\n          id: default_account._id,\n          name: default_account.name,\n          currency: default_account.currency,\n          balance: default_account.balance,\n          budget: default_account.budget\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          currency = _this$state2.currency,\n          balance = _this$state2.balance,\n          budget = _this$state2.budget;\n    const _this$props = this.props,\n          accounts = _this$props.accounts,\n          success = _this$props.success,\n          errors = _this$props.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(AddAccount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-header bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-pen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\"), \"Edit accounts\")), React.createElement(\"div\", {\n      className: \"card card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, (success.type === actions.DELETE_ACCOUNT || success.type === actions.UPDATE_ACCOUNT) && typeof success.success_msg !== 'undefined' && success.success_msg !== '' ? React.createElement(AlertMessage, {\n      message: success.success_msg,\n      variant: 'success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"You currently have \", accounts.accounts.length, \" accounts.\"), React.createElement(Tabs, {\n      defaultFocus: true,\n      selectedIndex: this.state.tabIndex,\n      onSelect: tabIndex => this.select_bankAccount(tabIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, accounts.accounts.map((account, i) => React.createElement(Tab, {\n      key: account._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, account.name))), accounts.accounts.map((account, i) => React.createElement(TabPanel, {\n      key: account._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"name\",\n      label: \"Name\",\n      type: \"name\",\n      id: \"name\",\n      name: \"name\",\n      required: true,\n      onChange: this.onChange,\n      value: name,\n      error: errors.type === actions.UPDATE_ACCOUNT ? errors.name : false,\n      placeholder: \"Enter account name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      className: \"col-md-4 col-sm-6 col-xs-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Select currency: \", React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"form-group col-md-7 col-sm-5 col-xs-12 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"currency\",\n      value: currency,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Select currency\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      value: \"VND\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"VND\"), React.createElement(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"EUR\")), errors.type === actions.UPDATE_ACCOUNT ? errors.currency && React.createElement(\"small\", {\n      className: \"form-text\",\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, errors.currency) : null)), React.createElement(InputGroup, {\n      htmlFor: \"balance\",\n      label: \"Balance\",\n      type: \"balance\",\n      id: \"balance\",\n      name: \"balance\",\n      required: true,\n      onChange: this.onChange,\n      value: balance,\n      error: errors.type === actions.UPDATE_ACCOUNT ? errors.balance : false,\n      placeholder: \"Enter account balance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"budget\",\n      label: \"Budget\",\n      type: \"budget\",\n      id: \"budget\",\n      name: \"budget\",\n      required: false,\n      onChange: this.onChange,\n      value: budget,\n      placeholder: \"Enter budget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.updateAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Update\")), React.createElement(ModalDelete, {\n      disabled: false,\n      variant: \"danger\",\n      bankId: account._id,\n      type: actions.DELETE_ACCOUNT,\n      header: \"Delete account\",\n      body: \"Delete this bank account will permanently delete all your information and cannot be undone.  Are you sure you want to do this?\",\n      buttonText: \"Delete\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Yes\",\n      reTab: () => this.setState({\n        tabIndex: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  success: state.success,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loadAccounts,\n  update_bankAccount\n})(ManageAccounts);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/ManageAccounts.js"],"names":["React","Component","connect","AddAccount","loadAccounts","update_bankAccount","Tab","Tabs","TabList","TabPanel","InputGroup","ModalDelete","actions","AlertMessage","ManageAccounts","state","tabIndex","id","name","currency","balance","budget","select_bankAccount","accounts","props","setState","length","select_account","_id","onChange","e","target","value","updateAccount","preventDefault","account","componentDidMount","componentWillReceiveProps","nextProps","default_account","Object","keys","render","success","errors","type","DELETE_ACCOUNT","UPDATE_ACCOUNT","success_msg","map","i","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport AddAccount from './AddAccount';\nimport {loadAccounts} from '../actions/accountActions';\nimport { update_bankAccount } from '../actions/accountActions';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport InputGroup from '../common/InputGroup';\nimport ModalDelete from '../common/ModalDelete';\nimport * as actions from '../actions/types';\nimport AlertMessage from '../common/AlertMessage';\n\nclass ManageAccounts extends Component {\n  state = {\n    tabIndex: 0,\n    id: '',\n    name: '',\n    currency: '',\n    balance: '',\n    budget: '',\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {accounts} = nextProps;\n    this.setState({\n      tabIndex: 0\n    })\n    if (accounts.accounts.length > 0) {\n      const default_account = accounts.accounts[0];\n      if (typeof default_account !== 'undefined' && Object.keys(default_account).length > 0) {\n        this.setState({\n          id: default_account._id,\n          name: default_account.name,\n          currency: default_account.currency,\n          balance: default_account.balance,\n          budget: default_account.budget\n        })\n      }\n    }\n  }\n\n  select_bankAccount = (tabIndex) => {\n    const {accounts} = this.props;\n    this.setState({\n      tabIndex\n    }, () => {\n      // parse value info of this bank account into input fields\n      const {tabIndex} = this.state;\n      if (tabIndex < accounts.accounts.length) {\n        const select_account = accounts.accounts[tabIndex];\n        this.setState({\n          id: select_account._id,\n          name: select_account.name,\n          currency: select_account.currency,\n          balance: select_account.balance,\n          budget: select_account.budget\n        })\n      }\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  updateAccount = (e) => {\n    e.preventDefault();\n    const {id, name, currency, balance, budget} = this.state;\n    const account = {\n      id: id,\n      name: name,\n      currency: currency,\n      balance: balance,\n      budget: budget\n    }\n    this.props.update_bankAccount(account);\n    this.setState({\n      tabIndex: 0\n    })\n  }\n\n  render() {\n    const {name, currency, balance, budget} = this.state;\n    const {accounts, success, errors} = this.props;\n    \n    return (\n      <div>\n        <AddAccount /> <br/>\n        <div className=\"container\">\n          <div className='card card-header bg-light'>\n            <h4>\n              <i className='fas fa-pen'>&nbsp;&nbsp;&nbsp;</i>Edit accounts\n            </h4>\n          </div>\n          <div className='card card-body'>\n            {\n              (success.type === actions.DELETE_ACCOUNT || success.type === actions.UPDATE_ACCOUNT) && typeof success.success_msg !== 'undefined' && success.success_msg !== '' ?\n                <AlertMessage message={success.success_msg} variant={'success'} />\n                : null\n            }\n            <p>You currently have {accounts.accounts.length} accounts.</p>\n            <Tabs defaultFocus={true} selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.select_bankAccount(tabIndex) }>\n              <TabList>\n                {\n                  accounts.accounts.map((account, i) =>\n                    <Tab key={account._id}>{account.name}</Tab>\n                  )\n                }\n              </TabList>\n              {\n                accounts.accounts.map((account, i) =>\n                  <TabPanel key={account._id} >\n                    <br />\n                    <InputGroup htmlFor=\"name\"\n                      label=\"Name\"\n                      type=\"name\"\n                      id=\"name\"\n                      name=\"name\"\n                      required={true}\n                      onChange={this.onChange}\n                      value={name}\n                      error={errors.type === actions.UPDATE_ACCOUNT ? errors.name : false}\n                      placeholder=\"Enter account name\" />\n\n\n                    <div className=\"form-group row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                      <label htmlFor=\"currency\" className=\"col-md-4 col-sm-6 col-xs-12 col-form-label\">\n                        Select currency: <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\"form-group col-md-7 col-sm-5 col-xs-12 mt-2\">\n                        <select className=\"custom-select\" id='currency' value={currency}\n                          onChange={this.onChange}>\n                          <option value=\"\">Select currency</option>\n                          <option value=\"USD\">USD</option>\n                          <option value=\"VND\">VND</option>\n                          <option value=\"EUR\">EUR</option>\n                        </select>\n                        {\n                          errors.type === actions.UPDATE_ACCOUNT ?\n                          (errors.currency && <small className=\"form-text\" style={{ color: 'red' }}>{errors.currency}</small>) : null\n                        }\n                      </div>\n                    </div>\n\n                    <InputGroup htmlFor=\"balance\"\n                      label=\"Balance\"\n                      type=\"balance\"\n                      id=\"balance\"\n                      name=\"balance\"\n                      required={true}\n                      onChange={this.onChange}\n                      value={balance}\n                      error={errors.type === actions.UPDATE_ACCOUNT ? errors.balance : false}\n                      placeholder=\"Enter account balance\" />\n\n                    <InputGroup htmlFor=\"budget\"\n                      label=\"Budget\"\n                      type=\"budget\"\n                      id=\"budget\"\n                      name=\"budget\"\n                      required={false}\n                      onChange={this.onChange}\n                      value={budget}\n                      placeholder=\"Enter budget\" />\n\n                    <div className='d-flex flex-row'>\n                      <form onSubmit={this.updateAccount}>\n                        <button type='submit' className='btn btn-secondary mr-2'>Update</button>\n                      </form>\n                      <ModalDelete\n                        disabled={false}\n                        variant='danger'\n                        bankId={account._id}\n                        type={actions.DELETE_ACCOUNT}\n                        header=\"Delete account\"\n                        body=\"Delete this bank account will permanently delete all your information and cannot be undone. \n                            Are you sure you want to do this?\"\n                        buttonText=\"Delete\"    \n                        cancelBtn=\"Close\"\n                        yesBtn=\"Yes\"\n                        reTab={() => this.setState({tabIndex: 0})}\n                      />\n                    </div>\n                  </TabPanel>\n                )\n              }\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  success: state.success,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loadAccounts, update_bankAccount})(ManageAccounts);\n"]},"metadata":{},"sourceType":"module"}