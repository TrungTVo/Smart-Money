{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nexport default class MyChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      window_width: window.innerWidth\n    };\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      const window_width = this.state.window_width;\n      const _this$props = this.props,\n            type = _this$props.type,\n            position = _this$props.position,\n            data = _this$props.data;\n      window.addEventListener('resize', () => {\n        this.setState({\n          window_width: window.innerWidth\n        });\n      });\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: type,\n        data: data,\n        options: {\n          title: {\n            text: 'Chart',\n            display: true\n          },\n          responsive: true,\n          legend: {\n            display: true,\n            position: window_width > 945 ? type === 'pie' || type === 'doughnut' ? 'right' : position : 'bottom',\n            labels: {\n              generateLabels: function (chart) {\n                var data = chart.data;\n\n                if (data.labels.length && data.datasets.length) {\n                  return data.labels.map(function (label, i) {\n                    return {\n                      text: label + ': ' + data.datasets[0].data[i],\n                      fillStyle: data.datasets[0].backgroundColor[i],\n                      index: i\n                    };\n                  });\n                }\n\n                return [];\n              }\n            }\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate() {\n    this.buildChart();\n  }\n\n  render() {\n    const window_width = this.state.window_width;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myChart\",\n      style: {\n        height: window_width < 350 ? '350vh' : '250vh',\n        width: '400vw'\n      },\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js"],"names":["React","Component","Chart","MyChart","state","window_width","window","innerWidth","chartRef","createRef","buildChart","props","type","position","data","addEventListener","setState","myChartRef","current","getContext","options","title","text","display","responsive","legend","labels","generateLabels","chart","length","datasets","map","label","i","fillStyle","backgroundColor","index","componentDidMount","componentDidUpdate","render","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n\nexport default class MyChart extends Component {\n  state = {\n    window_width: window.innerWidth\n  }\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate() {\n    this.buildChart();\n  }\n\n  buildChart = () => {\n    const {window_width} = this.state;\n    const {type, position, data} = this.props;\n\n    window.addEventListener('resize', () => {\n      this.setState({ window_width: window.innerWidth  })\n    });\n\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: type,\n      data: data,\n      options: {\n        title: {\n          text: 'Chart',\n          display: true\n        },\n        responsive: true,\n        legend: {\n          display: true,\n          position: window_width > 945 ? (type === 'pie' || type ==='doughnut' ? 'right' : position) : 'bottom',\n          labels: {\n            generateLabels: function(chart) {\n              var data = chart.data;\n              if (data.labels.length && data.datasets.length) {\n                return data.labels.map(function (label, i) {\n                  return {\n                    text: label + ': ' + data.datasets[0].data[i],\n                    fillStyle: data.datasets[0].backgroundColor[i],\n                    index: i\n                  };\n                });\n              }\n              return [];\n            }\n          }\n        }\n      }\n    });\n  }\n  render() {\n    const {window_width} = this.state;\n    return (\n      <div>\n        <canvas\n          id=\"myChart\" \n          style={{height: window_width < 350 ? '350vh' : '250vh', width: '400vw'}}\n          ref={this.chartRef}\n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}