{"ast":null,"code":"import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess'; // load all transactions\n\nexport const loadTransactions = () => dispatch => {\n  dispatch(transactionsLoading());\n  axios.get('/accounts/transactions/all').then(res => {\n    dispatch({\n      type: actions.GET_ALL_TRANSACTIONS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // set transactions loading\n\nconst transactionsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_TRANSACTIONS_LOADING\n  });\n};","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/actions/transactionActions.js"],"names":["axios","actions","clearErrors","clearSuccess","loadTransactions","dispatch","transactionsLoading","get","then","res","type","GET_ALL_TRANSACTIONS","payload","data","catch","err","GET_ERRORS","response","GET_TRANSACTIONS_LOADING"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mBAA1C,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMC,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAACC,mBAAmB,EAApB,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,4BAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,OAAO,CAACU,oBADP;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,OAAO,CAACe,UADP;AAEPJ,MAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,KAAD,CAAR;AAID,GAZH;AAaD,CAfM,C,CAiBP;;AACA,MAAMP,mBAAmB,GAAG,MAAMD,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAET,OAAO,CAACiB;AADP,GAAD,CAAR;AAGD,CAJD","sourcesContent":["import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess';\n\n// load all transactions\nexport const loadTransactions = () => dispatch => {\n  dispatch(transactionsLoading());\n  axios.get('/accounts/transactions/all')\n    .then(res => {\n      dispatch({\n        type: actions.GET_ALL_TRANSACTIONS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// set transactions loading\nconst transactionsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_TRANSACTIONS_LOADING\n  })\n}\n"]},"metadata":{},"sourceType":"module"}