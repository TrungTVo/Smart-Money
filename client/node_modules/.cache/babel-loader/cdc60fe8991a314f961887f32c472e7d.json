{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js\";\nimport React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\n\nclass Evaluate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabIndex: 0,\n      selected_account_id: '',\n      rendered: false,\n      options: {},\n      series: [],\n      labels: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        selected_account_id: e.target.value\n      }, () => {\n        this.props.analysis(this.state.selected_account_id);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const accounts = nextProps.accounts;\n    const dataAnalysis = this.props.dataAnalysis;\n\n    if (!dataAnalysis.loading) {}\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({\n            rendered: true\n          }, () => {\n            this.props.analysis(this.state.selected_account_id);\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          accounts = _this$props.accounts,\n          dataAnalysis = _this$props.dataAnalysis;\n    let hasPositive = [];\n\n    if (!dataAnalysis.loading) {\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      active: \"evaluate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mt-3 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultFocus: true,\n      selectedIndex: this.state.tabIndex,\n      onSelect: tabIndex => this.setState({\n        tabIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chart-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Expense statistics \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), accounts.loading ? null : React.createElement(\"span\", {\n      className: \"badge badge-secondary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, accounts.accounts.length)), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Investing tools\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"statistics\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, accounts.loading ? null : accounts.accounts.length === 0 ? 'You currently have no accounts.' : null, React.createElement(\"div\", {\n      className: \"form-group row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      className: \"col-md-4 col-sm-6 col-xs-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Select account\"), React.createElement(\"div\", {\n      className: \"form-group col-md-7 col-sm-5 col-xs-12 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"account\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, !accounts.loading && accounts.accounts.map(account => React.createElement(\"option\", {\n      key: account._id,\n      value: account._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, account.name)))))), dataAnalysis.analyzing ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(\"div\", {\n      className: \"row justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: {\n        xaxis: {\n          categories: !dataAnalysis.loading ? dataAnalysis.categories : []\n        },\n        yaxis: {\n          max: hasPositive.length === 0 ? 0 : !dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0\n        },\n        plotOptions: {\n          bar: {\n            distributed: true\n          }\n        }\n      },\n      series: [{\n        data: !dataAnalysis.loading ? dataAnalysis.amounts : []\n      }],\n      type: \"bar\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"invest_tools\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"to be updated soon ...\")))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  loadAccounts,\n  analysis\n})(Evaluate);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js"],"names":["React","Component","NavBar","Footer","Tab","Tabs","TabList","TabPanel","connect","loadAccounts","Chart","analysis","Evaluate","state","tabIndex","selected_account_id","rendered","options","series","labels","onChange","e","setState","target","value","props","componentDidMount","componentWillReceiveProps","nextProps","accounts","dataAnalysis","loading","length","_id","render","hasPositive","amounts","filter","amount","map","account","name","analyzing","xaxis","categories","yaxis","max","Math","plotOptions","bar","distributed","data","mapStateToProps","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\n\nclass Evaluate extends Component {\n  state = {\n    tabIndex: 0,\n    selected_account_id: '',\n    rendered: false,\n\n    options: {},\n    series: [],\n    labels: []\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { accounts} = nextProps;\n    const {dataAnalysis } = this.props;\n\n    if (!dataAnalysis.loading) {\n\n    }\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({ rendered: true}, () => {\n            this.props.analysis(this.state.selected_account_id);\n          })\n        }\n      })\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      selected_account_id: e.target.value\n    }, () => {\n      this.props.analysis(this.state.selected_account_id);\n    })\n  }\n\n  render() {\n    const {accounts, dataAnalysis } = this.props;\n    let hasPositive = [];\n    if (!dataAnalysis.loading){\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n    }\n    return (\n      <div>\n        <NavBar active=\"evaluate\" />\n\n        <div className=\"container mt-3 mb-5\">\n          <Tabs defaultFocus={true} selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n            <TabList>\n              <Tab>\n                <i className='fas fa-chart-bar'></i><span>&nbsp;&nbsp;</span>\n                Expense statistics <span>&nbsp;&nbsp;</span>\n                {\n                  accounts.loading ? null :\n                    <span className=\"badge badge-secondary badge-pill\">{accounts.accounts.length}</span>\n                }\n\n              </Tab>\n              <Tab>\n                <i className='fas fa-calculator'></i><span>&nbsp;&nbsp;</span>\n                Investing tools\n              </Tab>\n            </TabList>\n\n            <TabPanel >\n              <br />\n              <div id='statistics' className='m-auto'>\n                {\n                  accounts.loading ? null :\n                  (\n                    accounts.accounts.length === 0 ?\n                    'You currently have no accounts.' : null\n                  )\n                }\n                <div className=\"form-group row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                  <label htmlFor=\"currency\" className=\"col-md-4 col-sm-6 col-xs-12 col-form-label\">\n                    Select account\n                  </label>\n                  <div className=\"form-group col-md-7 col-sm-5 col-xs-12 mt-2\">\n                    <select className=\"custom-select\" id='account' \n                      onChange={this.onChange} >\n                      {\n                        !accounts.loading && accounts.accounts.map((account) => \n                          <option key={account._id} value={account._id}>{account.name}</option>\n                        )\n                      }\n                    </select>\n                    \n                  </div>\n                </div>\n              </div>\n\n              {\n                dataAnalysis.analyzing ?\n                  <div className=\"d-flex justify-content-center mb-4\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  </div>\n                  :\n                  <div className=\"row justify-content-around\">\n                    <div className=\"col-md-6 col-sm-12\">\n                      <Chart\n                        options={{\n                          xaxis: {\n                            categories: !dataAnalysis.loading ? dataAnalysis.categories : []\n                          },\n                          yaxis: {\n                            max: hasPositive.length === 0 ? 0 :\n                              (!dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0)\n                          },\n                          plotOptions: {\n                            bar: {\n                              distributed: true\n                            }\n                          }\n                        }}\n                        series={\n                          [{ data: !dataAnalysis.loading ? dataAnalysis.amounts : [] }]\n                        }\n                        type=\"bar\"\n                        width=\"100%\"\n                      />\n                    </div>\n                  </div>\n              }\n\n            </TabPanel>\n            <TabPanel >\n              <br />\n              <div id='invest_tools' className='m-auto'>\n                to be updated soon ...\n              </div>\n            </TabPanel>\n\n          </Tabs>\n        </div>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n})\n\nexport default connect(mapStateToProps, { loadAccounts, analysis})(Evaluate);\n"]},"metadata":{},"sourceType":"module"}