{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/password-reset/Reset.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { resetPassword, updatePassword } from '../actions/usersActions';\nimport InputGroup from '../common/InputGroup';\nimport NavBar from '../layouts/NavBar';\nexport class Reset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      confirm_password: '',\n      success: null,\n      message: '',\n      user: null,\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onReset = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            user = _this$state.user,\n            password = _this$state.password,\n            confirm_password = _this$state.confirm_password;\n      this.props.updatePassword(user, password, confirm_password);\n    };\n  }\n\n  componentDidMount() {\n    this.props.resetPassword(this.props.match.params.token, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      user: nextProps.user\n    }); //console.log(nextProps);\n\n    if (typeof nextProps.errors.expired !== 'undefined') {\n      this.props.history.push('/users/forgot');\n    } else {\n      if (typeof nextProps.success.success_msg !== 'undefined') {\n        this.setState({\n          success: true,\n          message: nextProps.success.success_msg\n        });\n      } else {\n        this.setState({\n          success: false,\n          errors: nextProps.errors\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mb-5 ml-auto mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/img/logo.png\",\n      className: \"mx-auto d-block\",\n      id: \"appLogo\",\n      alt: \"logo\",\n      width: \"200\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card card-body shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\xA0\"), \" Reset your password\"), this.state.success === null || !this.state.success ? React.createElement(\"form\", {\n      onSubmit: this.onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      htmlFor: \"password\",\n      label: \"New password\",\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      required: true,\n      onChange: this.onChange,\n      error: !this.state.errors.password ? false : this.state.errors.password,\n      placeholder: \"Enter new password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"password\",\n      label: \"Confirm new password\",\n      type: \"password\",\n      id: \"confirm_password\",\n      name: \"confirm_password\",\n      required: true,\n      onChange: this.onChange,\n      error: !this.state.errors.confirm_password ? false : this.state.errors.confirm_password,\n      placeholder: \"Confirm new password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"btn-sign-in\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Update\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-success alert-dismissible fade show\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\xD7\"), \"Your password has been updated.\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Back to \", this.props.auth.isAuthenticated ? 'dashboard' : 'log in')))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  success: state.success,\n  user: state.users.user\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword,\n  updatePassword\n})(Reset);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/password-reset/Reset.js"],"names":["React","Component","connect","resetPassword","updatePassword","InputGroup","NavBar","Reset","state","password","confirm_password","success","message","user","errors","onChange","e","setState","target","name","value","onReset","preventDefault","props","componentDidMount","match","params","token","history","componentWillReceiveProps","nextProps","expired","push","success_msg","render","auth","isAuthenticated","mapStateToProps","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {resetPassword, updatePassword} from '../actions/usersActions';\nimport InputGroup from '../common/InputGroup';\nimport NavBar from '../layouts/NavBar';\n\nexport class Reset extends Component {\n  state = {\n    password: '',\n    confirm_password: '',\n    success: null,\n    message: '',\n    user: null,\n    errors: {}\n  }\n  componentDidMount() {\n    this.props.resetPassword(this.props.match.params.token, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      user: nextProps.user\n    })\n    //console.log(nextProps);\n    if (typeof nextProps.errors.expired !== 'undefined') {\n      this.props.history.push('/users/forgot');\n    } else {\n      if (typeof nextProps.success.success_msg !== 'undefined') {\n        this.setState({\n          success: true,\n          message: nextProps.success.success_msg\n        })\n      } else {\n        this.setState({\n          success: false,\n          errors: nextProps.errors\n        })\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onReset = (e) => {\n    e.preventDefault();\n    const {user, password, confirm_password} = this.state;\n    this.props.updatePassword(user, password, confirm_password);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar/>\n        <div className=\"row mb-5 ml-auto mr-auto\">\n          <div className=\"col-md-6 m-auto\">\n            <img src=\"/img/logo.png\" className=\"mx-auto d-block\"\n              id=\"appLogo\" alt=\"logo\" width=\"200\" height=\"200\" />\n\n            <div className=\"card card-body shadow\">\n              <h1 className=\"text-center mb-3\">\n                <i className=\"fas fa-lock\">&nbsp;</i> Reset your password\n              </h1>\n              \n              {\n                this.state.success === null || !this.state.success ?\n                <form onSubmit={this.onReset}>\n                  \n                  <InputGroup htmlFor=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                      required={true}\n                    onChange={this.onChange}\n                    error={\n                      !this.state.errors.password ? false : this.state.errors.password\n                    }\n                    placeholder=\"Enter new password\" />\n\n                  <InputGroup htmlFor=\"password\"\n                    label=\"Confirm new password\"\n                    type=\"password\"\n                    id=\"confirm_password\"\n                    name=\"confirm_password\"\n                    required={true}\n                    onChange={this.onChange}\n                    error={\n                      !this.state.errors.confirm_password ? false : this.state.errors.confirm_password\n                    }\n                    placeholder=\"Confirm new password\" />\n\n                  <button type=\"submit\" id=\"btn-sign-in\" className=\"btn btn-primary btn-block\">Update</button>\n                </form>\n                :\n                  <div>\n                    <div className=\"alert alert-success alert-dismissible fade show\"\n                      role=\"alert\">\n                      <button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\n                      Your password has been updated.\n                    </div>\n                    <p className=\"lead\">\n                      <a href='/users/login'>\n                        Back to {this.props.auth.isAuthenticated ? 'dashboard' : 'log in'}\n                      </a>\n                    </p>\n                  </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  success: state.success,\n  user: state.users.user\n})\n\nexport default connect(mapStateToProps, {resetPassword, updatePassword})(Reset);\n"]},"metadata":{},"sourceType":"module"}