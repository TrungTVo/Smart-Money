{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn } from '@devexpress/dx-react-grid-bootstrap4'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.usd : currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur), Math.abs(value));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nconst BalanceFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, value >= 0 ? '' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.usd : currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur), Math.abs(value));\n};\n\nconst BalanceTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: BalanceFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}));\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeAddedRows = addedRows => {\n      const initialized = addedRows.map(row => Object.keys(row).length ? row : {\n        city: 'Tokio'\n      });\n      this.setState({\n        addedRows: initialized\n      });\n    };\n\n    this.changeEditingRowIds = editingRowIds => {\n      this.setState({\n        editingRowIds\n      });\n    };\n\n    this.changeRowChanges = rowChanges => {\n      this.setState({\n        rowChanges\n      });\n    };\n\n    this.commitChanges = ({\n      added,\n      changed,\n      deleted\n    }) => {\n      let rows = this.state.rows;\n\n      if (added) {\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n        rows = [...rows, ...added.map((row, index) => _objectSpread({\n          id: startingAddedId + index\n        }, row))];\n      }\n\n      if (changed) {\n        rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n      }\n\n      if (deleted) {\n        const deletedSet = new Set(deleted);\n        rows = rows.filter(row => !deletedSet.has(row.id));\n      }\n\n      this.setState({\n        rows\n      });\n    };\n\n    this.state = {\n      columns: [{\n        name: 'date',\n        title: 'Date'\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'balance',\n        title: 'Balance'\n      }, {\n        name: 'currency',\n        title: 'Currency'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 90\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'balance',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'currency',\n        align: 'right',\n        width: 70\n      }, {\n        columnName: 'category',\n        align: 'center',\n        width: 130\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'center',\n        width: 180\n      }],\n      rows: [{\n        date: 'April 14, 2019',\n        amount: 450,\n        category: 'Bills',\n        balance: 500,\n        currency: 'VND',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Jan 15, 2019',\n        amount: -550,\n        category: 'Groceries',\n        balance: 1500,\n        currency: 'EUR',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Aug 16, 2019',\n        amount: 250,\n        category: 'Cars',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Feb 14, 2019',\n        amount: -550,\n        category: 'Tuition',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: -150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          paymentColumns = _this$state.paymentColumns,\n          balanceColumns = _this$state.balanceColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage;\n    return React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(BalanceTypeProvider, {\n      for: balanceColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      editingRowIds: editingRowIds,\n      onEditingRowIdsChange: this.changeEditingRowIds,\n      rowChanges: rowChanges,\n      onRowChangesChange: this.changeRowChanges,\n      addedRows: addedRows,\n      onAddedRowsChange: this.changeAddedRows,\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(TableEditColumn, {\n      showAddCommand: !addedRows.length,\n      showEditCommand: true,\n      showDeleteCommand: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","PaymentFormatter","props","value","row","currency","color","usd","vnd","eur","Math","abs","PaymentTypeProvider","BalanceFormatter","BalanceTypeProvider","TableComponent","restProps","DataTable","PureComponent","constructor","changeAddedRows","addedRows","initialized","map","Object","keys","length","city","setState","changeEditingRowIds","editingRowIds","changeRowChanges","rowChanges","commitChanges","added","changed","deleted","rows","state","startingAddedId","id","index","deletedSet","Set","filter","has","columns","name","title","tableColumnExtensions","columnName","align","width","wordWrapEnabled","date","amount","category","balance","notes","payee","paymentColumns","balanceColumns","currentPage","pageSize","pageSizes","searchValue","changeCurrentPage","changePageSize","changeSearchValue","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn\n} from '@devexpress/dx-react-grid-bootstrap4';\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = (props) => {\n  const {value, row} = props;\n  const {currency} = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\nconst BalanceFormatter = (props) => {\n  const { value, row } = props;\n  const { currency } = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n    </b>\n  );\n}\n\nconst BalanceTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BalanceFormatter}\n    {...props}\n  />\n);\n\nconst TableComponent = ({ ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className=\"table-striped\"\n  />\n);\n\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'date', title: 'Date' },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'balance', title: 'Balance' },\n        { name: 'currency', title: 'Currency' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 90 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'balance', align: 'right', width: 110 },\n        { columnName: 'currency', align: 'right', width: 70 },\n        { columnName: 'category', align: 'center', width: 130 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'center', width: 180 }\n      ],\n      rows: [\n        {\n          date: 'April 14, 2019',\n          amount: 450,\n          category: 'Bills',\n          balance: 500,\n          currency: 'VND',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Jan 15, 2019',\n          amount: -550,\n          category: 'Groceries',\n          balance: 1500,\n          currency: 'EUR',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Aug 16, 2019',\n          amount: 250,\n          category: 'Cars',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Feb 14, 2019',\n          amount: -550,\n          category: 'Tuition',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: -150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        }\n      ],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n\n  }\n\n  changeAddedRows = (addedRows) => {\n    const initialized = addedRows.map(row => (Object.keys(row).length ? row : { city: 'Tokio' }));\n    this.setState({ addedRows: initialized });\n  }\n\n  changeEditingRowIds = (editingRowIds) => {\n    this.setState({ editingRowIds });\n  }\n\n  changeRowChanges = (rowChanges) => {\n    this.setState({ rowChanges });\n  }\n\n  commitChanges = ({ added, changed, deleted }) => {\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      rows = rows.filter(row => !deletedSet.has(row.id));\n    }\n    this.setState({ rows });\n  }\n\n  render() {\n    const {\n      rows, columns, tableColumnExtensions, searchValue,\n      paymentColumns, balanceColumns, pageSize, pageSizes, currentPage\n    } = this.state;\n\n    return (\n        <Grid rows={rows} columns={columns} >\n          <PagingState\n            defaultCurrentPage={currentPage}\n            onCurrentPageChange={this.changeCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={this.changePageSize}\n          />\n          <PaymentTypeProvider\n            for={paymentColumns}\n          />\n          <BalanceTypeProvider\n            for={balanceColumns}\n          />\n          <SearchState\n            value={searchValue}\n            onValueChange={this.changeSearchValue}\n          />\n          <IntegratedFiltering />\n          <Toolbar />\n          <SearchPanel />\n\n          <EditingState\n            editingRowIds={editingRowIds}\n            onEditingRowIdsChange={this.changeEditingRowIds}\n            rowChanges={rowChanges}\n            onRowChangesChange={this.changeRowChanges}\n            addedRows={addedRows}\n            onAddedRowsChange={this.changeAddedRows}\n            onCommitChanges={this.commitChanges}\n          />\n\n          <TableEditRow />\n          <TableEditColumn\n            showAddCommand={!addedRows.length}\n            showEditCommand\n            showDeleteCommand\n          />\n\n          <IntegratedPaging />\n          <Table columnExtensions={tableColumnExtensions} tableComponent={TableComponent} />\n          <TableHeaderRow />\n          <PagingPanel pageSizes={pageSizes} />\n        </Grid>\n    );\n\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}