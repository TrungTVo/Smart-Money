{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\n// import * as React from 'react';\n// import currencyTypes from '../currencyTypes/currencyTypes';\n// import {\n//   PagingState,\n//   IntegratedPaging,\n//   DataTypeProvider,\n//   SearchState,\n//   IntegratedFiltering,\n//   EditingState\n// } from '@devexpress/dx-react-grid';\n// import {\n//   Grid, Table,\n//   TableHeaderRow, PagingPanel,\n//   SearchPanel, Toolbar,\n//   TableEditRow,\n//   TableEditColumn\n// } from '@devexpress/dx-react-grid-bootstrap4';\n// //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n// const PaymentFormatter = (props) => {\n//   const {value, row} = props;\n//   const {currency} = row;\n//   return (\n//     <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n//       {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n//     </b>\n//   );\n// }\n// const PaymentTypeProvider = props => {\n//   return (\n//     <DataTypeProvider\n//       formatterComponent={PaymentFormatter}\n//       {...props}\n//     />\n//   );\n// }\n// const BalanceFormatter = (props) => {\n//   const { value, row } = props;\n//   const { currency } = row;\n//   return (\n//     <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n//       {value >= 0 ? '' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n//     </b>\n//   );\n// }\n// const BalanceTypeProvider = props => (\n//   <DataTypeProvider\n//     formatterComponent={BalanceFormatter}\n//     {...props}\n//   />\n// );\n// const TableComponent = ({ ...restProps }) => (\n//   <Table.Table\n//     {...restProps}\n//     className=\"table-striped\"\n//   />\n// );\n// const getRowId = row => {return row.id};\n// class DataTable extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       columns: [\n//         { name: 'date', title: 'Date' },\n//         { name: 'amount', title: 'Amount' },\n//         { name: 'category', title: 'Category' },\n//         { name: 'balance', title: 'Balance' },\n//         { name: 'currency', title: 'Currency' },\n//         { name: 'notes', title: 'Notes' },\n//         { name: 'payee', title: 'Payee' }\n//       ],\n//       tableColumnExtensions: [\n//         { columnName: 'date', align: 'center', width: 90 },\n//         { columnName: 'amount', align: 'right', width: 110 },\n//         { columnName: 'balance', align: 'right', width: 110 },\n//         { columnName: 'currency', align: 'right', width: 70 },\n//         { columnName: 'category', align: 'center', width: 130 },\n//         { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n//         { columnName: 'payee', align: 'center', width: 180 }\n//       ],\n//       rows: [\n//         {\n//           id: 1,\n//           date: 'April 14, 2019',\n//           amount: 450,\n//           category: 'Bills',\n//           balance: 500,\n//           currency: 'VND',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 2,\n//           date: 'Jan 15, 2019',\n//           amount: -550,\n//           category: 'Groceries',\n//           balance: 1500,\n//           currency: 'EUR',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 3,\n//           date: 'Aug 16, 2019',\n//           amount: 250,\n//           category: 'Cars',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: 'Short notes',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 4,\n//           date: 'Feb 14, 2019',\n//           amount: -550,\n//           category: 'Tuition',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: 'Short notes',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 5,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 6,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 7,\n//           date: 'May 14, 2019',\n//           amount: -150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 8,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 9,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 10,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         }\n//       ],\n//       paymentColumns: ['amount'],\n//       balanceColumns: ['balance'],\n//       currentPage: 0,\n//       pageSize: 10,\n//       pageSizes: [10, 20, 30],\n//       searchValue: ''\n//     };\n//     this.changeCurrentPage = currentPage => this.setState({ currentPage });\n//     this.changePageSize = pageSize => this.setState({ pageSize });\n//     this.changeSearchValue = value => this.setState({ searchValue: value });\n//     this.commitChanges = this.commitChanges.bind(this);\n//   }\n//   commitChanges({ added, changed, deleted }) {\n//     let { rows } = this.state;\n//     if (added) {\n//       const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n//       rows = [\n//         ...rows,\n//         ...added.map((row, index) => ({\n//           id: startingAddedId + index,\n//           ...row,\n//         })),\n//       ];\n//     }\n//     if (changed) {\n//       rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n//     }\n//     if (deleted) {\n//       const deletedSet = new Set(deleted);\n//       rows = rows.filter(row => !deletedSet.has(row.id));\n//     }\n//     this.setState({ rows });\n//   }\n//   render() {\n//     const {\n//       rows, columns, tableColumnExtensions, searchValue,\n//       paymentColumns, balanceColumns, pageSize, pageSizes, currentPage,\n//     } = this.state;\n//     return (\n//       <Grid rows={rows} columns={columns} getRowId={getRowId} >\n//           <PagingState\n//             defaultCurrentPage={currentPage}\n//             onCurrentPageChange={this.changeCurrentPage}\n//             pageSize={pageSize}\n//             onPageSizeChange={this.changePageSize}\n//           />\n//           <PaymentTypeProvider\n//             for={paymentColumns}\n//           />\n//           <BalanceTypeProvider\n//             for={balanceColumns}\n//           />\n//           <SearchState\n//             value={searchValue}\n//             onValueChange={this.changeSearchValue}\n//           />\n//           <IntegratedFiltering />\n//           <Toolbar />\n//           <SearchPanel />\n//           <EditingState\n//             onCommitChanges={this.commitChanges}\n//           />\n//           <TableEditRow />\n//           <TableEditColumn\n//             showAddCommand\n//             showEditCommand\n//             showDeleteCommand\n//           />\n//           <IntegratedPaging />\n//           <Table columnExtensions={tableColumnExtensions} tableComponent={TableComponent} />\n//           <TableHeaderRow />\n//           <PagingPanel pageSizes={pageSizes} />\n//         </Grid>\n//     );\n//   }\n// }\n// export default DataTable;\nimport * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn } from '@devexpress/dx-react-grid-bootstrap4'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.usd : currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur), Math.abs(value));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }));\n};\n\nconst BalanceFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, value >= 0 ? '' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.usd : currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur), Math.abs(value));\n};\n\nconst BalanceTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: BalanceFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 334\n  },\n  __self: this\n}));\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => {\n  return row.id;\n};\n\nexport default class DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        name: 'date',\n        title: 'Date'\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'balance',\n        title: 'Balance'\n      }, {\n        name: 'currency',\n        title: 'Currency'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      rows: [{\n        id: 1,\n        date: 'April 14, 2019',\n        amount: 450,\n        category: 'Bills',\n        balance: 500,\n        currency: 'VND',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 2,\n        date: 'Jan 15, 2019',\n        amount: -550,\n        category: 'Groceries',\n        balance: 1500,\n        currency: 'EUR',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 3,\n        date: 'Aug 16, 2019',\n        amount: 250,\n        category: 'Cars',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        id: 4,\n        date: 'Feb 14, 2019',\n        amount: -550,\n        category: 'Tuition',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        id: 5,\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 6,\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 7,\n        date: 'May 14, 2019',\n        amount: -150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 8,\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 9,\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 10,\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }]\n    };\n    this.commitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    let rows = this.state.rows;\n\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [...rows, ...added.map((row, index) => _objectSpread({\n        id: startingAddedId + index\n      }, row))];\n    }\n\n    if (changed) {\n      rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n    }\n\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      rows = rows.filter(row => !deletedSet.has(row.id));\n    }\n\n    this.setState({\n      rows\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(EditingState, {\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }), React.createElement(TableEditColumn, {\n      showAddCommand: true,\n      showEditCommand: true,\n      showDeleteCommand: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","PaymentFormatter","props","value","row","currency","color","usd","vnd","eur","Math","abs","PaymentTypeProvider","BalanceFormatter","BalanceTypeProvider","TableComponent","restProps","getRowId","id","DataTable","PureComponent","constructor","state","columns","name","title","rows","date","amount","category","balance","notes","payee","commitChanges","bind","added","changed","deleted","startingAddedId","length","map","index","deletedSet","Set","filter","has","setState","render"],"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","sourcesContent":["// import * as React from 'react';\n// import currencyTypes from '../currencyTypes/currencyTypes';\n// import {\n//   PagingState,\n//   IntegratedPaging,\n//   DataTypeProvider,\n//   SearchState,\n//   IntegratedFiltering,\n//   EditingState\n// } from '@devexpress/dx-react-grid';\n\n// import {\n//   Grid, Table,\n//   TableHeaderRow, PagingPanel,\n//   SearchPanel, Toolbar,\n//   TableEditRow,\n//   TableEditColumn\n// } from '@devexpress/dx-react-grid-bootstrap4';\n\n\n// //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n// const PaymentFormatter = (props) => {\n//   const {value, row} = props;\n//   const {currency} = row;\n//   return (\n//     <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n//       {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n//     </b>\n//   );\n// }\n\n// const PaymentTypeProvider = props => {\n//   return (\n//     <DataTypeProvider\n//       formatterComponent={PaymentFormatter}\n//       {...props}\n//     />\n//   );\n// }\n\n// const BalanceFormatter = (props) => {\n//   const { value, row } = props;\n//   const { currency } = row;\n//   return (\n//     <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n//       {value >= 0 ? '' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n//     </b>\n//   );\n// }\n\n// const BalanceTypeProvider = props => (\n//   <DataTypeProvider\n//     formatterComponent={BalanceFormatter}\n//     {...props}\n//   />\n// );\n\n// const TableComponent = ({ ...restProps }) => (\n//   <Table.Table\n//     {...restProps}\n//     className=\"table-striped\"\n//   />\n// );\n\n// const getRowId = row => {return row.id};\n\n// class DataTable extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       columns: [\n//         { name: 'date', title: 'Date' },\n//         { name: 'amount', title: 'Amount' },\n//         { name: 'category', title: 'Category' },\n//         { name: 'balance', title: 'Balance' },\n//         { name: 'currency', title: 'Currency' },\n//         { name: 'notes', title: 'Notes' },\n//         { name: 'payee', title: 'Payee' }\n//       ],\n//       tableColumnExtensions: [\n//         { columnName: 'date', align: 'center', width: 90 },\n//         { columnName: 'amount', align: 'right', width: 110 },\n//         { columnName: 'balance', align: 'right', width: 110 },\n//         { columnName: 'currency', align: 'right', width: 70 },\n//         { columnName: 'category', align: 'center', width: 130 },\n//         { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n//         { columnName: 'payee', align: 'center', width: 180 }\n//       ],\n//       rows: [\n//         {\n//           id: 1,\n//           date: 'April 14, 2019',\n//           amount: 450,\n//           category: 'Bills',\n//           balance: 500,\n//           currency: 'VND',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 2,\n//           date: 'Jan 15, 2019',\n//           amount: -550,\n//           category: 'Groceries',\n//           balance: 1500,\n//           currency: 'EUR',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 3,\n//           date: 'Aug 16, 2019',\n//           amount: 250,\n//           category: 'Cars',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: 'Short notes',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 4,\n//           date: 'Feb 14, 2019',\n//           amount: -550,\n//           category: 'Tuition',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: 'Short notes',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 5,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 6,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 7,\n//           date: 'May 14, 2019',\n//           amount: -150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 8,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 9,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         },\n//         {\n//           id: 10,\n//           date: 'May 14, 2019',\n//           amount: 150,\n//           category: 'Drinks',\n//           balance: 500,\n//           currency: 'USD',\n//           notes: '',\n//           payee: 'Trung Vo'\n//         }\n//       ],\n//       paymentColumns: ['amount'],\n//       balanceColumns: ['balance'],\n//       currentPage: 0,\n//       pageSize: 10,\n//       pageSizes: [10, 20, 30],\n//       searchValue: ''\n//     };\n\n//     this.changeCurrentPage = currentPage => this.setState({ currentPage });\n//     this.changePageSize = pageSize => this.setState({ pageSize });\n//     this.changeSearchValue = value => this.setState({ searchValue: value });\n//     this.commitChanges = this.commitChanges.bind(this);\n//   }\n\n//   commitChanges({ added, changed, deleted }) {\n//     let { rows } = this.state;\n//     if (added) {\n//       const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n//       rows = [\n//         ...rows,\n//         ...added.map((row, index) => ({\n//           id: startingAddedId + index,\n//           ...row,\n//         })),\n//       ];\n//     }\n//     if (changed) {\n//       rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n//     }\n//     if (deleted) {\n//       const deletedSet = new Set(deleted);\n//       rows = rows.filter(row => !deletedSet.has(row.id));\n//     }\n//     this.setState({ rows });\n//   }\n\n//   render() {\n//     const {\n//       rows, columns, tableColumnExtensions, searchValue,\n//       paymentColumns, balanceColumns, pageSize, pageSizes, currentPage,\n//     } = this.state;\n  \n//     return (\n//       <Grid rows={rows} columns={columns} getRowId={getRowId} >\n//           <PagingState\n//             defaultCurrentPage={currentPage}\n//             onCurrentPageChange={this.changeCurrentPage}\n//             pageSize={pageSize}\n//             onPageSizeChange={this.changePageSize}\n//           />\n//           <PaymentTypeProvider\n//             for={paymentColumns}\n//           />\n//           <BalanceTypeProvider\n//             for={balanceColumns}\n//           />\n//           <SearchState\n//             value={searchValue}\n//             onValueChange={this.changeSearchValue}\n//           />\n//           <IntegratedFiltering />\n//           <Toolbar />\n//           <SearchPanel />\n\n//           <EditingState\n//             onCommitChanges={this.commitChanges}\n//           />\n\n//           <TableEditRow />\n//           <TableEditColumn\n//             showAddCommand\n//             showEditCommand\n//             showDeleteCommand\n//           />\n          \n\n//           <IntegratedPaging />\n//           <Table columnExtensions={tableColumnExtensions} tableComponent={TableComponent} />\n//           <TableHeaderRow />\n//           <PagingPanel pageSizes={pageSizes} />\n//         </Grid>\n//     );\n\n//   }\n// }\n\n// export default DataTable;\n\n\nimport * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn\n} from '@devexpress/dx-react-grid-bootstrap4';\n\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = (props) => {\n  const {value, row} = props;\n  const {currency} = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\nconst BalanceFormatter = (props) => {\n  const { value, row } = props;\n  const { currency } = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '' : '-'}<small>{currency === 'USD' ? currencyTypes.usd : (currency === 'VND' ? currencyTypes.vnd : currencyTypes.eur)}</small>{Math.abs(value)}\n    </b>\n  );\n}\n\nconst BalanceTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BalanceFormatter}\n    {...props}\n  />\n);\n\nconst TableComponent = ({ ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className=\"table-striped\"\n  />\n);\n\nconst getRowId = row => {return row.id};\n\nexport default class DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'date', title: 'Date' },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'balance', title: 'Balance' },\n        { name: 'currency', title: 'Currency' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      rows: [\n        {\n          id: 1,\n          date: 'April 14, 2019',\n          amount: 450,\n          category: 'Bills',\n          balance: 500,\n          currency: 'VND',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 2,\n          date: 'Jan 15, 2019',\n          amount: -550,\n          category: 'Groceries',\n          balance: 1500,\n          currency: 'EUR',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 3,\n          date: 'Aug 16, 2019',\n          amount: 250,\n          category: 'Cars',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 4,\n          date: 'Feb 14, 2019',\n          amount: -550,\n          category: 'Tuition',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 5,\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 6,\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 7,\n          date: 'May 14, 2019',\n          amount: -150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 8,\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 9,\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 10,\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        }\n      ]\n    };\n\n    this.commitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({ added, changed, deleted }) {\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      rows = rows.filter(row => !deletedSet.has(row.id));\n    }\n    this.setState({ rows });\n  }\n\n  render() {\n    const { rows, columns } = this.state;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          rows={rows}\n          columns={columns}\n          getRowId={getRowId}\n        >\n          <EditingState\n            onCommitChanges={this.commitChanges}\n          />\n          <Table />\n          <TableHeaderRow />\n          <TableEditRow />\n          <TableEditColumn\n            showAddCommand\n            showEditCommand\n            showDeleteCommand\n          />\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}