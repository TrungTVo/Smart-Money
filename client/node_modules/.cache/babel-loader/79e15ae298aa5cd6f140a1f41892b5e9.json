{"ast":null,"code":"import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess'; // load all transactions\n\nexport const loadTransactions = account => dispatch => {\n  dispatch(transactionsLoading());\n  axios.get(\"/accounts/\".concat(account._id, \"/transactions/all\")).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: actions.GET_ALL_TRANSACTIONS,\n      payload: {\n        transactions: res.data,\n        account: account\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // add new transaction\n\nexport const addTransaction = transaction => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearSuccess());\n  axios.post(\"/accounts/\".concat(transaction.bankAccount, \"/transactions/add\"), transaction).then(res => {\n    dispatch({\n      type: actions.ADD_TRANSACTION,\n      payload: {\n        transaction: res.data.new_transaction,\n        account: transaction.bankAccount\n      }\n    });\n    dispatch({\n      type: actions.GET_ADD_SUCCESS,\n      payload: res.data.success_msg\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // set transactions loading\n\nconst transactionsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_TRANSACTIONS_LOADING\n  });\n};","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/actions/transactionActions.js"],"names":["axios","actions","clearErrors","clearSuccess","loadTransactions","account","dispatch","transactionsLoading","get","_id","then","res","console","log","data","type","GET_ALL_TRANSACTIONS","payload","transactions","catch","err","GET_ERRORS","response","addTransaction","transaction","post","bankAccount","ADD_TRANSACTION","new_transaction","GET_ADD_SUCCESS","success_msg","GET_TRANSACTIONS_LOADING"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mBAA1C,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AACvDA,EAAAA,QAAQ,CAACC,mBAAmB,EAApB,CAAR;AACAP,EAAAA,KAAK,CAACQ,GAAN,qBAAuBH,OAAO,CAACI,GAA/B,wBACGC,IADH,CACQC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,OAAO,CAACe,oBADP;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAEP,GAAG,CAACG,IADX;AAEPT,QAAAA,OAAO,EAAEA;AAFF;AAFF,KAAD,CAAR;AAOD,GAVH,EAWGc,KAXH,CAWSC,GAAG,IAAI;AACZd,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,OAAO,CAACoB,UADP;AAEPJ,MAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAR;AAID,GAhBH;AAiBD,CAnBM,C,CAqBP;;AACA,OAAO,MAAMS,cAAc,GAAIC,WAAD,IAAiBlB,QAAQ,IAAI;AACzDA,EAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACAI,EAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AAEAH,EAAAA,KAAK,CAACyB,IAAN,qBAAwBD,WAAW,CAACE,WAApC,wBAAoEF,WAApE,EACGd,IADH,CACQC,GAAG,IAAI;AACXL,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,OAAO,CAAC0B,eADP;AAEPV,MAAAA,OAAO,EAAE;AACPO,QAAAA,WAAW,EAAEb,GAAG,CAACG,IAAJ,CAASc,eADf;AAEPvB,QAAAA,OAAO,EAAEmB,WAAW,CAACE;AAFd;AAFF,KAAD,CAAR;AAOApB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,OAAO,CAAC4B,eADP;AAEPZ,MAAAA,OAAO,EAAEN,GAAG,CAACG,IAAJ,CAASgB;AAFX,KAAD,CAAR;AAID,GAbH,EAcGX,KAdH,CAcSC,GAAG,IAAI;AACZd,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,OAAO,CAACoB,UADP;AAEPJ,MAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAR;AAID,GAnBH;AAoBD,CAxBM,C,CA2BP;;AACA,MAAMP,mBAAmB,GAAG,MAAMD,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,OAAO,CAAC8B;AADP,GAAD,CAAR;AAGD,CAJD","sourcesContent":["import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess';\n\n// load all transactions\nexport const loadTransactions = (account) => dispatch => {\n  dispatch(transactionsLoading());\n  axios.get(`/accounts/${account._id}/transactions/all`)\n    .then(res => {\n      console.log(res.data)\n      dispatch({\n        type: actions.GET_ALL_TRANSACTIONS,\n        payload: {\n          transactions: res.data,\n          account: account\n        }\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// add new transaction\nexport const addTransaction = (transaction) => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearSuccess());\n  \n  axios.post(`/accounts/${transaction.bankAccount}/transactions/add`, transaction)\n    .then(res => {\n      dispatch({\n        type: actions.ADD_TRANSACTION,\n        payload: {\n          transaction: res.data.new_transaction,\n          account: transaction.bankAccount\n        }\n      })\n      dispatch({\n        type: actions.GET_ADD_SUCCESS,\n        payload: res.data.success_msg\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n\n// set transactions loading\nconst transactionsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_TRANSACTIONS_LOADING\n  })\n}\n"]},"metadata":{},"sourceType":"module"}