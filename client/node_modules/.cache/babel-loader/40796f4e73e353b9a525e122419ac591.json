{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/password-reset/Reset.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../actions/usersActions';\nimport InputGroup from '../common/InputGroup';\nexport class Reset extends Component {\n  componentDidMount() {\n    this.props.resetPassword(this.props.match.params.token, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row mb-5 ml-auto mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/img/logo.png\",\n      className: \"mx-auto d-block\",\n      id: \"appLogo\",\n      alt: \"logo\",\n      width: \"200\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card card-body shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"\\xA0\"), \" Reset your password\"), React.createElement(\"form\", {\n      action: \"/users/reset/<%= typeof user != 'undefined'? user.resetPasswordToken : token %>\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      htmlFor: \"password\",\n      label: \"New password\",\n      type: \"password\",\n      id: \"resetPassword1\",\n      name: \"resetPassword1\",\n      onChange: this.onChange,\n      error: this.state.success ? false : this.state.message,\n      placeholder: \"Enter new password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"password\",\n      label: \"Confirm new password\",\n      type: \"password\",\n      id: \"resetPassword2\",\n      name: \"resetPassword2\",\n      onChange: this.onChange,\n      error: this.state.success ? false : this.state.message,\n      placeholder: \"Confirm new password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"btn-sign-in\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Update\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  success: state.success,\n  user: state.users.user\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword\n})(Reset);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/password-reset/Reset.js"],"names":["React","Component","connect","resetPassword","InputGroup","Reset","componentDidMount","props","match","params","token","history","componentWillReceiveProps","nextProps","console","log","render","onChange","state","success","message","mapStateToProps","errors","user","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {resetPassword} from '../actions/usersActions';\nimport InputGroup from '../common/InputGroup';\n\nexport class Reset extends Component {\n  \n  componentDidMount() {\n    this.props.resetPassword(this.props.match.params.token, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n  }\n\n  render() {\n    return (\n      <div className=\"row mb-5 ml-auto mr-auto\">\n        <div className=\"col-md-6 m-auto\">\n          <img src=\"/img/logo.png\" className=\"mx-auto d-block\"\n            id=\"appLogo\" alt=\"logo\" width=\"200\" height=\"200\" />\n\n          <div className=\"card card-body shadow\">\n            <h1 className=\"text-center mb-3\">\n              <i className=\"fas fa-lock\">&nbsp;</i> Reset your password\n            </h1>\n              \n            <form action=\"/users/reset/<%= typeof user != 'undefined'? user.resetPasswordToken : token %>\"\n                method=\"POST\">\n              \n              <InputGroup htmlFor=\"password\"\n                label=\"New password\"\n                type=\"password\"\n                id=\"resetPassword1\"\n                name=\"resetPassword1\"\n                onChange={this.onChange}\n                error={\n                  this.state.success ? false : this.state.message\n                }\n                placeholder=\"Enter new password\" />\n\n              <InputGroup htmlFor=\"password\"\n                label=\"Confirm new password\"\n                type=\"password\"\n                id=\"resetPassword2\"\n                name=\"resetPassword2\"\n                onChange={this.onChange}\n                error={\n                  this.state.success ? false : this.state.message\n                }\n                placeholder=\"Confirm new password\" />\n\n              <button type=\"submit\" id=\"btn-sign-in\" className=\"btn btn-primary btn-block\">Update</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  success: state.success,\n  user: state.users.user\n})\n\nexport default connect(mapStateToProps, {resetPassword})(Reset);\n"]},"metadata":{},"sourceType":"module"}