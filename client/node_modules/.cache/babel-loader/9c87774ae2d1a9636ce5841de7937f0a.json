{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport NavBar from './layouts/NavBar';\nimport Main from './layouts/Main';\nimport Footer from './layouts/Footer';\nimport Login from './login/Login';\nimport Register from './login/Register'; //import Reset from './password-reset/Reset';\n\nimport Contact from './layouts/Contact';\nimport Forgot from './password-reset/Forgot';\nimport Dashboard from './layouts/Dashboard';\nimport jwt_decode from 'jwt-decode';\nimport store from './store';\nimport * as actions from './actions/types';\nimport axios from 'axios';\nimport { logoutUser } from './actions/usersActions'; // Check for token\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  // Apply to every request\n  axios.defaults.headers.common['Authorization'] = localStorage.token; // Decode token and get user info and exp\n\n  const decoded = jwt_decode(localStorage.jwtToken); // set current user\n\n  const user = {\n    name: decoded.name,\n    email: decoded.email,\n    imageUrl: decoded.picture // Set user and isAuthenticated\n\n  };\n  store.dispatch({\n    type: actions.SET_CURRENT_USER,\n    payload: user\n  }); // Check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = '/users/login';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      strict: true,\n      component: Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/login\",\n      strict: true,\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/register\",\n      strict: true,\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/forgot\",\n      strict: true,\n      component: Forgot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/dashboard\",\n      strict: true,\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/contact\",\n      strict: true,\n      component: Contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/App.js"],"names":["React","Component","Provider","BrowserRouter","Route","NavBar","Main","Footer","Login","Register","Contact","Forgot","Dashboard","jwt_decode","store","actions","axios","logoutUser","localStorage","jwtToken","defaults","headers","common","token","decoded","user","name","email","imageUrl","picture","dispatch","type","SET_CURRENT_USER","payload","currentTime","Date","now","exp","window","location","href","App","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport NavBar from './layouts/NavBar';\nimport Main from './layouts/Main';\nimport Footer from './layouts/Footer';\nimport Login from './login/Login';\nimport Register from './login/Register';\n//import Reset from './password-reset/Reset';\nimport Contact from './layouts/Contact';\nimport Forgot from './password-reset/Forgot';\nimport Dashboard from './layouts/Dashboard';\nimport jwt_decode from 'jwt-decode';\nimport store from './store';\nimport * as actions from './actions/types';\nimport axios from 'axios';\nimport {logoutUser} from './actions/usersActions';\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  // Apply to every request\n  axios.defaults.headers.common['Authorization'] = localStorage.token;\n  \n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n\n  // set current user\n  const user = {\n    name: decoded.name,\n    email: decoded.email,\n    imageUrl: decoded.picture\n  }\n\n  // Set user and isAuthenticated\n  store.dispatch({\n    type: actions.SET_CURRENT_USER,\n    payload: user\n  });\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    \n    // Redirect to login\n    window.location.href = '/users/login';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <NavBar/>\n            <Route exact path='/' strict component={Main} />\n            <Route exact path='/users/login' strict component={Login} />\n            <Route exact path='/users/register' strict component={Register} />\n            <Route exact path='/users/forgot' strict component={Forgot} />\n            <Route exact path='/users/dashboard' strict component={Dashboard} />\n            <Route exact path='/users/contact' strict component={Contact} />\n            <Footer/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}