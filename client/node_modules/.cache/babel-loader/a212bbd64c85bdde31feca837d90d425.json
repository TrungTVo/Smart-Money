{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTableSmall.js\";\nimport * as React from 'react';\nimport { currencyTypes, dateConverter, dateLookup } from '../dictionary/dictionary';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn, TableFixedColumns } from '@devexpress/dx-react-grid-bootstrap4'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.USD : currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\n\n\nconst DateFormatter = props => {\n  const row = props.row;\n  const date = row.date;\n  const split = date.split('/');\n  const y = split[0].trim();\n  const m = split[1].trim();\n  const d = split[2].trim();\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, y + '/' + m.padStart(2, '0') + '/' + d.padStart(2, '0'));\n};\n\nconst DateTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: DateFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}));\n/*\n==================================================================\nTable styles\n==================================================================\n*/\n\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => row.id;\n\nconst toolComponent = ({\n  children\n}) => {\n  return React.createElement(\"div\", {\n    className: \"font-weight-bold bg-primary text-white p-3\",\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Current balance: $1,000\", children);\n};\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\n\nconst CommandButton = ({\n  onExecute,\n  icon,\n  text,\n  hint,\n  color\n}) => {\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link btn-sm\",\n    style: text !== 'Add' ? {\n      padding: 11\n    } : {},\n    onClick: e => {\n      onExecute();\n      e.stopPropagation();\n    },\n    title: hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color || 'undefined',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, icon ? React.createElement(\"i\", {\n    className: \"fas fa-\".concat(icon),\n    style: {\n      marginRight: text ? 5 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }) : null, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, text)));\n};\n\nconst AddButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"plus\",\n  hint: \"Create new row\",\n  onExecute: onExecute,\n  text: 'Add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n});\n\nconst EditButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"pen\",\n  hint: \"Edit row\",\n  color: \"text-warning\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n});\n\nconst DeleteButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"trash\",\n  hint: \"Delete row\",\n  color: \"text-danger\",\n  onExecute: () => {\n    // eslint-disable-next-line\n    if (window.confirm('Are you sure you want to delete this row?')) {\n      onExecute();\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n});\n\nconst CommitButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"check\",\n  hint: \"Save changes\",\n  color: \"text-success\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n});\n\nconst CancelButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"times\",\n  hint: \"Cancel changes\",\n  color: \"text-danger\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n});\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton\n};\n\nconst Command = ({\n  id,\n  onExecute\n}) => {\n  const ButtonComponent = commandComponents[id];\n  return React.createElement(ButtonComponent, {\n    onExecute: onExecute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  });\n};\n\nconst SortingIcon = ({\n  direction\n}) => React.createElement(\"span\", {\n  className: \"fas fa-arrow-\".concat(direction === 'asc' ? 'up' : 'down'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178\n  },\n  __self: this\n});\n\nconst SortLabel = ({\n  onSort,\n  children,\n  direction\n}) => {\n  return React.createElement(\"a\", {\n    className: \"font-weight-bold\",\n    onClick: onSort,\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, children, direction && React.createElement(SortingIcon, {\n    direction: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }));\n};\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\n\nconst LookupEditCell = ({\n  column,\n  selectColumns_values,\n  value,\n  onValueChange\n}) => React.createElement(\"td\", {\n  style: {\n    verticalAlign: 'middle',\n    padding: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  className: \"form-control\",\n  style: {\n    width: '100%',\n    textAlign: column.align\n  },\n  value: value,\n  onChange: e => onValueChange(e.target.value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210\n  },\n  __self: this\n}, selectColumns_values.map(val => React.createElement(\"option\", {\n  key: val,\n  value: val,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217\n  },\n  __self: this\n}, val))));\n\nconst Cell = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }));\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = props => {\n  const column = props.column;\n  const selectColumns_values = selectColumns[column.name];\n\n  if (selectColumns_values) {\n    return React.createElement(LookupEditCell, Object.assign({}, props, {\n      selectColumns_values: selectColumns_values,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(TableEditRow.Cell, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }));\n};\n\nexport default class DataTableSmall extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeAddedRows = addedRows => {\n      const d = new Date();\n      this.setState({\n        addedRows: addedRows.map(row => Object.keys(row).length ? row : {\n          date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2, '0') + '/' + String(d.getDate()).padStart(2, '0'),\n          amount: 0.0,\n          currency: Object.keys(currencyTypes)[0]\n        })\n      });\n    };\n\n    this.changeEditingRowIds = editingRowIds => {\n      this.setState({\n        editingRowIds\n      });\n    };\n\n    this.changeRowChanges = rowChanges => {\n      this.setState({\n        rowChanges\n      });\n    };\n\n    this.commitChanges = ({\n      added,\n      changed,\n      deleted\n    }) => {\n      let rows = this.state.rows;\n\n      if (added) {\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n        rows = [...rows, ...added.map((row, index) => _objectSpread({\n          id: startingAddedId + index\n        }, row))];\n      }\n\n      if (changed) {\n        rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n      }\n\n      if (deleted) {\n        rows = this.deleteRows(deleted);\n      }\n\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteRows = deletedIds => {\n      const rows = this.state.rows.slice();\n      deletedIds.forEach(rowId => {\n        const index = rows.findIndex(row => row.id === rowId);\n\n        if (index > -1) {\n          rows.splice(index, 1);\n        }\n      });\n      return rows;\n    };\n\n    this.state = {\n      columns: [{\n        name: 'date',\n        title: \"Date\"\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 100\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'category',\n        align: 'center',\n        width: 130\n      }],\n      rows: [{\n        id: 1,\n        date: '2019/09/14',\n        amount: 450,\n        category: 'Bills'\n      }, {\n        id: 2,\n        date: '2019/08/15',\n        amount: -550,\n        category: 'Groceries'\n      }, {\n        id: 3,\n        date: '2019/07/16',\n        amount: 250,\n        category: 'Cars'\n      }, {\n        id: 4,\n        date: '2019/06/14',\n        amount: -550,\n        category: 'Tuition'\n      }, {\n        id: 5,\n        date: '2019/05/14',\n        amount: 150,\n        category: 'Drinks'\n      }, {\n        id: 6,\n        date: '2019/05/10',\n        amount: 150,\n        category: 'Drinks'\n      }, {\n        id: 7,\n        date: '2019/04/14',\n        amount: -150,\n        category: 'Drinks'\n      }, {\n        id: 8,\n        date: '2019/03/14',\n        amount: 150,\n        category: 'Drinks'\n      }, {\n        id: 9,\n        date: '2019/03/01',\n        amount: 150,\n        category: 'Drinks'\n      }, {\n        id: 10,\n        date: '2019/02/14',\n        amount: 150,\n        category: 'Drinks'\n      }],\n      sorting: [{\n        columnName: 'date',\n        direction: 'desc'\n      }],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      leftFixedColumns: [],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n\n    this.changeSorting = sorting => this.setState({\n      sorting\n    });\n  } // update rows after adding\n\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          sorting = _this$state.sorting,\n          paymentColumns = _this$state.paymentColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage,\n          leftFixedColumns = _this$state.leftFixedColumns,\n          editingRowIds = _this$state.editingRowIds,\n          rowChanges = _this$state.rowChanges,\n          addedRows = _this$state.addedRows;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), React.createElement(DateTypeProvider, {\n      for: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      rootComponent: toolComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      sorting: sorting,\n      defaultSorting: sorting,\n      onSortingChange: this.changeSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      editingRowIds: editingRowIds,\n      onEditingRowIdsChange: this.changeEditingRowIds,\n      rowChanges: rowChanges,\n      onRowChangesChange: this.changeRowChanges,\n      addedRows: addedRows,\n      onAddedRowsChange: this.changeAddedRows,\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      sortLabelComponent: SortLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      cellComponent: EditCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(TableEditColumn, {\n      width: 80,\n      showAddCommand: !addedRows.length,\n      showEditCommand: true,\n      showDeleteCommand: true,\n      commandComponent: Command,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(TableFixedColumns, {\n      leftColumns: leftFixedColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTableSmall.js"],"names":["React","currencyTypes","dateConverter","dateLookup","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","SortingState","IntegratedSorting","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","TableFixedColumns","numberWithCommas","x","toString","replace","PaymentFormatter","props","value","row","currency","color","USD","VND","EUR","Math","abs","PaymentTypeProvider","DateFormatter","date","split","y","trim","m","d","padStart","DateTypeProvider","TableComponent","restProps","getRowId","id","toolComponent","children","display","alignItems","CommandButton","onExecute","icon","text","hint","padding","e","stopPropagation","marginRight","AddButton","EditButton","DeleteButton","window","confirm","CommitButton","CancelButton","commandComponents","add","edit","delete","commit","cancel","Command","ButtonComponent","SortingIcon","direction","SortLabel","onSort","cursor","LookupEditCell","column","selectColumns_values","onValueChange","verticalAlign","width","textAlign","align","target","map","val","Cell","selectColumns","Object","keys","EditCell","name","DataTableSmall","PureComponent","constructor","changeAddedRows","addedRows","Date","setState","length","getFullYear","String","getMonth","getDate","amount","changeEditingRowIds","editingRowIds","changeRowChanges","rowChanges","commitChanges","added","changed","deleted","rows","state","startingAddedId","index","deleteRows","deletedIds","slice","forEach","rowId","findIndex","splice","columns","title","tableColumnExtensions","columnName","category","sorting","paymentColumns","currentPage","pageSize","pageSizes","searchValue","leftFixedColumns","changeCurrentPage","changePageSize","changeSearchValue","changeSorting","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { currencyTypes, dateConverter, dateLookup } from '../dictionary/dictionary';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState,\n  SortingState,\n  IntegratedSorting\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn,\n  TableFixedColumns\n} from '@devexpress/dx-react-grid-bootstrap4';\n\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = (props) => {\n  const { value, row } = props;\n  const { currency } = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.USD : (currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\nconst DateFormatter = (props) => {\n  const { row } = props;\n  const { date } = row;\n  const split = date.split('/');\n  const y = split[0].trim();\n  const m = split[1].trim();\n  const d = split[2].trim();\n  return (\n    <span >\n      {y + '/' + m.padStart(2, '0') + '/' + d.padStart(2, '0')}\n    </span>\n  );\n}\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={DateFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nTable styles\n==================================================================\n*/\nconst TableComponent = ({ ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className=\"table-striped\"\n  />\n);\n\nconst getRowId = row => row.id;\n\nconst toolComponent = ({ children }) => {\n  return (\n    <div className='font-weight-bold bg-primary text-white p-3' style={{ display: 'flex', alignItems: 'center' }}>\n      Current balance: $1,000{children}\n    </div>\n  )\n}\n\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\nconst CommandButton = ({\n  onExecute, icon, text, hint, color,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-link btn-sm\"\n      style={text !== 'Add' ? { padding: 11 } : {}}\n      onClick={(e) => {\n        onExecute();\n        e.stopPropagation();\n      }}\n      title={hint}\n    >\n      <span className={color || 'undefined'}>\n        {icon ? <i className={`fas fa-${icon}`} style={{ marginRight: text ? 5 : 0 }} /> : null}\n        <b>{text}</b>\n      </span>\n    </button>\n  );\n}\n\nconst AddButton = ({ onExecute }) => (\n  <CommandButton icon=\"plus\" hint=\"Create new row\" onExecute={onExecute} text={'Add'} />\n);\n\nconst EditButton = ({ onExecute }) => (\n  <CommandButton icon=\"pen\" hint=\"Edit row\" color=\"text-warning\" onExecute={onExecute} />\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <CommandButton\n    icon=\"trash\"\n    hint=\"Delete row\"\n    color=\"text-danger\"\n    onExecute={() => {\n      // eslint-disable-next-line\n      if (window.confirm('Are you sure you want to delete this row?')) {\n        onExecute();\n      }\n    }}\n  />\n);\n\nconst CommitButton = ({ onExecute }) => (\n  <CommandButton icon=\"check\" hint=\"Save changes\" color=\"text-success\" onExecute={onExecute} />\n);\n\nconst CancelButton = ({ onExecute }) => (\n  <CommandButton icon=\"times\" hint=\"Cancel changes\" color=\"text-danger\" onExecute={onExecute} />\n);\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const ButtonComponent = commandComponents[id];\n  return (\n    <ButtonComponent\n      onExecute={onExecute}\n    />\n  );\n};\n\nconst SortingIcon = ({ direction }) => (\n  <span\n    className={`fas fa-arrow-${direction === 'asc' ? 'up' : 'down'}`}\n  />\n);\n\nconst SortLabel = ({ onSort, children, direction }) => {\n  return (\n    <a\n      className=\"font-weight-bold\"\n      onClick={onSort}\n      style={{ cursor: 'pointer' }}\n    >\n      {children}\n      {(direction && <SortingIcon direction={direction} />)}\n    </a>\n  );\n}\n\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\nconst LookupEditCell = ({\n  column, selectColumns_values, value, onValueChange,\n}) => (\n    <td\n      style={{\n        verticalAlign: 'middle',\n        padding: 1,\n      }}\n    >\n      <select\n        className=\"form-control\"\n        style={{ width: '100%', textAlign: column.align }}\n        value={value}\n        onChange={e => onValueChange(e.target.value)}\n      >\n        {selectColumns_values.map(val => (\n          <option key={val} value={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n    </td>\n  );\n\nconst Cell = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} />;\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = (props) => {\n  const { column } = props;\n  const selectColumns_values = selectColumns[column.name];\n  if (selectColumns_values) {\n    return <LookupEditCell {...props} selectColumns_values={selectColumns_values} />;\n  }\n  return <TableEditRow.Cell {...props} />;\n};\n\n\nexport default class DataTableSmall extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'date', title: `Date` },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 100 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'category', align: 'center', width: 130 }\n      ],\n      rows: [\n        {\n          id: 1,\n          date: '2019/09/14',\n          amount: 450,\n          category: 'Bills',\n        },\n        {\n          id: 2,\n          date: '2019/08/15',\n          amount: -550,\n          category: 'Groceries',\n        },\n        {\n          id: 3,\n          date: '2019/07/16',\n          amount: 250,\n          category: 'Cars',\n        },\n        {\n          id: 4,\n          date: '2019/06/14',\n          amount: -550,\n          category: 'Tuition',\n        },\n        {\n          id: 5,\n          date: '2019/05/14',\n          amount: 150,\n          category: 'Drinks',\n        },\n        {\n          id: 6,\n          date: '2019/05/10',\n          amount: 150,\n          category: 'Drinks',\n        },\n        {\n          id: 7,\n          date: '2019/04/14',\n          amount: -150,\n          category: 'Drinks',\n        },\n        {\n          id: 8,\n          date: '2019/03/14',\n          amount: 150,\n          category: 'Drinks',\n        },\n        {\n          id: 9,\n          date: '2019/03/01',\n          amount: 150,\n          category: 'Drinks',\n        },\n        {\n          id: 10,\n          date: '2019/02/14',\n          amount: 150,\n          category: 'Drinks',\n        }\n      ],\n      sorting: [{ columnName: 'date', direction: 'desc' }],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      leftFixedColumns: [],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n    };\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n  // update rows after adding\n  changeAddedRows = (addedRows) => {\n    const d = new Date();\n    this.setState({\n      addedRows:\n        addedRows.map(row => (Object.keys(row).length ? row : {\n          date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2, '0') + '/' + String(d.getDate()).padStart(2, '0'),\n          amount: 0.0,\n          currency: Object.keys(currencyTypes)[0]\n        }))\n    })\n  }\n\n  // update rows after editing\n  changeEditingRowIds = (editingRowIds) => {\n    this.setState({ editingRowIds });\n  }\n\n  // update rows after changing\n  changeRowChanges = (rowChanges) => {\n    this.setState({ rowChanges });\n  }\n\n  // updates rows after modifying\n  commitChanges = ({ added, changed, deleted }) => {\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      rows = this.deleteRows(deleted);\n    }\n    this.setState({ rows });\n  }\n\n  // update rows after deleting\n  deleteRows = (deletedIds) => {\n    const rows = this.state.rows.slice();\n    deletedIds.forEach((rowId) => {\n      const index = rows.findIndex(row => row.id === rowId);\n      if (index > -1) {\n        rows.splice(index, 1);\n      }\n    });\n    return rows;\n  };\n\n\n  render() {\n    const {\n      rows, columns, tableColumnExtensions, searchValue, sorting,\n      paymentColumns, pageSize, pageSizes, currentPage,\n      leftFixedColumns, editingRowIds, rowChanges, addedRows\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          rows={rows}\n          columns={columns}\n          getRowId={getRowId}\n        >\n          {/* Paging for table */}\n          <PagingState\n            defaultCurrentPage={currentPage}\n            onCurrentPageChange={this.changeCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={this.changePageSize}\n          />\n          <IntegratedPaging />\n          <PagingPanel pageSizes={pageSizes} />\n\n          {/* Currency styles formatter */}\n          <PaymentTypeProvider for={paymentColumns} />\n          <DateTypeProvider for={['date']} />\n\n          {/* Searching tool */}\n          <SearchState\n            value={searchValue}\n            onValueChange={this.changeSearchValue}\n          />\n          <IntegratedFiltering />\n          <Toolbar rootComponent={toolComponent} />\n          <SearchPanel />\n\n          {/** Sorting tools */}\n          <SortingState\n            sorting={sorting}\n            defaultSorting={sorting}\n            onSortingChange={this.changeSorting}\n          />\n          <IntegratedSorting />\n\n          {/* Editing tool */}\n          <EditingState\n            editingRowIds={editingRowIds}\n            onEditingRowIdsChange={this.changeEditingRowIds}\n            rowChanges={rowChanges}\n            onRowChangesChange={this.changeRowChanges}\n            addedRows={addedRows}\n            onAddedRowsChange={this.changeAddedRows}\n            onCommitChanges={this.commitChanges}\n          />\n\n          {/* Table itself */}\n          <Table columnExtensions={tableColumnExtensions}\n            tableComponent={TableComponent}\n            cellComponent={Cell}\n          />\n\n          <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\n          <TableEditRow cellComponent={EditCell} />\n          <TableEditColumn\n            width={80}\n            showAddCommand={!addedRows.length}\n            showEditCommand\n            showDeleteCommand\n            commandComponent={Command}\n          />\n          <TableFixedColumns\n            leftColumns={leftFixedColumns}\n          />\n\n\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}