{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn, TableFixedColumns } from '@devexpress/dx-react-grid-bootstrap4';\nimport { connect } from 'react-redux'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.USD : currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\n\n\nconst DateFormatter = props => {\n  const row = props.row;\n  const date = row.date;\n  const split = date.trim().split('T')[0];\n  const y = split.split('-')[0];\n  const m = split.split('-')[1];\n  const d = split.split('-')[2];\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, y + '/' + m.padStart(2, '0') + '/' + d.padStart(2, '0'));\n};\n\nconst DateTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: DateFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}));\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\n\n\nconst NotesFormatter = props => {\n  const row = props.row;\n  const notes = row.notes;\n  return React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, notes);\n};\n\nconst NotesTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: NotesFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}));\n/*\n==================================================================\nTable styles\n==================================================================\n*/\n\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => row.id;\n\nconst toolComponent = ({\n  children\n}) => {\n  return React.createElement(\"div\", {\n    className: \"font-weight-bold bg-primary text-white p-3\",\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Current balance: $1,000\", children);\n};\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\n\nconst CommandButton = ({\n  onExecute,\n  icon,\n  text,\n  hint,\n  color\n}) => {\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link btn-sm mt-auto mb-auto\",\n    style: {\n      padding: 11\n    },\n    onClick: e => {\n      onExecute();\n      e.stopPropagation();\n    },\n    title: hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color || 'undefined',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, icon ? React.createElement(\"i\", {\n    className: \"fas fa-\".concat(icon),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }) : null, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, text)));\n};\n\nconst AddButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"plus\",\n  hint: \"Create new row\",\n  onExecute: onExecute,\n  text: 'Add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n});\n\nconst EditButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"pen\",\n  hint: \"Edit row\",\n  color: \"text-warning\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n});\n\nconst DeleteButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"trash\",\n  hint: \"Delete row\",\n  color: \"text-danger\",\n  onExecute: () => {\n    // eslint-disable-next-line\n    if (window.confirm('Are you sure you want to delete this row?')) {\n      onExecute();\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165\n  },\n  __self: this\n});\n\nconst CommitButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"check\",\n  hint: \"Save changes\",\n  color: \"text-success\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n});\n\nconst CancelButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"times\",\n  hint: \"Cancel changes\",\n  color: \"text-danger\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n});\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton\n};\n\nconst Command = ({\n  id,\n  onExecute\n}) => {\n  const ButtonComponent = commandComponents[id];\n  return React.createElement(ButtonComponent, {\n    onExecute: onExecute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  });\n};\n\nconst SortingIcon = ({\n  direction\n}) => React.createElement(\"span\", {\n  className: \"fas fa-arrow-\".concat(direction === 'asc' ? 'up' : 'down'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n});\n\nconst SortLabel = ({\n  onSort,\n  children,\n  direction\n}) => {\n  return React.createElement(\"a\", {\n    className: \"font-weight-bold\",\n    onClick: onSort,\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, children, direction && React.createElement(SortingIcon, {\n    direction: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), children.props.children === 'Date' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"(yyyy/mm/dd)\")) : null);\n};\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\n\nconst LookupEditCell = ({\n  column,\n  selectColumns_values,\n  value,\n  onValueChange\n}) => React.createElement(\"td\", {\n  style: {\n    verticalAlign: 'middle',\n    padding: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 231\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  className: \"form-control\",\n  style: {\n    width: '100%',\n    textAlign: column.align\n  },\n  value: value,\n  onChange: e => onValueChange(e.target.value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237\n  },\n  __self: this\n}, selectColumns_values.map(val => React.createElement(\"option\", {\n  key: val,\n  value: val,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 244\n  },\n  __self: this\n}, val))));\n\nconst Cell = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }));\n};\n\nconst EditColumn = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }));\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = props => {\n  const column = props.column;\n  const selectColumns_values = selectColumns[column.name];\n\n  if (selectColumns_values) {\n    return React.createElement(LookupEditCell, Object.assign({}, props, {\n      selectColumns_values: selectColumns_values,\n      style: {\n        verticalAlign: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(TableEditRow.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }));\n};\n\nconst HeaderStyles = props => {\n  return React.createElement(TableHeaderRow.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }));\n};\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeAddedRows = addedRows => {\n      this.setState({\n        addedRows: addedRows.map(row => Object.keys(row).length ? row : {\n          // date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2,'0') + '/' + String(d.getDate()).padStart(2,'0'),\n          date: new Date().toISOString(),\n          amount: 0.0,\n          category: 'General',\n          currency: Object.keys(currencyTypes)[0],\n          payee: this.props.auth.isAuthenticated ? this.props.auth.user.name : ''\n        })\n      });\n    };\n\n    this.changeEditingRowIds = editingRowIds => {\n      this.setState({\n        editingRowIds\n      });\n    };\n\n    this.changeRowChanges = rowChanges => {\n      this.setState({\n        rowChanges\n      });\n    };\n\n    this.commitChanges = ({\n      added,\n      changed,\n      deleted\n    }) => {\n      console.log(added);\n      console.log(changed);\n      console.log(deleted);\n      let rows = this.state.rows;\n\n      if (added) {\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n        rows = [...rows, ...added.map((row, index) => _objectSpread({\n          id: startingAddedId + index\n        }, row))];\n      }\n\n      if (changed) {\n        rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n      }\n\n      if (deleted) {\n        rows = this.deleteRows(deleted);\n      }\n\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteRows = deletedIds => {\n      const rows = this.state.rows.slice();\n      deletedIds.forEach(rowId => {\n        const index = rows.findIndex(row => row.id === rowId);\n\n        if (index > -1) {\n          rows.splice(index, 1);\n        }\n      });\n      return rows;\n    };\n\n    const data = this.props.data;\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      columns: [{\n        name: 'date',\n        title: \"Date\"\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'currency',\n        title: 'Currency'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 110\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'currency',\n        align: 'right',\n        width: 70\n      }, {\n        columnName: 'category',\n        align: 'right',\n        width: 130\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'left',\n        width: 110\n      }],\n      rows: data // {\n      //   id: 1,\n      //   date: '2019/09/14',\n      //   amount: 450,\n      //   category: 'Bills for electric',\n      //   currency: 'VND',\n      //   notes: '',\n      //   payee: 'Trung Vo',\n      // }\n      ,\n      sorting: [{\n        columnName: 'date',\n        direction: 'desc'\n      }],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n\n    this.changeSorting = sorting => this.setState({\n      sorting\n    });\n  }\n\n  componentDidUpdate() {\n    const data = this.props.data; // this.setState({\n    //   rows: data\n    // })\n  } // componentDidMount() {\n  //   this._isMounted = true;\n  //   window.addEventListener('resize', () => {\n  //     if (window.innerWidth <= 945) {\n  //       if (this._isMounted) {\n  //         this.setState({ fixedColumn: false })\n  //       }\n  //     } else {\n  //       if (this._isMounted) {\n  //         this.setState({ fixedColumn: true })\n  //       }\n  //     }\n  //   });\n  // }\n  // update rows after adding\n\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          sorting = _this$state.sorting,\n          paymentColumns = _this$state.paymentColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage,\n          editingRowIds = _this$state.editingRowIds,\n          rowChanges = _this$state.rowChanges,\n          addedRows = _this$state.addedRows;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(DateTypeProvider, {\n      for: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(NotesTypeProvider, {\n      for: ['notes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      rootComponent: toolComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      sorting: sorting,\n      defaultSorting: sorting,\n      onSortingChange: this.changeSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      editingRowIds: editingRowIds,\n      onEditingRowIdsChange: this.changeEditingRowIds,\n      rowChanges: rowChanges,\n      onRowChangesChange: this.changeRowChanges,\n      addedRows: addedRows,\n      onAddedRowsChange: this.changeAddedRows,\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      sortLabelComponent: SortLabel,\n      cellComponent: HeaderStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      cellComponent: EditCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }), React.createElement(TableEditColumn, {\n      cellComponent: EditColumn,\n      showAddCommand: !addedRows.length,\n      showEditCommand: true,\n      showDeleteCommand: true,\n      commandComponent: Command,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(DataTable);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","SortingState","IntegratedSorting","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","TableFixedColumns","connect","numberWithCommas","x","toString","replace","PaymentFormatter","props","value","row","currency","color","USD","VND","EUR","Math","abs","PaymentTypeProvider","DateFormatter","date","split","trim","y","m","d","padStart","DateTypeProvider","NotesFormatter","notes","NotesTypeProvider","TableComponent","restProps","getRowId","id","toolComponent","children","display","alignItems","CommandButton","onExecute","icon","text","hint","padding","e","stopPropagation","AddButton","EditButton","DeleteButton","window","confirm","CommitButton","CancelButton","commandComponents","add","edit","delete","commit","cancel","Command","ButtonComponent","SortingIcon","direction","SortLabel","onSort","cursor","LookupEditCell","column","selectColumns_values","onValueChange","verticalAlign","width","textAlign","align","target","map","val","Cell","EditColumn","selectColumns","Object","keys","EditCell","name","HeaderStyles","DataTable","PureComponent","constructor","changeAddedRows","addedRows","setState","length","Date","toISOString","amount","category","payee","auth","isAuthenticated","user","changeEditingRowIds","editingRowIds","changeRowChanges","rowChanges","commitChanges","added","changed","deleted","console","log","rows","state","startingAddedId","index","deleteRows","deletedIds","slice","forEach","rowId","findIndex","splice","data","columns","title","tableColumnExtensions","columnName","wordWrapEnabled","sorting","paymentColumns","currentPage","pageSize","pageSizes","searchValue","changeCurrentPage","changePageSize","changeSearchValue","changeSorting","componentDidUpdate","render","mapStateToProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {currencyTypes} from '../dictionary/dictionary';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState,\n  SortingState,\n  IntegratedSorting\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn,\n  TableFixedColumns\n} from '@devexpress/dx-react-grid-bootstrap4';\nimport {connect} from 'react-redux';\n\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = (props) => {\n  const {value, row} = props;\n  const {currency} = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.USD : (currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\nconst DateFormatter = (props) => {\n  const { row } = props;\n  const { date } = row;\n  const split = date.trim().split('T')[0];\n  const y = split.split('-')[0];\n  const m = split.split('-')[1];\n  const d = split.split('-')[2];\n  return (\n    <span >\n      {y + '/' + m.padStart(2,'0') + '/' + d.padStart(2,'0')}\n    </span>\n  );\n}\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={DateFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\nconst NotesFormatter = (props) => {\n  const { row } = props;\n  const { notes } = row;\n  \n  return (\n    <small>\n      {notes}\n    </small>\n  );\n}\n\nconst NotesTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={NotesFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nTable styles\n==================================================================\n*/\nconst TableComponent = ({ ...restProps }) => {\n  return (\n    <Table.Table\n      {...restProps}\n      className=\"table-striped\"\n    />\n  )\n}\n\nconst getRowId = row => row.id;\n\nconst toolComponent = ({children}) => {\n  return (\n    <div className='font-weight-bold bg-primary text-white p-3' style={{display: 'flex', alignItems: 'center' }}>      \n      Current balance: $1,000{children}\n    </div>\n  )\n}\n\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\nconst CommandButton = ({\n  onExecute, icon, text, hint, color,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-link btn-sm mt-auto mb-auto\"\n      style={{padding: 11}}\n      onClick={(e) => {\n        onExecute();\n        e.stopPropagation();\n      }}\n      title={hint}\n    >\n      <span className={color || 'undefined'}>\n        {icon ? <i className={`fas fa-${icon}`} /> : null}\n        <b>{text}</b>\n      </span>\n    </button>\n  );\n}\n\nconst AddButton = ({ onExecute }) => (\n  <CommandButton icon=\"plus\" hint=\"Create new row\" onExecute={onExecute} text={'Add'} />\n);\n\nconst EditButton = ({ onExecute }) => (\n  <CommandButton icon=\"pen\" hint=\"Edit row\" color=\"text-warning\" onExecute={onExecute} />\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <CommandButton\n    icon=\"trash\"\n    hint=\"Delete row\"\n    color=\"text-danger\"\n    onExecute={() => {\n      // eslint-disable-next-line\n      if (window.confirm('Are you sure you want to delete this row?')) {\n        onExecute();\n      }\n    }}\n  />\n);\n\nconst CommitButton = ({ onExecute }) => (\n  <CommandButton icon=\"check\" hint=\"Save changes\" color=\"text-success\" onExecute={onExecute} />\n);\n\nconst CancelButton = ({ onExecute }) => (\n  <CommandButton icon=\"times\" hint=\"Cancel changes\" color=\"text-danger\" onExecute={onExecute} />\n);\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const ButtonComponent = commandComponents[id];\n  return (\n    <ButtonComponent\n      onExecute={onExecute}\n    />\n  );\n};\n\nconst SortingIcon = ({ direction }) => (\n  <span\n    className={`fas fa-arrow-${direction === 'asc' ? 'up' : 'down'}`}\n  />\n);\n\nconst SortLabel = ({ onSort, children, direction }) => {\n  return (\n    <a\n      className=\"font-weight-bold\"\n      onClick={onSort}\n      style={{cursor: 'pointer' }}\n    >\n      {children}\n      {(direction && <SortingIcon direction={direction} />)}\n      {children.props.children === 'Date' ? <div><small>(yyyy/mm/dd)</small></div> : null}\n    </a>\n  );\n}\n\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\nconst LookupEditCell = ({\n  column, selectColumns_values, value, onValueChange,\n}) => (\n    <td\n      style={{\n        verticalAlign: 'middle',\n        padding: 1,\n      }}\n    >\n      <select\n        className=\"form-control\"\n        style={{ width: '100%', textAlign: column.align }}\n        value={value}\n        onChange={e => onValueChange(e.target.value)}\n      >\n        {selectColumns_values.map(val => (\n          <option key={val} value={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n    </td>\n  );\n\nconst Cell = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} />;\n};\n\nconst EditColumn = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} className='text-center' />;\n}\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = (props) => {\n  const { column } = props;\n  const selectColumns_values = selectColumns[column.name];\n  if (selectColumns_values) {\n    return <LookupEditCell {...props} selectColumns_values={selectColumns_values} style={{ verticalAlign: 'middle' }} />;\n  }\n  return <TableEditRow.Cell {...props} style={{ verticalAlign: 'middle' }} />;\n};\n\nconst HeaderStyles = (props) => {\n  return <TableHeaderRow.Cell {...props} style={{ verticalAlign: 'middle' }} />\n}\n\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {data} = this.props;\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      columns: [\n        { name: 'date', title: `Date` },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'currency', title: 'Currency' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 110 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'currency', align: 'right', width: 70 },\n        { columnName: 'category', align: 'right', width: 130 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'left', width: 110 },\n      ],\n      rows: data\n        // {\n        //   id: 1,\n        //   date: '2019/09/14',\n        //   amount: 450,\n        //   category: 'Bills for electric',\n        //   currency: 'VND',\n        //   notes: '',\n        //   payee: 'Trung Vo',\n        // }\n      ,\n      sorting: [{columnName: 'date', direction: 'desc'}],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n    };\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n  componentDidUpdate() {\n    const { data } = this.props;\n    // this.setState({\n    //   rows: data\n    // })\n  }\n\n  // componentDidMount() {\n  //   this._isMounted = true;\n  //   window.addEventListener('resize', () => {\n  //     if (window.innerWidth <= 945) {\n  //       if (this._isMounted) {\n  //         this.setState({ fixedColumn: false })\n  //       }\n  //     } else {\n  //       if (this._isMounted) {\n  //         this.setState({ fixedColumn: true })\n  //       }\n  //     }\n  //   });\n  // }\n\n\n  // update rows after adding\n  changeAddedRows = (addedRows) => {\n    this.setState({\n      addedRows:\n        addedRows.map(row => (Object.keys(row).length ? row : {\n          // date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2,'0') + '/' + String(d.getDate()).padStart(2,'0'),\n          date: new Date().toISOString(),\n          amount: 0.0,\n          category: 'General',\n          currency: Object.keys(currencyTypes)[0],\n          payee: this.props.auth.isAuthenticated ? this.props.auth.user.name : ''\n        }))\n    })\n  }\n\n  // update rows after editing\n  changeEditingRowIds = (editingRowIds) => {\n    this.setState({ editingRowIds });\n  }\n\n  // update rows after changing\n  changeRowChanges = (rowChanges) => {\n    this.setState({ rowChanges });\n  }\n\n  // updates rows after modifying\n  commitChanges = ({ added, changed, deleted }) => {\n    console.log(added);\n    console.log(changed);\n    console.log(deleted)\n\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      rows = this.deleteRows(deleted);\n    }\n    this.setState({ rows });\n  }\n\n  // update rows after deleting\n  deleteRows = (deletedIds) => {\n    const rows = this.state.rows.slice();\n    deletedIds.forEach((rowId) => {\n      const index = rows.findIndex(row => row.id === rowId);\n      if (index > -1) {\n        rows.splice(index, 1);\n      }\n    });\n    return rows;\n  };\n\n\n  render() {\n    const { \n      rows, columns, tableColumnExtensions, searchValue, sorting,\n      paymentColumns, pageSize, pageSizes, currentPage,\n      editingRowIds, rowChanges, addedRows,\n      //fixedColumn, leftFixedColumns\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          rows={rows}\n          columns={columns}\n          getRowId={getRowId}\n        >\n          {/* Paging for table */}\n          <PagingState\n            defaultCurrentPage={currentPage}\n            onCurrentPageChange={this.changeCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={this.changePageSize}\n          />\n          <IntegratedPaging />\n          <PagingPanel pageSizes={pageSizes} />\n\n          {/* Currency styles formatter */}\n          <PaymentTypeProvider for={paymentColumns} />\n          <DateTypeProvider for={['date']} />\n          <NotesTypeProvider for={['notes']} />\n\n          {/* Searching tool */}\n          <SearchState\n            value={searchValue}\n            onValueChange={this.changeSearchValue}\n          />\n          <IntegratedFiltering />\n          <Toolbar rootComponent={toolComponent} />\n          <SearchPanel />\n\n          {/** Sorting tools */}\n          <SortingState\n            sorting={sorting}\n            defaultSorting={sorting}\n            onSortingChange={this.changeSorting}\n          />\n          <IntegratedSorting />\n\n          {/* Editing tool */}\n          <EditingState\n            editingRowIds={editingRowIds}\n            onEditingRowIdsChange={this.changeEditingRowIds}\n            rowChanges={rowChanges}\n            onRowChangesChange={this.changeRowChanges}\n            addedRows={addedRows}\n            onAddedRowsChange={this.changeAddedRows}\n            onCommitChanges={this.commitChanges}\n          />\n          \n          {/* Table itself */}\n          <Table columnExtensions={tableColumnExtensions} \n                tableComponent={TableComponent}\n                cellComponent={Cell}\n          />\n        \n          <TableHeaderRow showSortingControls \n                  sortLabelComponent={SortLabel} \n                  cellComponent={HeaderStyles} \n          />\n          <TableEditRow cellComponent={EditCell} />\n          <TableEditColumn\n            cellComponent={EditColumn}\n            showAddCommand={!addedRows.length}\n            showEditCommand\n            showDeleteCommand\n            commandComponent={Command}\n          />\n          {/* <TableFixedColumns\n            leftColumns={ fixedColumn ? leftFixedColumns : [] }\n          /> */}\n\n          \n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(DataTable);"]},"metadata":{},"sourceType":"module"}