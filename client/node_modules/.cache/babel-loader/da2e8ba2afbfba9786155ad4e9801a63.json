{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState, SortingState, IntegratedSorting, SelectionState } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn, TableFixedColumns, TableSelection } from '@devexpress/dx-react-grid-bootstrap4';\nimport { connect } from 'react-redux';\nimport { loadTransactions } from '../actions/transactionActions';\nimport { ModalDelete } from '../common/ModalDelete';\nimport { ModalAddEdit } from '../common/ModalAddEdit'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nvar ACCOUNT_CURRENCY = '';\nvar ACCOUNT_BALANCE = '';\n\nconst PaymentFormatter = props => {\n  const value = props.value;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst PaymentTypeProvider = props => {\n  const account_currency = props.account_currency;\n  ACCOUNT_CURRENCY = account_currency;\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\n\n\nconst DateFormatter = props => {\n  const row = props.row;\n  const date = row.date;\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, date);\n};\n\nconst DateTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: DateFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}));\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\n\n\nconst NotesFormatter = props => {\n  const row = props.row;\n  const notes = row.notes;\n  return React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, notes);\n};\n\nconst NotesTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: NotesFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}));\n/*\n==================================================================\nTable styles\n==================================================================\n*/\n\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => row.id;\n\nconst toolComponent = props => {\n  const children = props.children;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"font-weight-bold bg-primary text-white p-3\",\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Current balance: \", ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR, numberWithCommas(ACCOUNT_BALANCE), children));\n};\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\n\nconst CommandButton = ({\n  onExecute,\n  icon,\n  text,\n  hint,\n  color\n}) => {\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link btn-sm mt-auto mb-auto\",\n    style: {\n      padding: 11\n    },\n    onClick: e => {\n      onExecute();\n      e.stopPropagation();\n    },\n    title: hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color || 'undefined',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, icon ? React.createElement(\"i\", {\n    className: \"fas fa-\".concat(icon) + (text === 'Add' ? ' mr-2' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : null, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, text)));\n};\n\nconst AddButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"plus\",\n  hint: \"Create new row\",\n  onExecute: onExecute,\n  text: 'Add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n});\n\nconst EditButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"pen\",\n  hint: \"Edit row\",\n  color: \"text-warning\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171\n  },\n  __self: this\n});\n\nconst DeleteButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"trash\",\n  hint: \"Delete row\",\n  color: \"text-danger\",\n  onExecute: () => {\n    // eslint-disable-next-line\n    if (window.confirm('Are you sure you want to delete this row?')) {\n      onExecute();\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n});\n\nconst CommitButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"check\",\n  hint: \"Save changes\",\n  color: \"text-success\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n});\n\nconst CancelButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"times\",\n  hint: \"Cancel changes\",\n  color: \"text-danger\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 193\n  },\n  __self: this\n});\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton\n};\n\nconst Command = ({\n  id,\n  onExecute\n}) => {\n  const ButtonComponent = commandComponents[id];\n  return React.createElement(ButtonComponent, {\n    onExecute: onExecute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  });\n};\n\nconst SortingIcon = ({\n  direction\n}) => React.createElement(\"span\", {\n  className: \"fas fa-arrow-\".concat(direction === 'asc' ? 'up' : 'down'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 214\n  },\n  __self: this\n});\n\nconst SortLabel = ({\n  onSort,\n  children,\n  direction\n}) => {\n  return React.createElement(\"a\", {\n    className: \"font-weight-bold\",\n    onClick: onSort,\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, children, direction && React.createElement(SortingIcon, {\n    direction: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), children.props.children === 'Date' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"(yyyy/mm/dd)\")) : null);\n};\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\n\nconst LookupEditCell = ({\n  column,\n  selectColumns_values,\n  value,\n  onValueChange\n}) => React.createElement(\"td\", {\n  style: {\n    verticalAlign: 'middle',\n    padding: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 241\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  className: \"form-control\",\n  style: {\n    width: '100%',\n    textAlign: column.align\n  },\n  value: value,\n  onChange: e => onValueChange(e.target.value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 247\n  },\n  __self: this\n}, selectColumns_values.map(val => React.createElement(\"option\", {\n  key: val,\n  value: val,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 254\n  },\n  __self: this\n}, val))));\n\nconst Cell = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    className: \"p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }));\n};\n\nconst EditColumn = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }));\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = props => {\n  const column = props.column;\n  const selectColumns_values = selectColumns[column.name];\n\n  if (selectColumns_values) {\n    return React.createElement(LookupEditCell, Object.assign({}, props, {\n      selectColumns_values: selectColumns_values,\n      style: {\n        verticalAlign: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(TableEditRow.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }));\n};\n\nconst HeaderStyles = props => {\n  return React.createElement(TableHeaderRow.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }));\n};\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeSelection = selection => {\n      const lastSelected = selection.find(selected => this.state.selection.indexOf(selected) === -1);\n      const selected_row = this.state.rows.find(row => row.id === lastSelected);\n      this.setState({\n        selected_row: selected_row\n      });\n\n      if (lastSelected !== undefined) {\n        this.setState({\n          selection: [lastSelected]\n        });\n      } else {\n        this.setState({\n          selection: []\n        });\n      }\n    };\n\n    this.changeAddedRows = addedRows => {\n      console.log(addedRows);\n      const d = new Date();\n      this.setState({\n        addedRows: addedRows.map(row => Object.keys(row).length ? row : {\n          date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2, '0') + '/' + String(d.getDate()).padStart(2, '0'),\n          //date: new Date().toISOString(),\n          amount: 0.0,\n          category: 'General',\n          currency: Object.keys(currencyTypes)[0],\n          payee: this.props.auth.isAuthenticated ? this.props.auth.user.name : ''\n        })\n      });\n    };\n\n    this.changeEditingRowIds = editingRowIds => {\n      console.log(editingRowIds);\n      this.setState({\n        editingRowIds\n      });\n    };\n\n    this.changeRowChanges = rowChanges => {\n      console.log(rowChanges);\n      this.setState({\n        rowChanges\n      });\n    };\n\n    this.commitChanges = ({\n      added,\n      changed,\n      deleted\n    }) => {\n      console.log(added);\n      let rows = this.state.rows;\n\n      if (added) {\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n        rows = [...rows, ...added.map((row, index) => _objectSpread({\n          id: startingAddedId + index\n        }, row))];\n      }\n\n      if (changed) {\n        rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n      }\n\n      if (deleted) {\n        rows = this.deleteRows(deleted);\n      }\n\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteRows = deletedIds => {\n      const rows = this.state.rows.slice();\n      deletedIds.forEach(rowId => {\n        const index = rows.findIndex(row => row.id === rowId);\n\n        if (index > -1) {\n          rows.splice(index, 1);\n        }\n      });\n      return rows;\n    };\n\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      loading: true,\n      columns: [{\n        name: 'date',\n        title: \"Date\"\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 110\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'category',\n        align: 'right',\n        width: 100\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'left',\n        width: 110\n      }],\n      rows: [] // {\n      //   id: 1,\n      //   date: '2019/09/14',\n      //   amount: 450,\n      //   category: 'Bills for electric',\n      //   currency: 'VND',\n      //   notes: '',\n      //   payee: 'Trung Vo',\n      // }\n      ,\n      sorting: [{\n        columnName: 'date',\n        direction: 'desc'\n      }],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n      selection: [],\n      selected_row: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n\n    this.changeSorting = sorting => this.setState({\n      sorting\n    });\n  }\n\n  componentDidMount() {\n    const account = this.props.account;\n    this.props.loadTransactions(account._id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const transactions = nextProps.transactions;\n    transactions.transactions.forEach((transaction, i) => {\n      transaction.id = i + 1;\n    });\n    this.setState({\n      rows: transactions.transactions,\n      loading: false\n    });\n  } // change selection row\n\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          sorting = _this$state.sorting,\n          paymentColumns = _this$state.paymentColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage,\n          editingRowIds = _this$state.editingRowIds,\n          rowChanges = _this$state.rowChanges,\n          addedRows = _this$state.addedRows,\n          selection = _this$state.selection,\n          selected_row = _this$state.selected_row;\n    console.log(selected_row);\n    const account = this.props.account;\n    ACCOUNT_BALANCE = account.balance;\n    ACCOUNT_CURRENCY = account.currency;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, loading ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: this.state.rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(SelectionState, {\n      selection: selection,\n      onSelectionChange: this.changeSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      account_currency: account.currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(DateTypeProvider, {\n      for: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(NotesTypeProvider, {\n      for: ['notes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      rootComponent: toolComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      sorting: sorting,\n      defaultSorting: sorting,\n      onSortingChange: this.changeSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      editingRowIds: editingRowIds,\n      onEditingRowIdsChange: this.changeEditingRowIds,\n      rowChanges: rowChanges,\n      onRowChangesChange: this.changeRowChanges,\n      addedRows: addedRows,\n      onAddedRowsChange: this.changeAddedRows,\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      sortLabelComponent: SortLabel,\n      cellComponent: HeaderStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), React.createElement(TableSelection, {\n      selectByRowClick: true,\n      highlightRow: true,\n      showSelectionColumn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      cellComponent: EditCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card card-footer d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(ModalAddEdit, {\n      disabled: false,\n      variant: \"light\",\n      styles: \"p-2 mr-2\",\n      size: \"sm\",\n      type: \"add-transaction\",\n      header: \"New transaction\",\n      buttonText: \"Add\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Add\",\n      mainFuncBtn: \"Add\",\n      icon: \"fas fa-plus\",\n      currency: account.currency,\n      transaction: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }), React.createElement(ModalAddEdit, {\n      disabled: selection.length > 0 ? false : true,\n      variant: \"light\",\n      styles: \"p-2 mr-2\",\n      size: \"sm\",\n      type: \"edit-transaction\",\n      header: \"Edit transaction\",\n      buttonText: \"Update\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Update\",\n      mainFuncBtn: \"Update\",\n      icon: \"fas fa-pen\",\n      currency: account.currency,\n      transaction: selected_row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }), React.createElement(ModalDelete, {\n      disabled: selection.length > 0 ? false : true,\n      variant: \"light\",\n      styles: \"p-2\",\n      size: \"sm\",\n      type: \"remove-transaction\",\n      header: \"Remove transaction\",\n      body: \"Are you sure you want to remove this transaction?\",\n      buttonText: \"Remove\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  transactions: state.transactions\n});\n\nexport default connect(mapStateToProps, {\n  loadTransactions\n})(DataTable);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","SortingState","IntegratedSorting","SelectionState","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","TableFixedColumns","TableSelection","connect","loadTransactions","ModalDelete","ModalAddEdit","numberWithCommas","x","toString","replace","ACCOUNT_CURRENCY","ACCOUNT_BALANCE","PaymentFormatter","props","value","color","USD","VND","EUR","Math","abs","PaymentTypeProvider","account_currency","DateFormatter","row","date","DateTypeProvider","NotesFormatter","notes","NotesTypeProvider","TableComponent","restProps","getRowId","id","toolComponent","children","display","alignItems","CommandButton","onExecute","icon","text","hint","padding","e","stopPropagation","AddButton","EditButton","DeleteButton","window","confirm","CommitButton","CancelButton","commandComponents","add","edit","delete","commit","cancel","Command","ButtonComponent","SortingIcon","direction","SortLabel","onSort","cursor","LookupEditCell","column","selectColumns_values","onValueChange","verticalAlign","width","textAlign","align","target","map","val","Cell","EditColumn","selectColumns","currency","Object","keys","EditCell","name","HeaderStyles","DataTable","PureComponent","constructor","changeSelection","selection","lastSelected","find","selected","state","indexOf","selected_row","rows","setState","undefined","changeAddedRows","addedRows","console","log","d","Date","length","getFullYear","String","getMonth","padStart","getDate","amount","category","payee","auth","isAuthenticated","user","changeEditingRowIds","editingRowIds","changeRowChanges","rowChanges","commitChanges","added","changed","deleted","startingAddedId","index","deleteRows","deletedIds","slice","forEach","rowId","findIndex","splice","loading","columns","title","tableColumnExtensions","columnName","wordWrapEnabled","sorting","paymentColumns","currentPage","pageSize","pageSizes","searchValue","changeCurrentPage","changePageSize","changeSearchValue","changeSorting","componentDidMount","account","_id","componentWillReceiveProps","nextProps","transactions","transaction","i","render","balance","mapStateToProps"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,WAJF,EAKEC,mBALF,EAMEC,YANF,EAOEC,YAPF,EAQEC,iBARF,EASEC,cATF,QAUO,2BAVP;AAYA,SACEC,IADF,EACQC,KADR,EAEEC,cAFF,EAEkBC,WAFlB,EAGEC,WAHF,EAGeC,OAHf,EAIEC,YAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,cAPF,QAQO,sCARP;AAUA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,WAAT,QAA2B,uBAA3B;AACA,SAASC,YAAT,QAA6B,wBAA7B,C,CAEA;;AAEA;;;;;AAKA;;AACA,SAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,SAAOA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD;;AAED,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,eAAe,GAAG,EAAtB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA,QAC1BC,KAD0B,GACjBD,KADiB,CAC1BC,KAD0B;AAElC,SACE;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAED,KAAK,IAAI,CAAT,GAAa,OAAb,GAAuB;AAAhC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IAAI,CAAT,GAAa,GAAb,GAAmB,GADtB,EAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,gBAAgB,KAAK,KAArB,GAA6B5B,aAAa,CAACkC,GAA3C,GAAkDN,gBAAgB,KAAK,KAArB,GAA6B5B,aAAa,CAACmC,GAA3C,GAAiDnC,aAAa,CAACoC,GAAzH,CAD1B,EACiKZ,gBAAgB,CAACa,IAAI,CAACC,GAAL,CAASN,KAAT,CAAD,CADjL,CADF;AAKD,CAPD;;AASA,MAAMO,mBAAmB,GAAGR,KAAK,IAAI;AAAA,QAC3BS,gBAD2B,GACPT,KADO,CAC3BS,gBAD2B;AAEnCZ,EAAAA,gBAAgB,GAAGY,gBAAnB;AACA,SACE,oBAAC,gBAAD;AACE,IAAA,kBAAkB,EAAEV;AADtB,KAEMC,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CATD;AAWA;;;;;;;AAKA,MAAMU,aAAa,GAAIV,KAAD,IAAW;AAAA,QACvBW,GADuB,GACfX,KADe,CACvBW,GADuB;AAAA,QAEvBC,IAFuB,GAEdD,GAFc,CAEvBC,IAFuB;AAI/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADF;AAKD,CATD;;AAWA,MAAMC,gBAAgB,GAAGb,KAAK,IAC5B,oBAAC,gBAAD;AACE,EAAA,kBAAkB,EAAEU;AADtB,GAEMV,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;AAOA;;;;;;;AAKA,MAAMc,cAAc,GAAId,KAAD,IAAW;AAAA,QACxBW,GADwB,GAChBX,KADgB,CACxBW,GADwB;AAAA,QAExBI,KAFwB,GAEdJ,GAFc,CAExBI,KAFwB;AAIhC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADF;AAKD,CATD;;AAWA,MAAMC,iBAAiB,GAAGhB,KAAK,IAC7B,oBAAC,gBAAD;AACE,EAAA,kBAAkB,EAAEc;AADtB,GAEMd,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;AAOA;;;;;;;AAKA,MAAMiB,cAAc,GAAG,UAAsB;AAAA,MAAhBC,SAAgB;;AAC3C,SACE,oBAAC,KAAD,CAAO,KAAP,oBACMA,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CAPD;;AASA,MAAMC,QAAQ,GAAGR,GAAG,IAAIA,GAAG,CAACS,EAA5B;;AAEA,MAAMC,aAAa,GAAIrB,KAAD,IAAW;AAAA,QACxBsB,QADwB,GACZtB,KADY,CACxBsB,QADwB;AAG/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAA4D,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB3B,gBAAgB,KAAK,KAArB,GAA6B5B,aAAa,CAACkC,GAA3C,GAAkDN,gBAAgB,KAAK,KAArB,GAA6B5B,aAAa,CAACmC,GAA3C,GAAiDnC,aAAa,CAACoC,GADrI,EAC2IZ,gBAAgB,CAACK,eAAD,CAD3J,EAC8KwB,QAD9K,CADF,CADF;AAOD,CAVD;AAYA;;;;;;;AAKA,MAAMG,aAAa,GAAG,CAAC;AACrBC,EAAAA,SADqB;AACVC,EAAAA,IADU;AACJC,EAAAA,IADI;AACEC,EAAAA,IADF;AACQ3B,EAAAA;AADR,CAAD,KAEhB;AACJ,SACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,qCAFZ;AAGE,IAAA,KAAK,EAAE;AAAC4B,MAAAA,OAAO,EAAE;AAAV,KAHT;AAIE,IAAA,OAAO,EAAGC,CAAD,IAAO;AACdL,MAAAA,SAAS;AACTK,MAAAA,CAAC,CAACC,eAAF;AACD,KAPH;AAQE,IAAA,KAAK,EAAEH,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAM,IAAA,SAAS,EAAE3B,KAAK,IAAI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGyB,IAAI,GAAG;AAAG,IAAA,SAAS,EAAE,iBAAUA,IAAV,KAAoBC,IAAI,KAAK,KAAT,GAAiB,OAAjB,GAAyB,EAA7C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwE,IAD/E,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CAFF,CAVF,CADF;AAiBD,CApBD;;AAsBA,MAAMK,SAAS,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAChB,oBAAC,aAAD;AAAe,EAAA,IAAI,EAAC,MAApB;AAA2B,EAAA,IAAI,EAAC,gBAAhC;AAAiD,EAAA,SAAS,EAAEA,SAA5D;AAAuE,EAAA,IAAI,EAAE,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,MAAMQ,UAAU,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KACjB,oBAAC,aAAD;AAAe,EAAA,IAAI,EAAC,KAApB;AAA0B,EAAA,IAAI,EAAC,UAA/B;AAA0C,EAAA,KAAK,EAAC,cAAhD;AAA+D,EAAA,SAAS,EAAEA,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,MAAMS,YAAY,GAAG,CAAC;AAAET,EAAAA;AAAF,CAAD,KACnB,oBAAC,aAAD;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,IAAI,EAAC,YAFP;AAGE,EAAA,KAAK,EAAC,aAHR;AAIE,EAAA,SAAS,EAAE,MAAM;AACf;AACA,QAAIU,MAAM,CAACC,OAAP,CAAe,2CAAf,CAAJ,EAAiE;AAC/DX,MAAAA,SAAS;AACV;AACF,GATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAcA,MAAMY,YAAY,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KACnB,oBAAC,aAAD;AAAe,EAAA,IAAI,EAAC,OAApB;AAA4B,EAAA,IAAI,EAAC,cAAjC;AAAgD,EAAA,KAAK,EAAC,cAAtD;AAAqE,EAAA,SAAS,EAAEA,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,MAAMa,YAAY,GAAG,CAAC;AAAEb,EAAAA;AAAF,CAAD,KACnB,oBAAC,aAAD;AAAe,EAAA,IAAI,EAAC,OAApB;AAA4B,EAAA,IAAI,EAAC,gBAAjC;AAAkD,EAAA,KAAK,EAAC,aAAxD;AAAsE,EAAA,SAAS,EAAEA,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,MAAMc,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAER,SADmB;AAExBS,EAAAA,IAAI,EAAER,UAFkB;AAGxBS,EAAAA,MAAM,EAAER,YAHgB;AAIxBS,EAAAA,MAAM,EAAEN,YAJgB;AAKxBO,EAAAA,MAAM,EAAEN;AALgB,CAA1B;;AAQA,MAAMO,OAAO,GAAG,CAAC;AAAE1B,EAAAA,EAAF;AAAMM,EAAAA;AAAN,CAAD,KAAuB;AACrC,QAAMqB,eAAe,GAAGP,iBAAiB,CAACpB,EAAD,CAAzC;AACA,SACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEM,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAPD;;AASA,MAAMsB,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAClB;AACE,EAAA,SAAS,yBAAkBA,SAAS,KAAK,KAAd,GAAsB,IAAtB,GAA6B,MAA/C,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAU7B,EAAAA,QAAV;AAAoB2B,EAAAA;AAApB,CAAD,KAAqC;AACrD,SACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAEE,MAFX;AAGE,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG9B,QALH,EAMI2B,SAAS,IAAI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANjB,EAOG3B,QAAQ,CAACtB,KAAT,CAAesB,QAAf,KAA4B,MAA5B,GAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAArC,GAA8E,IAPjF,CADF;AAWD,CAZD;AAcA;;;;;;;AAKA,MAAM+B,cAAc,GAAG,CAAC;AACtBC,EAAAA,MADsB;AACdC,EAAAA,oBADc;AACQtD,EAAAA,KADR;AACeuD,EAAAA;AADf,CAAD,KAGnB;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,QADV;AAEL3B,IAAAA,OAAO,EAAE;AAFJ,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAME;AACE,EAAA,SAAS,EAAC,cADZ;AAEE,EAAA,KAAK,EAAE;AAAE4B,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAEL,MAAM,CAACM;AAAnC,GAFT;AAGE,EAAA,KAAK,EAAE3D,KAHT;AAIE,EAAA,QAAQ,EAAE8B,CAAC,IAAIyB,aAAa,CAACzB,CAAC,CAAC8B,MAAF,CAAS5D,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGsD,oBAAoB,CAACO,GAArB,CAAyBC,GAAG,IAC3B;AAAQ,EAAA,GAAG,EAAEA,GAAb;AAAkB,EAAA,KAAK,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,GADH,CADD,CANH,CANF,CAHJ;;AAwBA,MAAMC,IAAI,GAAIhE,KAAD,IAAW;AACtB,SAAO,oBAAC,KAAD,CAAO,IAAP,oBAAgBA,KAAhB;AAAuB,IAAA,KAAK,EAAE;AAAEyD,MAAAA,aAAa,EAAE;AAAjB,KAA9B;AAA2D,IAAA,SAAS,EAAC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,MAAMQ,UAAU,GAAIjE,KAAD,IAAW;AAC5B,SAAO,oBAAC,KAAD,CAAO,IAAP,oBAAgBA,KAAhB;AAAuB,IAAA,KAAK,EAAE;AAAEyD,MAAAA,aAAa,EAAE;AAAjB,KAA9B;AAA2D,IAAA,SAAS,EAAC,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,MAAMS,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYpG,aAAZ;AADU,CAAtB;;AAIA,MAAMqG,QAAQ,GAAItE,KAAD,IAAW;AAAA,QAClBsD,MADkB,GACPtD,KADO,CAClBsD,MADkB;AAE1B,QAAMC,oBAAoB,GAAGW,aAAa,CAACZ,MAAM,CAACiB,IAAR,CAA1C;;AACA,MAAIhB,oBAAJ,EAA0B;AACxB,WAAO,oBAAC,cAAD,oBAAoBvD,KAApB;AAA2B,MAAA,oBAAoB,EAAEuD,oBAAjD;AAAuE,MAAA,KAAK,EAAE;AAAEE,QAAAA,aAAa,EAAE;AAAjB,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AACD,SAAO,oBAAC,YAAD,CAAc,IAAd,oBAAuBzD,KAAvB;AAA8B,IAAA,KAAK,EAAE;AAAEyD,MAAAA,aAAa,EAAE;AAAjB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAPD;;AASA,MAAMe,YAAY,GAAIxE,KAAD,IAAW;AAC9B,SAAO,oBAAC,cAAD,CAAgB,IAAhB,oBAAyBA,KAAzB;AAAgC,IAAA,KAAK,EAAE;AAAEyD,MAAAA,aAAa,EAAE;AAAjB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAKA,MAAMgB,SAAN,SAAwBzG,KAAK,CAAC0G,aAA9B,CAA4C;AAC1CC,EAAAA,WAAW,CAAC3E,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoEnB4E,eApEmB,GAoEAC,SAAD,IAAe;AAC/B,YAAMC,YAAY,GAAGD,SAAS,CAC3BE,IADkB,CACbC,QAAQ,IAAI,KAAKC,KAAL,CAAWJ,SAAX,CAAqBK,OAArB,CAA6BF,QAA7B,MAA2C,CAAC,CAD3C,CAArB;AAGA,YAAMG,YAAY,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBL,IAAhB,CAAqBpE,GAAG,IAAIA,GAAG,CAACS,EAAJ,KAAW0D,YAAvC,CAArB;AACA,WAAKO,QAAL,CAAc;AACZF,QAAAA,YAAY,EAAEA;AADF,OAAd;;AAIA,UAAIL,YAAY,KAAKQ,SAArB,EAAgC;AAC9B,aAAKD,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE,CAACC,YAAD;AAAb,SAAd;AACD,OAFD,MAEO;AACL,aAAKO,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAlFkB;;AAAA,SAqFnBU,eArFmB,GAqFAC,SAAD,IAAe;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,YAAMG,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,WAAKP,QAAL,CAAc;AACZG,QAAAA,SAAS,EACPA,SAAS,CAAC1B,GAAV,CAAcnD,GAAG,IAAKyD,MAAM,CAACC,IAAP,CAAY1D,GAAZ,EAAiBkF,MAAjB,GAA0BlF,GAA1B,GAAgC;AACpDC,UAAAA,IAAI,EAAE+E,CAAC,CAACG,WAAF,KAAkB,GAAlB,GAAwBC,MAAM,CAACJ,CAAC,CAACK,QAAF,KAAe,CAAhB,CAAN,CAAyBC,QAAzB,CAAkC,CAAlC,EAAoC,GAApC,CAAxB,GAAmE,GAAnE,GAAyEF,MAAM,CAACJ,CAAC,CAACO,OAAF,EAAD,CAAN,CAAoBD,QAApB,CAA6B,CAA7B,EAA+B,GAA/B,CAD3B;AAEpD;AACAE,UAAAA,MAAM,EAAE,GAH4C;AAIpDC,UAAAA,QAAQ,EAAE,SAJ0C;AAKpDjC,UAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYpG,aAAZ,EAA2B,CAA3B,CAL0C;AAMpDoI,UAAAA,KAAK,EAAE,KAAKrG,KAAL,CAAWsG,IAAX,CAAgBC,eAAhB,GAAkC,KAAKvG,KAAL,CAAWsG,IAAX,CAAgBE,IAAhB,CAAqBjC,IAAvD,GAA8D;AANjB,SAAtD;AAFU,OAAd;AAWD,KAnGkB;;AAAA,SAsGnBkC,mBAtGmB,GAsGIC,aAAD,IAAmB;AACvCjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,aAAZ;AACA,WAAKrB,QAAL,CAAc;AAAEqB,QAAAA;AAAF,OAAd;AACD,KAzGkB;;AAAA,SA4GnBC,gBA5GmB,GA4GCC,UAAD,IAAgB;AACjCnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,UAAZ;AACA,WAAKvB,QAAL,CAAc;AAAEuB,QAAAA;AAAF,OAAd;AACD,KA/GkB;;AAAA,SAkHnBC,aAlHmB,GAkHH,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAAD,KAAiC;AAC/CvB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AAD+C,UAGzC1B,IAHyC,GAGhC,KAAKH,KAH2B,CAGzCG,IAHyC;;AAI/C,UAAI0B,KAAJ,EAAW;AACT,cAAMG,eAAe,GAAG7B,IAAI,CAACS,MAAL,GAAc,CAAd,GAAkBT,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAJ,CAAsBzE,EAAtB,GAA2B,CAA7C,GAAiD,CAAzE;AACAgE,QAAAA,IAAI,GAAG,CACL,GAAGA,IADE,EAEL,GAAG0B,KAAK,CAAChD,GAAN,CAAU,CAACnD,GAAD,EAAMuG,KAAN;AACX9F,UAAAA,EAAE,EAAE6F,eAAe,GAAGC;AADX,WAERvG,GAFQ,CAAV,CAFE,CAAP;AAOD;;AACD,UAAIoG,OAAJ,EAAa;AACX3B,QAAAA,IAAI,GAAGA,IAAI,CAACtB,GAAL,CAASnD,GAAG,IAAKoG,OAAO,CAACpG,GAAG,CAACS,EAAL,CAAP,qBAAuBT,GAAvB,EAA+BoG,OAAO,CAACpG,GAAG,CAACS,EAAL,CAAtC,IAAmDT,GAApE,CAAP;AACD;;AACD,UAAIqG,OAAJ,EAAa;AACX5B,QAAAA,IAAI,GAAG,KAAK+B,UAAL,CAAgBH,OAAhB,CAAP;AACD;;AACD,WAAK3B,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAvIkB;;AAAA,SA0InB+B,UA1ImB,GA0ILC,UAAD,IAAgB;AAC3B,YAAMhC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAX,CAAgBiC,KAAhB,EAAb;AACAD,MAAAA,UAAU,CAACE,OAAX,CAAoBC,KAAD,IAAW;AAC5B,cAAML,KAAK,GAAG9B,IAAI,CAACoC,SAAL,CAAe7G,GAAG,IAAIA,GAAG,CAACS,EAAJ,KAAWmG,KAAjC,CAAd;;AACA,YAAIL,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd9B,UAAAA,IAAI,CAACqC,MAAL,CAAYP,KAAZ,EAAmB,CAAnB;AACD;AACF,OALD;AAMA,aAAO9B,IAAP;AACD,KAnJkB;;AAGjB,SAAKH,KAAL,GAAa;AACX;AACAyC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,OAAO,EAAE,CACP;AAAEpD,QAAAA,IAAI,EAAE,MAAR;AAAgBqD,QAAAA,KAAK;AAArB,OADO,EAEP;AAAErD,QAAAA,IAAI,EAAE,QAAR;AAAkBqD,QAAAA,KAAK,EAAE;AAAzB,OAFO,EAGP;AAAErD,QAAAA,IAAI,EAAE,UAAR;AAAoBqD,QAAAA,KAAK,EAAE;AAA3B,OAHO,EAIP;AAAErD,QAAAA,IAAI,EAAE,OAAR;AAAiBqD,QAAAA,KAAK,EAAE;AAAxB,OAJO,EAKP;AAAErD,QAAAA,IAAI,EAAE,OAAR;AAAiBqD,QAAAA,KAAK,EAAE;AAAxB,OALO,CAHE;AAUXC,MAAAA,qBAAqB,EAAE,CACrB;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBlE,QAAAA,KAAK,EAAE,QAA7B;AAAuCF,QAAAA,KAAK,EAAE;AAA9C,OADqB,EAErB;AAAEoE,QAAAA,UAAU,EAAE,QAAd;AAAwBlE,QAAAA,KAAK,EAAE,OAA/B;AAAwCF,QAAAA,KAAK,EAAE;AAA/C,OAFqB,EAGrB;AAAEoE,QAAAA,UAAU,EAAE,UAAd;AAA0BlE,QAAAA,KAAK,EAAE,OAAjC;AAA0CF,QAAAA,KAAK,EAAE;AAAjD,OAHqB,EAIrB;AAAEoE,QAAAA,UAAU,EAAE,OAAd;AAAuBlE,QAAAA,KAAK,EAAE,QAA9B;AAAwCmE,QAAAA,eAAe,EAAE,IAAzD;AAA+DrE,QAAAA,KAAK,EAAE;AAAtE,OAJqB,EAKrB;AAAEoE,QAAAA,UAAU,EAAE,OAAd;AAAuBlE,QAAAA,KAAK,EAAE,MAA9B;AAAsCF,QAAAA,KAAK,EAAE;AAA7C,OALqB,CAVZ;AAiBX0B,MAAAA,IAAI,EAAE,EAjBK,CAkBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BS;AA4BX4C,MAAAA,OAAO,EAAE,CAAC;AAACF,QAAAA,UAAU,EAAE,MAAb;AAAqB7E,QAAAA,SAAS,EAAE;AAAhC,OAAD,CA5BE;AA6BXgF,MAAAA,cAAc,EAAE,CAAC,QAAD,CA7BL;AA8BXC,MAAAA,WAAW,EAAE,CA9BF;AA+BXC,MAAAA,QAAQ,EAAE,EA/BC;AAgCXC,MAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAhCA;AAiCXC,MAAAA,WAAW,EAAE,EAjCF;AAkCX;AACA3B,MAAAA,aAAa,EAAE,EAnCJ;AAoCXlB,MAAAA,SAAS,EAAE,EApCA;AAqCXoB,MAAAA,UAAU,EAAE,EArCD;AAsCX/B,MAAAA,SAAS,EAAE,EAtCA;AAuCXM,MAAAA,YAAY,EAAE;AAvCH,KAAb;;AAyCA,SAAKmD,iBAAL,GAAyBJ,WAAW,IAAI,KAAK7C,QAAL,CAAc;AAAE6C,MAAAA;AAAF,KAAd,CAAxC;;AACA,SAAKK,cAAL,GAAsBJ,QAAQ,IAAI,KAAK9C,QAAL,CAAc;AAAE8C,MAAAA;AAAF,KAAd,CAAlC;;AACA,SAAKK,iBAAL,GAAyBvI,KAAK,IAAI,KAAKoF,QAAL,CAAc;AAAEgD,MAAAA,WAAW,EAAEpI;AAAf,KAAd,CAAlC;;AACA,SAAKwI,aAAL,GAAqBT,OAAO,IAAI,KAAK3C,QAAL,CAAc;AAAE2C,MAAAA;AAAF,KAAd,CAAhC;AACD;;AAGDU,EAAAA,iBAAiB,GAAG;AAAA,UACXC,OADW,GACC,KAAK3I,KADN,CACX2I,OADW;AAElB,SAAK3I,KAAL,CAAWV,gBAAX,CAA4BqJ,OAAO,CAACC,GAApC;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AAAA,UAC5BC,YAD4B,GACZD,SADY,CAC5BC,YAD4B;AAEnCA,IAAAA,YAAY,CAACA,YAAb,CAA0BzB,OAA1B,CAAkC,CAAC0B,WAAD,EAAcC,CAAd,KAAoB;AACpDD,MAAAA,WAAW,CAAC5H,EAAZ,GAAiB6H,CAAC,GAAG,CAArB;AACD,KAFD;AAGA,SAAK5D,QAAL,CAAc;AACZD,MAAAA,IAAI,EAAE2D,YAAY,CAACA,YADP;AAEZrB,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID,GAlEyC,CAoE1C;;;AAmFAwB,EAAAA,MAAM,GAAG;AAAA,wBAMH,KAAKjE,KANF;AAAA,UAELyC,OAFK,eAELA,OAFK;AAAA,UAEIC,OAFJ,eAEIA,OAFJ;AAAA,UAEaE,qBAFb,eAEaA,qBAFb;AAAA,UAEoCQ,WAFpC,eAEoCA,WAFpC;AAAA,UAEiDL,OAFjD,eAEiDA,OAFjD;AAAA,UAGLC,cAHK,eAGLA,cAHK;AAAA,UAGWE,QAHX,eAGWA,QAHX;AAAA,UAGqBC,SAHrB,eAGqBA,SAHrB;AAAA,UAGgCF,WAHhC,eAGgCA,WAHhC;AAAA,UAILxB,aAJK,eAILA,aAJK;AAAA,UAIUE,UAJV,eAIUA,UAJV;AAAA,UAIsBpB,SAJtB,eAIsBA,SAJtB;AAAA,UAIiCX,SAJjC,eAIiCA,SAJjC;AAAA,UAI4CM,YAJ5C,eAI4CA,YAJ5C;AAQPM,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AARO,UAUAwD,OAVA,GAUW,KAAK3I,KAVhB,CAUA2I,OAVA;AAWP7I,IAAAA,eAAe,GAAG6I,OAAO,CAACQ,OAA1B;AACAtJ,IAAAA,gBAAgB,GAAG8I,OAAO,CAACxE,QAA3B;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIuD,OAAO,GACL;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADK,GAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,KAAKzC,KAAL,CAAWG,IADnB;AAEE,MAAA,OAAO,EAAEuC,OAFX;AAGE,MAAA,QAAQ,EAAExG,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAE0D,SADb;AAEE,MAAA,iBAAiB,EAAE,KAAKD,eAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAWE,oBAAC,WAAD;AACE,MAAA,kBAAkB,EAAEsD,WADtB;AAEE,MAAA,mBAAmB,EAAE,KAAKI,iBAF5B;AAGE,MAAA,QAAQ,EAAEH,QAHZ;AAIE,MAAA,gBAAgB,EAAE,KAAKI,cAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAiBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAkBE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEH,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAqBE,oBAAC,mBAAD;AAAqB,MAAA,GAAG,EAAEH,cAA1B;AAA0C,MAAA,gBAAgB,EAAEU,OAAO,CAACxE,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAsBE,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAE,CAAC,MAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAuBE,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAE,CAAC,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EA0BE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEkE,WADT;AAEE,MAAA,aAAa,EAAE,KAAKG,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EA8BE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BE,oBAAC,OAAD;AAAS,MAAA,aAAa,EAAEnH,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAgCE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAmCE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE2G,OADX;AAEE,MAAA,cAAc,EAAEA,OAFlB;AAGE,MAAA,eAAe,EAAE,KAAKS,aAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAwCE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EA2CE,oBAAC,YAAD;AACE,MAAA,aAAa,EAAE/B,aADjB;AAEE,MAAA,qBAAqB,EAAE,KAAKD,mBAF9B;AAGE,MAAA,UAAU,EAAEG,UAHd;AAIE,MAAA,kBAAkB,EAAE,KAAKD,gBAJ3B;AAKE,MAAA,SAAS,EAAEnB,SALb;AAME,MAAA,iBAAiB,EAAE,KAAKD,eAN1B;AAOE,MAAA,eAAe,EAAE,KAAKsB,aAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAsDE,oBAAC,KAAD;AAAO,MAAA,gBAAgB,EAAEgB,qBAAzB;AACE,MAAA,cAAc,EAAE5G,cADlB;AAEE,MAAA,aAAa,EAAE+C,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,EA2DE,oBAAC,cAAD;AAAgB,MAAA,mBAAmB,MAAnC;AACE,MAAA,kBAAkB,EAAEd,SADtB;AAEE,MAAA,aAAa,EAAEsB,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,EA+DE,oBAAC,cAAD;AACE,MAAA,gBAAgB,MADlB;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,mBAAmB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DF,EAoEE,oBAAC,YAAD;AAAc,MAAA,aAAa,EAAEF,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEF,CADA,EAoFA;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,MAAM,EAAC,UAHT;AAIE,MAAA,IAAI,EAAC,IAJP;AAKE,MAAA,IAAI,EAAC,iBALP;AAME,MAAA,MAAM,EAAC,iBANT;AAOE,MAAA,UAAU,EAAC,KAPb;AAQE,MAAA,SAAS,EAAC,OARZ;AASE,MAAA,MAAM,EAAC,KATT;AAUE,MAAA,WAAW,EAAC,KAVd;AAWE,MAAA,IAAI,EAAC,aAXP;AAYE,MAAA,QAAQ,EAAEqE,OAAO,CAACxE,QAZpB;AAaE,MAAA,WAAW,EAAE,IAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAkBE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAEU,SAAS,CAACgB,MAAV,GAAmB,CAAnB,GAAuB,KAAvB,GAA+B,IAD3C;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,MAAM,EAAC,UAHT;AAIE,MAAA,IAAI,EAAC,IAJP;AAKE,MAAA,IAAI,EAAC,kBALP;AAME,MAAA,MAAM,EAAC,kBANT;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,SAAS,EAAC,OARZ;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,WAAW,EAAC,QAVd;AAWE,MAAA,IAAI,EAAC,YAXP;AAYE,MAAA,QAAQ,EAAE8C,OAAO,CAACxE,QAZpB;AAaE,MAAA,WAAW,EAAEgB,YAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAkCE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAEN,SAAS,CAACgB,MAAV,GAAmB,CAAnB,GAAuB,KAAvB,GAA+B,IAD3C;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,MAAM,EAAC,KAHT;AAIE,MAAA,IAAI,EAAC,IAJP;AAKE,MAAA,IAAI,EAAC,oBALP;AAME,MAAA,MAAM,EAAC,oBANT;AAOE,MAAA,IAAI,EAAC,mDAPP;AAQE,MAAA,UAAU,EAAC,QARb;AASE,MAAA,SAAS,EAAC,OATZ;AAUE,MAAA,MAAM,EAAC,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,CApFA,CARN,CADF;AAgJD;;AArTyC;;AAwT5C,MAAMuD,eAAe,GAAGnE,KAAK,KAAK;AAChCqB,EAAAA,IAAI,EAAErB,KAAK,CAACqB,IADoB;AAEhCyC,EAAAA,YAAY,EAAE9D,KAAK,CAAC8D;AAFY,CAAL,CAA7B;;AAKA,eAAe1J,OAAO,CAAC+J,eAAD,EAAkB;AAAC9J,EAAAA;AAAD,CAAlB,CAAP,CAA6CmF,SAA7C,CAAf","sourcesContent":["import * as React from 'react';\nimport {currencyTypes} from '../dictionary/dictionary';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState,\n  SortingState,\n  IntegratedSorting,\n  SelectionState\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn,\n  TableFixedColumns,\n  TableSelection\n} from '@devexpress/dx-react-grid-bootstrap4';\n\nimport {connect} from 'react-redux';\nimport { loadTransactions } from '../actions/transactionActions';\nimport { ModalDelete} from '../common/ModalDelete';\nimport { ModalAddEdit } from '../common/ModalAddEdit';\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nvar ACCOUNT_CURRENCY = '';\nvar ACCOUNT_BALANCE = '';\n\nconst PaymentFormatter = (props) => {\n  const { value} = props;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : (ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  const { account_currency} = props;\n  ACCOUNT_CURRENCY = account_currency;\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\nconst DateFormatter = (props) => {\n  const { row } = props;\n  const { date } = row;\n  \n  return (\n    <span >\n      {date}\n    </span>\n  )\n}\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={DateFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\nconst NotesFormatter = (props) => {\n  const { row } = props;\n  const { notes } = row;\n  \n  return (\n    <small>\n      {notes}\n    </small>\n  );\n}\n\nconst NotesTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={NotesFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nTable styles\n==================================================================\n*/\nconst TableComponent = ({ ...restProps }) => {\n  return (\n    <Table.Table\n      {...restProps}\n      // className=\"table-striped\"\n    />\n  )\n}\n\nconst getRowId = row => row.id;\n\nconst toolComponent = (props) => {\n  const {children} = props;\n  \n  return (\n    <div>\n      <div className='font-weight-bold bg-primary text-white p-3' style={{display: 'flex', alignItems: 'center' }}>      \n        Current balance: {ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : (ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}{numberWithCommas(ACCOUNT_BALANCE)}{children}\n      </div>\n    </div>\n  )\n}\n\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\nconst CommandButton = ({\n  onExecute, icon, text, hint, color,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-link btn-sm mt-auto mb-auto\"\n      style={{padding: 11}}\n      onClick={(e) => {\n        onExecute();\n        e.stopPropagation();\n      }}\n      title={hint}\n    >\n      <span className={color || 'undefined'}>\n        {icon ? <i className={`fas fa-${icon}` + (text === 'Add' ? ' mr-2':'')} /> : null}\n        <b>{text}</b>\n      </span>\n    </button>\n  );\n}\n\nconst AddButton = ({ onExecute }) => (\n  <CommandButton icon=\"plus\" hint=\"Create new row\" onExecute={onExecute} text={'Add'} />\n);\n\nconst EditButton = ({ onExecute }) => (\n  <CommandButton icon=\"pen\" hint=\"Edit row\" color=\"text-warning\" onExecute={onExecute} />\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <CommandButton\n    icon=\"trash\"\n    hint=\"Delete row\"\n    color=\"text-danger\"\n    onExecute={() => {\n      // eslint-disable-next-line\n      if (window.confirm('Are you sure you want to delete this row?')) {\n        onExecute();\n      }\n    }}\n  />\n);\n\nconst CommitButton = ({ onExecute }) => (\n  <CommandButton icon=\"check\" hint=\"Save changes\" color=\"text-success\" onExecute={onExecute} />\n);\n\nconst CancelButton = ({ onExecute }) => (\n  <CommandButton icon=\"times\" hint=\"Cancel changes\" color=\"text-danger\" onExecute={onExecute} />\n);\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const ButtonComponent = commandComponents[id];\n  return (\n    <ButtonComponent\n      onExecute={onExecute}\n    />\n  );\n};\n\nconst SortingIcon = ({ direction }) => (\n  <span\n    className={`fas fa-arrow-${direction === 'asc' ? 'up' : 'down'}`}\n  />\n);\n\nconst SortLabel = ({ onSort, children, direction }) => {\n  return (\n    <a\n      className=\"font-weight-bold\"\n      onClick={onSort}\n      style={{cursor: 'pointer' }}\n    >\n      {children}\n      {(direction && <SortingIcon direction={direction} />)}\n      {children.props.children === 'Date' ? <div><small>(yyyy/mm/dd)</small></div> : null}\n    </a>\n  );\n}\n\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\nconst LookupEditCell = ({\n  column, selectColumns_values, value, onValueChange,\n}) => (\n    <td\n      style={{\n        verticalAlign: 'middle',\n        padding: 1,\n      }}\n    >\n      <select\n        className=\"form-control\"\n        style={{ width: '100%', textAlign: column.align }}\n        value={value}\n        onChange={e => onValueChange(e.target.value)}\n      >\n        {selectColumns_values.map(val => (\n          <option key={val} value={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n    </td>\n  );\n\nconst Cell = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} className='p-2' />;\n};\n\nconst EditColumn = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} className='text-center' />;\n}\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = (props) => {\n  const { column } = props;\n  const selectColumns_values = selectColumns[column.name];\n  if (selectColumns_values) {\n    return <LookupEditCell {...props} selectColumns_values={selectColumns_values} style={{ verticalAlign: 'middle' }} />;\n  }\n  return <TableEditRow.Cell {...props} style={{ verticalAlign: 'middle' }} />;\n};\n\nconst HeaderStyles = (props) => {\n  return <TableHeaderRow.Cell {...props} style={{ verticalAlign: 'middle' }} />\n}\n\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      loading: true,\n      columns: [\n        { name: 'date', title: `Date` },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 110 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'category', align: 'right', width: 100 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'left', width: 110 },\n      ],\n      rows: []\n        // {\n        //   id: 1,\n        //   date: '2019/09/14',\n        //   amount: 450,\n        //   category: 'Bills for electric',\n        //   currency: 'VND',\n        //   notes: '',\n        //   payee: 'Trung Vo',\n        // }\n      ,\n      sorting: [{columnName: 'date', direction: 'desc'}],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n      selection: [],\n      selected_row: {}\n    };\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n\n  componentDidMount() {\n    const {account } = this.props;\n    this.props.loadTransactions(account._id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {transactions} = nextProps;\n    transactions.transactions.forEach((transaction, i) => {\n      transaction.id = i + 1;\n    })\n    this.setState({\n      rows: transactions.transactions,\n      loading: false\n    })\n  }\n\n  // change selection row\n  changeSelection = (selection) => {\n    const lastSelected = selection\n      .find(selected => this.state.selection.indexOf(selected) === -1);\n    \n    const selected_row = this.state.rows.find(row => row.id === lastSelected);\n    this.setState({\n      selected_row: selected_row\n    })\n\n    if (lastSelected !== undefined) {\n      this.setState({ selection: [lastSelected] });\n    } else {\n      this.setState({ selection: [] });\n    }\n  }\n\n  // update rows after adding\n  changeAddedRows = (addedRows) => {\n    console.log(addedRows);\n    const d = new Date();\n    this.setState({\n      addedRows:\n        addedRows.map(row => (Object.keys(row).length ? row : {\n          date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2,'0') + '/' + String(d.getDate()).padStart(2,'0'),\n          //date: new Date().toISOString(),\n          amount: 0.0,\n          category: 'General',\n          currency: Object.keys(currencyTypes)[0],\n          payee: this.props.auth.isAuthenticated ? this.props.auth.user.name : ''\n        }))\n    })\n  }\n\n  // update rows after editing\n  changeEditingRowIds = (editingRowIds) => {\n    console.log(editingRowIds);\n    this.setState({ editingRowIds });\n  }\n\n  // update rows after changing\n  changeRowChanges = (rowChanges) => {\n    console.log(rowChanges);\n    this.setState({ rowChanges });\n  }\n\n  // updates rows after modifying\n  commitChanges = ({ added, changed, deleted }) => {\n    console.log(added);\n\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      rows = this.deleteRows(deleted);\n    }\n    this.setState({ rows });\n  }\n\n  // update rows after deleting\n  deleteRows = (deletedIds) => {\n    const rows = this.state.rows.slice();\n    deletedIds.forEach((rowId) => {\n      const index = rows.findIndex(row => row.id === rowId);\n      if (index > -1) {\n        rows.splice(index, 1);\n      }\n    });\n    return rows;\n  };\n\n\n  render() {\n    const { \n      loading, columns, tableColumnExtensions, searchValue, sorting,\n      paymentColumns, pageSize, pageSizes, currentPage,\n      editingRowIds, rowChanges, addedRows, selection, selected_row\n      //fixedColumn, leftFixedColumns\n    } = this.state;\n    \n    console.log(selected_row)\n\n    const {account} = this.props;\n    ACCOUNT_BALANCE = account.balance;\n    ACCOUNT_CURRENCY = account.currency;\n\n    return (\n      <div className=\"card\">\n        {\n          loading ? \n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div> :\n            <div>\n            <Grid\n              rows={this.state.rows}\n              columns={columns}\n              getRowId={getRowId}\n            >\n              <SelectionState\n                selection={selection}\n                onSelectionChange={this.changeSelection}\n              />\n\n              {/* Paging for table */}\n              <PagingState\n                defaultCurrentPage={currentPage}\n                onCurrentPageChange={this.changeCurrentPage}\n                pageSize={pageSize}\n                onPageSizeChange={this.changePageSize}\n              />\n              <IntegratedPaging />\n              <PagingPanel pageSizes={pageSizes} />\n\n              {/* Currency styles formatter */}\n              <PaymentTypeProvider for={paymentColumns} account_currency={account.currency} />\n              <DateTypeProvider for={['date']} />\n              <NotesTypeProvider for={['notes']} />\n\n              {/* Searching tool */}\n              <SearchState\n                value={searchValue}\n                onValueChange={this.changeSearchValue}\n              />\n              <IntegratedFiltering />\n              <Toolbar rootComponent={toolComponent} />\n              <SearchPanel />\n\n              {/** Sorting tools */}\n              <SortingState\n                sorting={sorting}\n                defaultSorting={sorting}\n                onSortingChange={this.changeSorting}\n              />\n              <IntegratedSorting />\n\n              {/* Editing tool */}\n              <EditingState\n                editingRowIds={editingRowIds}\n                onEditingRowIdsChange={this.changeEditingRowIds}\n                rowChanges={rowChanges}\n                onRowChangesChange={this.changeRowChanges}\n                addedRows={addedRows}\n                onAddedRowsChange={this.changeAddedRows}\n                onCommitChanges={this.commitChanges}\n              />\n\n              {/* Table itself */}\n              <Table columnExtensions={tableColumnExtensions}\n                tableComponent={TableComponent}\n                cellComponent={Cell}\n              />\n\n              <TableHeaderRow showSortingControls\n                sortLabelComponent={SortLabel}\n                cellComponent={HeaderStyles}\n              />\n              <TableSelection\n                selectByRowClick\n                highlightRow\n                showSelectionColumn={true}\n              />\n              <TableEditRow cellComponent={EditCell} />\n              {/* <TableEditColumn\n            cellComponent={EditColumn}\n            showAddCommand={!addedRows.length}\n            showEditCommand\n            showDeleteCommand\n            commandComponent={Command}\n          /> */}\n              {/* <TableFixedColumns\n            leftColumns={ fixedColumn ? leftFixedColumns : [] }\n          /> */}\n\n\n            </Grid>\n        \n            <div className='card card-footer d-flex flex-row'>\n\n              <ModalAddEdit\n                disabled={false}\n                variant='light'\n                styles='p-2 mr-2'\n                size='sm'\n                type='add-transaction'\n                header=\"New transaction\"\n                buttonText=\"Add\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Add\"\n                mainFuncBtn='Add'\n                icon='fas fa-plus'\n                currency={account.currency}\n                transaction={null}\n              />\n\n              <ModalAddEdit\n                disabled={selection.length > 0 ? false : true}\n                variant='light'\n                styles='p-2 mr-2'\n                size='sm'\n                type='edit-transaction'\n                header=\"Edit transaction\"\n                buttonText=\"Update\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Update\"\n                mainFuncBtn='Update'\n                icon='fas fa-pen'\n                currency={account.currency}\n                transaction={selected_row}\n              />\n\n              <ModalDelete\n                disabled={selection.length > 0 ? false : true}\n                variant='light'\n                styles='p-2'\n                size='sm'\n                type='remove-transaction'\n                header=\"Remove transaction\"\n                body=\"Are you sure you want to remove this transaction?\"\n                buttonText=\"Remove\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Yes\"\n              />\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  transactions: state.transactions\n})\n\nexport default connect(mapStateToProps, {loadTransactions})(DataTable);"]},"metadata":{},"sourceType":"module"}