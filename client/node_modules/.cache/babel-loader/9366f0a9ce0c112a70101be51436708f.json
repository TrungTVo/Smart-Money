{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nexport default class MyChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      window_width: window.innerWidth\n    };\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const window_width = this.state.window_width;\n    const _this$props = this.props,\n          type = _this$props.type,\n          position = _this$props.position,\n          data = _this$props.data;\n    window.addEventListener('resize', () => {\n      this.setState({\n        window_width: window.innerWidth\n      });\n    });\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: type,\n      data: data,\n      options: {\n        title: {\n          text: 'Chart',\n          display: true\n        },\n        responsive: true,\n        legend: {\n          position: window_width > 945 ? type === 'pie' || type === 'doughnut' ? 'right' : position : 'bottom',\n          labels: {\n            generateLabels: function (chart) {\n              if (type === 'line') {\n                return {\n                  hidden: true\n                };\n              }\n\n              var data = chart.data;\n\n              if (data.labels.length && data.datasets.length) {\n                return data.labels.map(function (label, i) {\n                  return {\n                    text: label + ': ' + data.datasets[0].data[i],\n                    fillStyle: data.datasets[0].backgroundColor[i],\n                    index: i\n                  };\n                });\n              }\n\n              return [];\n            }\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const window_width = this.state.window_width;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myChart\",\n      style: {\n        height: window_width < 350 ? '350vh' : '250vh',\n        width: '400vw'\n      },\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js"],"names":["React","Component","Chart","MyChart","state","window_width","window","innerWidth","chartRef","createRef","componentDidMount","props","type","position","data","addEventListener","setState","myChartRef","current","getContext","options","title","text","display","responsive","legend","labels","generateLabels","chart","hidden","length","datasets","map","label","i","fillStyle","backgroundColor","index","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC7CG,KAD6C,GACrC;AACNC,MAAAA,YAAY,EAAEC,MAAM,CAACC;AADf,KADqC;AAAA,SAI7CC,QAJ6C,GAIlCR,KAAK,CAACS,SAAN,EAJkC;AAAA;;AAM7CC,EAAAA,iBAAiB,GAAG;AAAA,UACXL,YADW,GACK,KAAKD,KADV,CACXC,YADW;AAAA,wBAEa,KAAKM,KAFlB;AAAA,UAEXC,IAFW,eAEXA,IAFW;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAEKC,IAFL,eAEKA,IAFL;AAIlBR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtC,WAAKC,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEC,MAAM,CAACC;AAAvB,OAAd;AACD,KAFD;AAIA,UAAMU,UAAU,GAAG,KAAKT,QAAL,CAAcU,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIjB,KAAJ,CAAUe,UAAV,EAAsB;AACpBL,MAAAA,IAAI,EAAEA,IADc;AAEpBE,MAAAA,IAAI,EAAEA,IAFc;AAGpBM,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,OADD;AAELC,UAAAA,OAAO,EAAE;AAFJ,SADA;AAKPC,QAAAA,UAAU,EAAE,IALL;AAMPC,QAAAA,MAAM,EAAE;AACNZ,UAAAA,QAAQ,EAAER,YAAY,GAAG,GAAf,GAAsBO,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAI,UAA1B,GAAuC,OAAvC,GAAiDC,QAAvE,GAAmF,QADvF;AAENa,UAAAA,MAAM,EAAE;AACNC,YAAAA,cAAc,EAAE,UAASC,KAAT,EAAgB;AAC9B,kBAAIhB,IAAI,KAAK,MAAb,EAAqB;AACnB,uBAAO;AAACiB,kBAAAA,MAAM,EAAE;AAAT,iBAAP;AACD;;AACD,kBAAIf,IAAI,GAAGc,KAAK,CAACd,IAAjB;;AACA,kBAAIA,IAAI,CAACY,MAAL,CAAYI,MAAZ,IAAsBhB,IAAI,CAACiB,QAAL,CAAcD,MAAxC,EAAgD;AAC9C,uBAAOhB,IAAI,CAACY,MAAL,CAAYM,GAAZ,CAAgB,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AACzC,yBAAO;AACLZ,oBAAAA,IAAI,EAAEW,KAAK,GAAG,IAAR,GAAenB,IAAI,CAACiB,QAAL,CAAc,CAAd,EAAiBjB,IAAjB,CAAsBoB,CAAtB,CADhB;AAELC,oBAAAA,SAAS,EAAErB,IAAI,CAACiB,QAAL,CAAc,CAAd,EAAiBK,eAAjB,CAAiCF,CAAjC,CAFN;AAGLG,oBAAAA,KAAK,EAAEH;AAHF,mBAAP;AAKD,iBANM,CAAP;AAOD;;AACD,qBAAO,EAAP;AACD;AAhBK;AAFF;AAND;AAHW,KAAtB;AAgCD;;AACDI,EAAAA,MAAM,GAAG;AAAA,UACAjC,YADA,GACgB,KAAKD,KADrB,CACAC,YADA;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,KAAK,EAAE;AAACkC,QAAAA,MAAM,EAAElC,YAAY,GAAG,GAAf,GAAqB,OAArB,GAA+B,OAAxC;AAAiDmC,QAAAA,KAAK,EAAE;AAAxD,OAFT;AAGE,MAAA,GAAG,EAAE,KAAKhC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AA5D4C","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n\nexport default class MyChart extends Component {\n  state = {\n    window_width: window.innerWidth\n  }\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    const {window_width} = this.state;\n    const {type, position, data} = this.props;\n\n    window.addEventListener('resize', () => {\n      this.setState({ window_width: window.innerWidth  })\n    });\n\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: type,\n      data: data,\n      options: {\n        title: {\n          text: 'Chart',\n          display: true\n        },\n        responsive: true,\n        legend: {\n          position: window_width > 945 ? (type === 'pie' || type ==='doughnut' ? 'right' : position) : 'bottom',\n          labels: {\n            generateLabels: function(chart) {\n              if (type === 'line') {\n                return {hidden: true}\n              }\n              var data = chart.data;\n              if (data.labels.length && data.datasets.length) {\n                return data.labels.map(function (label, i) {\n                  return {\n                    text: label + ': ' + data.datasets[0].data[i],\n                    fillStyle: data.datasets[0].backgroundColor[i],\n                    index: i\n                  };\n                });\n              }\n              return [];\n            }\n          }\n        }\n      }\n    });\n  }\n  render() {\n    const {window_width} = this.state;\n    return (\n      <div>\n        <canvas\n          id=\"myChart\" \n          style={{height: window_width < 350 ? '350vh' : '250vh', width: '400vw'}}\n          ref={this.chartRef}\n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}