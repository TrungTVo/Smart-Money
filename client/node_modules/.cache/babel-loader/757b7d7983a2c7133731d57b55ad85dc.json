{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/MainTools.js\";\nimport React, { Component, lazy, Suspense } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport MyChart from '../common/charts/MyChart';\nimport AddAccount from './AddAccount';\nimport data from '../fake-data/data';\nimport { loadAccounts } from '../actions/accountActions';\nimport { loadTransactions } from '../actions/transactionActions';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport AccountDetails from './AccountDetails';\nimport Sidebar from \"react-sidebar\";\nconst mql = window.matchMedia(\"(min-width: 800px)\");\nexport class MainTools extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current_accountName: 'add-account',\n      current_accountId: '',\n      border_styles: 'border-top-0 border-bottom-0 border-left-0',\n      sidebarDocked: mql.matches,\n      sidebarOpen: false\n    };\n\n    this.onSetSidebarOpen = open => {\n      this.setState({\n        sidebarOpen: open\n      });\n    };\n\n    this.mediaQueryChanged = () => {\n      this.setState({\n        sidebarDocked: mql.matches,\n        sidebarOpen: false\n      });\n    };\n\n    this.onClick = e => {\n      if (e.target.name !== 'manageAccount') {\n        this.setState({\n          current_accountName: e.target.name,\n          current_accountId: e.target.id\n        }, () => this.onLoadTransactions());\n      }\n    };\n\n    this.onLoadTransactions = () => {\n      const current_accountId = this.state.current_accountId;\n      this.props.loadTransactions(current_accountId);\n    };\n  }\n\n  componentDidMount() {\n    // load all accounts\n    this.props.loadAccounts();\n  }\n\n  componentWillMount() {\n    mql.addListener(this.mediaQueryChanged);\n  }\n\n  componentWillUnmount() {\n    this.state.mql.removeListener(this.mediaQueryChanged);\n  }\n\n  render() {\n    const _this$state = this.state,\n          current_accountName = _this$state.current_accountName,\n          current_accountId = _this$state.current_accountId,\n          border_styles = _this$state.border_styles;\n    const accounts = this.props.accounts;\n    let account_list;\n\n    if (accounts.loading) {\n      account_list = React.createElement(\"div\", {\n        className: \"d-flex p-2 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else {\n      account_list = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, accounts.accounts.map((account, i) => React.createElement(\"a\", {\n        key: i,\n        href: \"#content\",\n        role: \"tab\",\n        onClick: this.onClick,\n        id: account['_id'],\n        name: account.name,\n        className: \"list-group-item list-group-item-action border-left\" + border_styles + (current_accountName === account.name ? ' text-dark bg-light font-weight-bold' : ''),\n        \"data-toggle\": \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\"), account.name)));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      active: \"tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mt-3 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      sidebar: React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Sidebar content\"),\n      open: this.state.sidebarOpen,\n      docked: this.state.sidebarDocked,\n      onSetOpen: this.onSetSidebarOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Main content\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Button\"))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  accounts: state.accounts,\n  transactions: state.transactions,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  loadAccounts,\n  loadTransactions\n})(MainTools);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/MainTools.js"],"names":["React","Component","lazy","Suspense","NavBar","Footer","MyChart","AddAccount","data","loadAccounts","loadTransactions","connect","Tab","Tabs","TabList","TabPanel","AccountDetails","Sidebar","mql","window","matchMedia","MainTools","state","current_accountName","current_accountId","border_styles","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","setState","mediaQueryChanged","onClick","e","target","name","id","onLoadTransactions","props","componentDidMount","componentWillMount","addListener","componentWillUnmount","removeListener","render","accounts","account_list","loading","map","account","i","mapStateToProps","auth","transactions","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,GAAG,GAAGC,MAAM,CAACC,UAAP,sBAAZ;AAEA,OAAO,MAAMC,SAAN,SAAwBpB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCqB,KADuC,GAC/B;AACNC,MAAAA,mBAAmB,EAAE,aADf;AAENC,MAAAA,iBAAiB,EAAE,EAFb;AAGNC,MAAAA,aAAa,EAAE,4CAHT;AAKNC,MAAAA,aAAa,EAAER,GAAG,CAACS,OALb;AAMNC,MAAAA,WAAW,EAAE;AANP,KAD+B;;AAAA,SAuBvCC,gBAvBuC,GAuBnBC,IAAD,IAAU;AAC3B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEE;AAAf,OAAd;AACD,KAzBsC;;AAAA,SA2BvCE,iBA3BuC,GA2BnB,MAAM;AACxB,WAAKD,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAER,GAAG,CAACS,OAArB;AAA8BC,QAAAA,WAAW,EAAE;AAA3C,OAAd;AACD,KA7BsC;;AAAA,SA+BvCK,OA/BuC,GA+B5BC,CAAD,IAAO;AACf,UAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACrC,aAAKL,QAAL,CAAc;AACZR,UAAAA,mBAAmB,EAAEW,CAAC,CAACC,MAAF,CAASC,IADlB;AAEZZ,UAAAA,iBAAiB,EAAEU,CAAC,CAACC,MAAF,CAASE;AAFhB,SAAd,EAGE,MAAM,KAAKC,kBAAL,EAHR;AAID;AACF,KAtCsC;;AAAA,SAwCvCA,kBAxCuC,GAwClB,MAAM;AAAA,YACjBd,iBADiB,GACI,KAAKF,KADT,CACjBE,iBADiB;AAEzB,WAAKe,KAAL,CAAW7B,gBAAX,CAA4Bc,iBAA5B;AACD,KA3CsC;AAAA;;AAUvCgB,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKD,KAAL,CAAW9B,YAAX;AACD;;AAEDgC,EAAAA,kBAAkB,GAAG;AACnBvB,IAAAA,GAAG,CAACwB,WAAJ,CAAgB,KAAKV,iBAArB;AACD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrB,SAAKrB,KAAL,CAAWJ,GAAX,CAAe0B,cAAf,CAA8B,KAAKZ,iBAAnC;AACD;;AAwBDa,EAAAA,MAAM,GAAG;AAAA,wBAC0D,KAAKvB,KAD/D;AAAA,UACCC,mBADD,eACCA,mBADD;AAAA,UACsBC,iBADtB,eACsBA,iBADtB;AAAA,UACyCC,aADzC,eACyCA,aADzC;AAAA,UAEAqB,QAFA,GAEY,KAAKP,KAFjB,CAEAO,QAFA;AAGP,QAAIC,YAAJ;;AAEA,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpBD,MAAAA,YAAY,GAAG;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACb;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADa,CAAf;AAKD,KAND,MAMO;AACLA,MAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEXD,QAAQ,CAACA,QAAT,CAAkBG,GAAlB,CAAsB,CAACC,OAAD,EAAUC,CAAV,KACpB;AAAG,QAAA,GAAG,EAAEA,CAAR;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,KAAhC;AACE,QAAA,OAAO,EAAE,KAAKlB,OADhB;AACyB,QAAA,EAAE,EAAEiB,OAAO,CAAC,KAAD,CADpC;AAC6C,QAAA,IAAI,EAAEA,OAAO,CAACd,IAD3D;AAEE,QAAA,SAAS,EAAE,uDAAuDX,aAAvD,IAAwEF,mBAAmB,KAAK2B,OAAO,CAACd,IAAhC,GAAuC,sCAAvC,GAAgF,EAAxJ,CAFb;AAE0K,uBAAY,MAFtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,EAG8Cc,OAAO,CAACd,IAHtD,CADF,CAFW,CAAf;AAWD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmEE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADX;AAEE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWM,WAFnB;AAGE,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWI,aAHrB;AAIE,MAAA,SAAS,EAAE,KAAKG,gBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EAOE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAnEF,CAFF,EAiFE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjFF,CADF;AAqFD;;AA3JsC;;AA8JzC,MAAMuB,eAAe,GAAG9B,KAAK,KAAK;AAChC+B,EAAAA,IAAI,EAAE/B,KAAK,CAAC+B,IADoB;AAEhCP,EAAAA,QAAQ,EAAExB,KAAK,CAACwB,QAFgB;AAGhCQ,EAAAA,YAAY,EAAEhC,KAAK,CAACgC,YAHY;AAIhCC,EAAAA,OAAO,EAAEjC,KAAK,CAACiC;AAJiB,CAAL,CAA7B;;AAOA,eAAe5C,OAAO,CAACyC,eAAD,EAAkB;AAAE3C,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAA4DW,SAA5D,CAAf","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport MyChart from '../common/charts/MyChart';\nimport AddAccount from './AddAccount';\nimport data from '../fake-data/data';\nimport {loadAccounts} from '../actions/accountActions';\nimport { loadTransactions } from '../actions/transactionActions';\nimport {connect} from 'react-redux';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\n\nimport AccountDetails from './AccountDetails';\nimport Sidebar from \"react-sidebar\";\n\nconst mql = window.matchMedia(`(min-width: 800px)`);\n\nexport class MainTools extends Component {\n  state = {\n    current_accountName: 'add-account',\n    current_accountId: '',\n    border_styles: 'border-top-0 border-bottom-0 border-left-0',\n\n    sidebarDocked: mql.matches,\n    sidebarOpen: false\n  }\n\n  componentDidMount() {\n    // load all accounts\n    this.props.loadAccounts();\n  }\n\n  componentWillMount() {\n    mql.addListener(this.mediaQueryChanged);\n  }\n\n  componentWillUnmount() {\n    this.state.mql.removeListener(this.mediaQueryChanged);\n  }\n\n  onSetSidebarOpen = (open) => {\n    this.setState({ sidebarOpen: open });\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\n  }\n\n  onClick = (e) => {\n    if (e.target.name !== 'manageAccount') {\n      this.setState({\n        current_accountName: e.target.name,\n        current_accountId: e.target.id,\n      },() => this.onLoadTransactions())\n    }\n  }\n\n  onLoadTransactions = () => {\n    const { current_accountId} = this.state;\n    this.props.loadTransactions(current_accountId);\n  }\n\n  render() {\n    const { current_accountName, current_accountId, border_styles} = this.state;\n    const {accounts} = this.props;\n    let account_list;\n    \n    if (accounts.loading) {\n      account_list = <div className=\"d-flex p-2 justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    } else {\n      account_list = <div>\n        {\n          accounts.accounts.map((account, i) =>\n            <a key={i} href=\"#content\" role=\"tab\"\n              onClick={this.onClick} id={account['_id']} name={account.name}\n              className={\"list-group-item list-group-item-action border-left\" + border_styles + (current_accountName === account.name ? ' text-dark bg-light font-weight-bold' : '')} data-toggle=\"list\">\n              <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>{account.name}\n            </a>\n          )\n        }\n      </div>\n    }\n\n    return (\n      <div>\n        <NavBar active=\"tools\"/>\n        <div className=\"container mt-3 mb-5\">\n          {/* <div className=\"row justify-content-around\">\n            <div className=\"col-md-3 col-sm-12\">\n              <div className=\"list-group\" role=\"tablist\" >\n\n                <a href=\"#account-list\" id=\"manageAccount\" name=\"manageAccount\" onClick={this.onClick}\n                  className=\"list-group-item list-group-item-action border-0\"\n                  role=\"tab\" data-toggle=\"collapse\" aria-expanded='true' >\n                  <i className=\"fas fa-chevron-down\">&nbsp;</i> Manage account\n                </a>\n\n\n                <div className=\"list-group collapse show\" id=\"account-list\">\n                  {account_list}\n                  \n                  <a href=\"#content-add-account\" role=\"tab\"\n                    onClick={this.onClick} id=\"add-account\" name=\"add-account\"\n                    className={\"list-group-item list-group-item-action \" + border_styles + (current_accountName === 'add-account' ? ' text-dark bg-light font-weight-bold' : '') } data-toggle=\"list\">\n                    <span>&nbsp;&nbsp;&nbsp;</span><i className=\"fas fa-plus-circle\">&nbsp;&nbsp;</i>Add account\n                  </a>\n                </div>\n                \n\n                <a className={\"list-group-item list-group-item-action \" + border_styles + (current_accountName === 'statistics' ? ' text-dark bg-light font-weight-bold' : '') } \n                    onClick={this.onClick} id=\"statistics\" name=\"statistics\"\n                    data-toggle=\"list\" href=\"#content-statistics\" role=\"tab\" \n                    aria-controls=\"statistics\">\n                    <i className='fas fa-chart-bar'></i><span>&nbsp;&nbsp;</span>\n                    What do I spend my money on?\n                </a>\n                <a className={\"list-group-item list-group-item-action \" + border_styles + (current_accountName === 'invest-calculator' ? ' text-dark bg-light font-weight-bold' : '') }\n                  onClick={this.onClick} id=\"invest-calculator\" name=\"invest-calculator\"\n                  data-toggle=\"list\" href=\"#content-invest-calculator\" role=\"tab\"\n                  aria-controls=\"invest-calculator\">\n                  <i className='fas fa-cog'></i><span>&nbsp;&nbsp;</span>\n                  Your investing calculator\n                </a>\n                \n              </div>\n            </div>\n\n\n            <div className=\"col-md-9 mt-5\">\n              <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div className=\"tab-pane fade\" id=\"content\" role=\"tabpanel\" >\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <AccountDetails name={current_accountName} id={current_accountId} />\n                  </Suspense>\n                </div>\n                \n                <div className=\"tab-pane fade show active\" id=\"content-add-account\" role=\"tabpanel\" aria-labelledby=\"list-add-account-list\">\n                  <AddAccount/>\n                </div>\n\n                <div className=\"container tab-pane fade m-auto\" id=\"content-statistics\" role=\"tabpanel\" aria-labelledby=\"list-statistics-list\">\n                  <MyChart type={'bar'} position={'bottom'} data={data.pie_bar_data} /><br/>\n                  <MyChart type={'pie'} position={'right'} data={data.pie_bar_data} /> <br/>\n                  <MyChart type={'line'} position={'bottom'} data={data.line_data} /> <br/>\n                </div>\n\n                <div className=\"tab-pane fade m-auto\" id=\"content-invest-calculator\" role=\"tabpanel\" aria-labelledby=\"list-invest-calculator-list\">\n                  Investing calculator\n                </div>\n              </div>\n            </div>\n          </div> */}\n\n          <Sidebar\n            sidebar={<b>Sidebar content</b>}\n            open={this.state.sidebarOpen}\n            docked={this.state.sidebarDocked}\n            onSetOpen={this.onSetSidebarOpen}\n          >\n            <b>Main content</b>\n            <button className='btn btn-primary'>Button</button>\n          </Sidebar>\n\n        </div>\n        \n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  accounts: state.accounts,\n  transactions: state.transactions,\n  success: state.success\n})\n\nexport default connect(mapStateToProps, { loadAccounts, loadTransactions})(MainTools);\n"]},"metadata":{},"sourceType":"module"}