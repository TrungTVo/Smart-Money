{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport { connect } from 'react-redux';\nimport { analysis } from '../../actions/dataAnalysis';\nimport randomColor from '../randomColors';\nimport * as actions from '../../actions/types';\n\nclass MyChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      window_width: window.innerWidth\n    };\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      const window_width = this.state.window_width;\n      const _this$props = this.props,\n            type = _this$props.type,\n            position = _this$props.position,\n            dataAnalysis = _this$props.dataAnalysis;\n      console.log(dataAnalysis);\n      window.addEventListener('resize', () => {\n        this.setState({\n          window_width: window.innerWidth\n        });\n      });\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: type,\n        data: {\n          labels: !dataAnalysis.analyzing ? dataAnalysis.categories : [],\n          datasets: [{\n            data: !dataAnalysis.analyzing ? dataAnalysis.data : [],\n            backgroundColor: randomColor(!dataAnalysis.analyzing ? dataAnalysis.categories.length : 0)\n          }]\n        },\n        options: {\n          title: {\n            text: 'Chart',\n            display: true\n          },\n          //responsive: true,\n          legend: {\n            display: true,\n            position: window_width > 945 ? type === 'pie' || type === 'doughnut' ? 'right' : position : 'bottom',\n            labels: {\n              boxWidth: window_width < 600 ? 15 : 40,\n              generateLabels: function (chart) {\n                var data = chart.data;\n\n                if (data.labels.length && data.datasets.length) {\n                  if (type !== 'line') {\n                    return data.labels.map(function (label, i) {\n                      return {\n                        text: label + ': ' + data.datasets[0].data[i],\n                        fillStyle: data.datasets[0].backgroundColor[i],\n                        index: i\n                      };\n                    });\n                  } else {\n                    return data.datasets.map(function (kind, i) {\n                      return {\n                        text: kind.label,\n                        fillStyle: kind.borderColor\n                      };\n                    });\n                  }\n                }\n\n                return [];\n              }\n            }\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const accounts = nextProps.accounts,\n          transactions = nextProps.transactions,\n          success = nextProps.success,\n          dataAnalysis = nextProps.dataAnalysis;\n\n    if (!accounts.loading && !transactions.loading && Object.keys(accounts.account).length > 0 && Object.keys(transactions.account).length > 0 && typeof success !== 'undefined' && success !== null && (success.type === actions.ADD_TRANSACTION || success.type === actions.UPDATE_TRANSACTION || success.type === actions.DELETE_TRANSACTION)) {\n      this.props.analysis(accounts, transactions);\n      console.log(dataAnalysis);\n      this.buildChart();\n    }\n  }\n\n  render() {\n    const window_width = this.state.window_width;\n    const _this$props2 = this.props,\n          type = _this$props2.type,\n          dataAnalysis = _this$props2.dataAnalysis;\n    console.log(dataAnalysis);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, dataAnalysis.analyzing ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(\"canvas\", {\n      id: \"myChart\",\n      style: {\n        height: window_width < 350 ? type === 'pie' ? '300vh' : '350vh' : type === 'horizontalBar' ? '350vh' : '250vh',\n        width: '400vw'\n      },\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  accounts: state.accounts,\n  transactions: state.transactions,\n  dataAnalysis: state.dataAnalysis\n});\n\nexport default connect(mapStateToProps, {\n  analysis\n})(MyChart);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/common/charts/MyChart.js"],"names":["React","Component","Chart","connect","analysis","randomColor","actions","MyChart","state","window_width","window","innerWidth","chartRef","createRef","buildChart","props","type","position","dataAnalysis","console","log","addEventListener","setState","myChartRef","current","getContext","data","labels","analyzing","categories","datasets","backgroundColor","length","options","title","text","display","legend","boxWidth","generateLabels","chart","map","label","i","fillStyle","index","kind","borderColor","componentDidMount","componentWillReceiveProps","nextProps","accounts","transactions","success","loading","Object","keys","account","ADD_TRANSACTION","UPDATE_TRANSACTION","DELETE_TRANSACTION","render","height","width","mapStateToProps","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\nimport {connect} from 'react-redux';\nimport { analysis} from '../../actions/dataAnalysis';\nimport randomColor from '../randomColors';\nimport * as actions from '../../actions/types';\n\nclass MyChart extends Component {\n  state = {\n    window_width: window.innerWidth\n  }\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { accounts, transactions, success, dataAnalysis} = nextProps;\n    \n    if (!accounts.loading && !transactions.loading\n      && Object.keys(accounts.account).length > 0 && Object.keys(transactions.account).length > 0\n      && typeof success !== 'undefined' && success !== null && (success.type === actions.ADD_TRANSACTION || success.type === actions.UPDATE_TRANSACTION || success.type === actions.DELETE_TRANSACTION) ) {\n\n      this.props.analysis(accounts, transactions);\n      console.log(dataAnalysis)\n      this.buildChart();\n    }\n  }\n\n  buildChart = () => {\n    const {window_width} = this.state;\n    const { type, position, dataAnalysis} = this.props;\n    console.log(dataAnalysis);\n    window.addEventListener('resize', () => {\n      this.setState({ window_width: window.innerWidth  })\n    });\n\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: type,\n      data: {\n        labels: !dataAnalysis.analyzing ? dataAnalysis.categories : [],\n        datasets: [\n          {\n            data: !dataAnalysis.analyzing ? dataAnalysis.data : [],\n            backgroundColor: randomColor(!dataAnalysis.analyzing ? dataAnalysis.categories.length : 0)\n          }\n        ]\n      },\n      options: {\n        title: {\n          text: 'Chart',\n          display: true\n        },\n        //responsive: true,\n        legend: {\n          display: true,\n          position: window_width > 945 ? (type === 'pie' || type ==='doughnut' ? 'right' : position) : 'bottom',\n          labels: {\n            boxWidth: window_width < 600 ? 15 : 40,\n            generateLabels: function(chart) {\n              var data = chart.data;\n              if (data.labels.length && data.datasets.length) {\n                if (type !== 'line') {\n                  return data.labels.map(function (label, i) {\n                    return {\n                      text: label + ': ' + data.datasets[0].data[i],\n                      fillStyle: data.datasets[0].backgroundColor[i],\n                      index: i\n                    };\n                  });\n                } else {\n                  return data.datasets.map(function(kind, i) {\n                    return {\n                      text: kind.label,\n                      fillStyle: kind.borderColor\n                    }\n                  })\n                }\n              }\n              return [];\n            }\n          }\n        }\n      }\n    });\n  }\n  render() {\n    const {window_width} = this.state;\n    const { type, dataAnalysis } = this.props;\n    console.log(dataAnalysis);\n    return (\n      <div>\n        {\n          dataAnalysis.analyzing ? \n            <div className=\"d-flex justify-content-center mb-4\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          : \n            <canvas\n              id=\"myChart\"\n              style={{ height: window_width < 350 ? (type === 'pie' ? '300vh' : '350vh') : (type === 'horizontalBar' ? '350vh' : '250vh'), width: '400vw' }}\n              ref={this.chartRef}\n            />\n            \n        }\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  accounts: state.accounts,\n  transactions: state.transactions,\n  dataAnalysis: state.dataAnalysis\n}) \n\nexport default connect(mapStateToProps, {analysis})(MyChart);"]},"metadata":{},"sourceType":"module"}