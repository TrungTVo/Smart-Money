{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_ALL_ACCOUNTS, GET_ACCOUNTS_LOADING, ADD_ACCOUNT, LOAD_ACCOUNT, UPDATE_ACCOUNT, DELETE_ACCOUNT } from \"../actions/types\";\nconst initialState = {\n  accounts: [],\n  account: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_ACCOUNTS_LOADING) {\n    return _objectSpread({}, state, {\n      loading: true\n    });\n  } else if (action.type === GET_ALL_ACCOUNTS) {\n    return _objectSpread({}, state, {\n      accounts: action.payload,\n      loading: false\n    });\n  } else if (action.type === ADD_ACCOUNT) {\n    return _objectSpread({}, state, {\n      accounts: [action.payload, ...state.accounts],\n      account: action.payload\n    });\n  } else if (action.type === UPDATE_ACCOUNT) {\n    const _action$payload = action.payload,\n          account_id = _action$payload.account_id,\n          updated_account = _action$payload.updated_account;\n    var found_account_index = state.accounts.findIndex(account => account._id === account_id);\n    state.accounts[found_account_index] = updated_account;\n    console.log(state.accounts);\n    return _objectSpread({}, state, {\n      accounts: state.accounts,\n      account: updated_account\n    });\n  } else if (action.type === DELETE_ACCOUNT) {\n    return _objectSpread({}, state, {\n      accounts: state.accounts.filter(account => account._id !== action.payload)\n    });\n  } else if (action.type === LOAD_ACCOUNT) {\n    return _objectSpread({}, state, {\n      account: action.payload\n    });\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/reducers/accountReducer.js"],"names":["GET_ALL_ACCOUNTS","GET_ACCOUNTS_LOADING","ADD_ACCOUNT","LOAD_ACCOUNT","UPDATE_ACCOUNT","DELETE_ACCOUNT","initialState","accounts","account","loading","state","action","type","payload","account_id","updated_account","found_account_index","findIndex","_id","console","log","filter"],"mappings":";AAAA,SAASA,gBAAT,EACIC,oBADJ,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,cAJJ,EAKIC,cALJ,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgBX,oBAApB,EAA0C;AACxC,6BACKS,KADL;AAEED,MAAAA,OAAO,EAAE;AAFX;AAID,GALD,MAKO,IAAIE,MAAM,CAACC,IAAP,KAAgBZ,gBAApB,EAAsC;AAC3C,6BACKU,KADL;AAEEH,MAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFnB;AAGEJ,MAAAA,OAAO,EAAE;AAHX;AAKD,GANM,MAMA,IAAIE,MAAM,CAACC,IAAP,KAAgBV,WAApB,EAAiC;AACtC,6BACKQ,KADL;AAEEH,MAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B,CAFZ;AAGEC,MAAAA,OAAO,EAAEG,MAAM,CAACE;AAHlB;AAKD,GANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgBR,cAApB,EAAoC;AAAA,4BACHO,MAAM,CAACE,OADJ;AAAA,UAClCC,UADkC,mBAClCA,UADkC;AAAA,UACtBC,eADsB,mBACtBA,eADsB;AAEzC,QAAIC,mBAAmB,GAAGN,KAAK,CAACH,QAAN,CAAeU,SAAf,CAAyBT,OAAO,IAAIA,OAAO,CAACU,GAAR,KAAgBJ,UAApD,CAA1B;AACAJ,IAAAA,KAAK,CAACH,QAAN,CAAeS,mBAAf,IAAsCD,eAAtC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACH,QAAlB;AACA,6BACKG,KADL;AAEEH,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAFlB;AAGEC,MAAAA,OAAO,EAAEO;AAHX;AAKD,GAVM,MAUA,IAAIJ,MAAM,CAACC,IAAP,KAAgBP,cAApB,EAAoC;AACzC,6BACKK,KADL;AAEEH,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAec,MAAf,CAAsBb,OAAO,IAAIA,OAAO,CAACU,GAAR,KAAgBP,MAAM,CAACE,OAAxD;AAFZ;AAID,GALM,MAKA,IAAIF,MAAM,CAACC,IAAP,KAAgBT,YAApB,EAAkC;AACvC,6BACKO,KADL;AAEEF,MAAAA,OAAO,EAAEG,MAAM,CAACE;AAFlB;AAID,GALM,MAKA;AACL,WAAOH,KAAP;AACD;AACF","sourcesContent":["import { GET_ALL_ACCOUNTS, \n    GET_ACCOUNTS_LOADING, \n    ADD_ACCOUNT,\n    LOAD_ACCOUNT,\n    UPDATE_ACCOUNT,\n    DELETE_ACCOUNT\n} from \"../actions/types\";\n\nconst initialState = {\n  accounts: [],\n  account: {},\n  loading: false\n}\n\nexport default function (state = initialState, action) {\n  if (action.type === GET_ACCOUNTS_LOADING) {\n    return {\n      ...state,\n      loading: true\n    }\n  } else if (action.type === GET_ALL_ACCOUNTS) {\n    return {\n      ...state,\n      accounts: action.payload,\n      loading: false\n    }\n  } else if (action.type === ADD_ACCOUNT) {\n    return {\n      ...state,\n      accounts: [action.payload, ...state.accounts],\n      account: action.payload\n    }\n  } else if (action.type === UPDATE_ACCOUNT) {\n    const {account_id, updated_account} = action.payload;\n    var found_account_index = state.accounts.findIndex(account => account._id === account_id);\n    state.accounts[found_account_index] = updated_account;\n    console.log(state.accounts);\n    return {\n      ...state,\n      accounts: state.accounts,\n      account: updated_account\n    }\n  } else if (action.type === DELETE_ACCOUNT) { \n    return {\n      ...state,\n      accounts: state.accounts.filter(account => account._id !== action.payload)\n    }\n  } else if (action.type === LOAD_ACCOUNT) {\n    return {\n      ...state,\n      account: action.payload\n    }\n  } else {\n    return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}