{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js\";\nimport React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\nimport { isNumber } from 'util';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { numberWithCommas } from '../utils/Utils';\n\nclass Evaluate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabIndex: 0,\n      selected_account_id: '',\n      selected_month: new Date().getMonth() + 1,\n      selected_year: new Date().getFullYear(),\n      rendered: false,\n      options: {},\n      series: [],\n      labels: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      }, () => {\n        this.props.analysis(this.state.selected_account_id);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const accounts = nextProps.accounts;\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({\n            rendered: true\n          }, () => {\n            this.props.analysis(this.state.selected_account_id);\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          selected_month = _this$state.selected_month,\n          selected_year = _this$state.selected_year;\n    const _this$props = this.props,\n          accounts = _this$props.accounts,\n          dataAnalysis = _this$props.dataAnalysis;\n    const account = dataAnalysis.account;\n    let hasPositive = [];\n\n    if (!dataAnalysis.loading) {\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n      dataAnalysis.amounts.forEach((amount, i) => {\n        dataAnalysis.amounts[i] = Math.abs(amount);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      active: \"evaluate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mt-3 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultFocus: true,\n      selectedIndex: this.state.tabIndex,\n      onSelect: tabIndex => this.setState({\n        tabIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chart-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Expense statistics \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), accounts.loading ? null : React.createElement(\"span\", {\n      className: \"badge badge-secondary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, accounts.accounts.length)), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Investing tools\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"statistics\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-piggy-bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\xA0\"), \" Know what you're spending daily\"), accounts.loading ? null : accounts.accounts.length === 0 ? 'You currently have no accounts.' : null, React.createElement(\"div\", {\n      className: \"form-group row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      className: \"col-md-4 col-sm-6 col-xs-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lead text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select account:\")), React.createElement(\"div\", {\n      className: \"form-group col-md-7 col-sm-5 col-xs-12 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"selected_account_id\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, !accounts.loading && accounts.accounts.map(account => React.createElement(\"option\", {\n      key: account._id,\n      value: account._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, account.name))))), React.createElement(\"div\", {\n      className: \"row justify-content-between mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"month\",\n      className: \"col-5 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lead text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Month:\")), React.createElement(\"div\", {\n      className: \"form-group col-7 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"selected_month\",\n      value: selected_month,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map((month, i) => React.createElement(\"option\", {\n      key: i,\n      value: month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, month)))))), React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"year\",\n      className: \"col-5 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lead text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Year:\")), React.createElement(\"div\", {\n      className: \"form-group col-7 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"selected_year\",\n      value: selected_year,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: new Date().getFullYear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, new Date().getFullYear()), React.createElement(\"option\", {\n      value: new Date().getFullYear() - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, new Date().getFullYear() - 1))))))), dataAnalysis.analyzing ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Loading...\"))) : dataAnalysis.earned === 0 && dataAnalysis.expense === 0 ? React.createElement(\"p\", {\n      className: \"lead text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"No transactions found.\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-header rounded-0 border-top-0 border-left-0 border-right-0 border-light\",\n      style: {\n        backgroundColor: 'rgb(27,52,75)',\n        backgroundImage: 'linear-gradient(90deg, rgba(27,52,75,1) 0%, rgba(74,17,88,1) 100%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Earned:\"), \" \", React.createElement(\"span\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, currencyTypes[account.currency], !dataAnalysis.loading && isNumber(dataAnalysis.earned) ? numberWithCommas(dataAnalysis.earned) : '')), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Expense:\"), \" \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, currencyTypes[account.currency], !dataAnalysis.loading && isNumber(dataAnalysis.expense) ? numberWithCommas(Math.abs(dataAnalysis.expense)) : '')))), React.createElement(\"div\", {\n      className: \"card border-0 rounded-0 shadow text-dark pt-3 pb-3\",\n      style: {\n        backgroundColor: 'rgb(27,52,75)',\n        backgroundImage: 'linear-gradient(90deg, rgba(27,52,75,1) 0%, rgba(74,17,88,1) 100%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"m-auto text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"lead text-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Click on labels to view details\")), React.createElement(Chart, {\n      options: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            colors: '#ffffff'\n          }\n        },\n        labels: ['earned', 'expense'],\n        colors: ['#66DA26', '#E91E63'],\n        plotOptions: {\n          pie: {\n            donut: {\n              size: '55%',\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  color: '#ffffff'\n                },\n                value: {\n                  show: true,\n                  color: '#ffffff',\n                  offsetY: 3,\n                  fontSize: '9px',\n                  formatter: function (val) {\n                    return currencyTypes[account.currency] + '' + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      series: !dataAnalysis.loading && isNumber(dataAnalysis.earned) && isNumber(dataAnalysis.expense) ? [dataAnalysis.earned, Math.abs(dataAnalysis.expense)] : [],\n      type: \"donut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: {\n        xaxis: {\n          categories: !dataAnalysis.loading ? dataAnalysis.categories : [],\n          labels: {\n            show: true,\n            rotate: -45\n          }\n        },\n        yaxis: {\n          show: false,\n          logarithmic: true,\n          decimalsInFloat: 0,\n          max: hasPositive.length === 0 ? 0 : !dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0\n        },\n        plotOptions: {\n          bar: {\n            distributed: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        }\n      },\n      series: [{\n        name: 'amount',\n        data: !dataAnalysis.loading ? dataAnalysis.amounts : []\n      }],\n      type: \"bar\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))))), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"invest_tools\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"to be updated soon ...\")))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  loadAccounts,\n  analysis\n})(Evaluate);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js"],"names":["React","Component","NavBar","Footer","Tab","Tabs","TabList","TabPanel","connect","loadAccounts","Chart","analysis","isNumber","currencyTypes","numberWithCommas","Evaluate","state","tabIndex","selected_account_id","selected_month","Date","getMonth","selected_year","getFullYear","rendered","options","series","labels","onChange","e","setState","target","id","value","props","componentDidMount","componentWillReceiveProps","nextProps","accounts","loading","length","_id","render","dataAnalysis","account","hasPositive","amounts","filter","amount","forEach","i","Math","abs","map","name","month","analyzing","earned","expense","backgroundColor","backgroundImage","currency","legend","position","colors","plotOptions","pie","donut","size","show","color","offsetY","fontSize","formatter","val","toString","replace","xaxis","categories","rotate","yaxis","logarithmic","decimalsInFloat","max","bar","distributed","dataLabels","enabled","data","mapStateToProps","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;AAEA,MAAMC,QAAN,SAAuBd,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/Be,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,mBAAmB,EAAE,EAFf;AAGNC,MAAAA,cAAc,EAAE,IAAIC,IAAJ,GAAWC,QAAX,KAAsB,CAHhC;AAINC,MAAAA,aAAa,EAAE,IAAIF,IAAJ,GAAWG,WAAX,EAJT;AAKNC,MAAAA,QAAQ,EAAE,KALJ;AAONC,MAAAA,OAAO,EAAE,EAPH;AAQNC,MAAAA,MAAM,EAAE,EARF;AASNC,MAAAA,MAAM,EAAE;AATF,KADuB;;AAAA,SAiC/BC,QAjC+B,GAiCnBC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADZ,OAAd,EAEG,MAAM;AACP,aAAKC,KAAL,CAAWvB,QAAX,CAAoB,KAAKK,KAAL,CAAWE,mBAA/B;AACD,OAJD;AAKD,KAvC8B;AAAA;;AAa/BiB,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWzB,YAAX;AACD;;AAED2B,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AAAA,UAC3BC,QAD2B,GACfD,SADe,CAC3BC,QAD2B;;AAGnC,QAAI,CAACA,QAAQ,CAACC,OAAV,IAAqBD,QAAQ,CAACA,QAAT,CAAkBE,MAAlB,GAA2B,CAApD,EAAuD;AACrD,WAAKV,QAAL,CAAc;AACZZ,QAAAA,mBAAmB,EAAEoB,QAAQ,CAACA,QAAT,CAAkB,CAAlB,EAAqBG;AAD9B,OAAd,EAEG,MAAM;AACP,YAAI,CAAC,KAAKzB,KAAL,CAAWQ,QAAhB,EAA0B;AACxB,eAAKM,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAE;AAAZ,WAAd,EAAiC,MAAM;AACrC,iBAAKU,KAAL,CAAWvB,QAAX,CAAoB,KAAKK,KAAL,CAAWE,mBAA/B;AACD,WAFD;AAGD;AACF,OARD;AASD;AACF;;AAUDwB,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAK1B,KADtC;AAAA,UACAG,cADA,eACAA,cADA;AAAA,UACgBG,aADhB,eACgBA,aADhB;AAAA,wBAE2B,KAAKY,KAFhC;AAAA,UAEAI,QAFA,eAEAA,QAFA;AAAA,UAEUK,YAFV,eAEUA,YAFV;AAAA,UAGAC,OAHA,GAGWD,YAHX,CAGAC,OAHA;AAIP,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAI,CAACF,YAAY,CAACJ,OAAlB,EAA0B;AACxBM,MAAAA,WAAW,GAAGF,YAAY,CAACG,OAAb,CAAqBC,MAArB,CAA4BC,MAAM,IAAIA,MAAM,GAAG,CAA/C,CAAd;AACAL,MAAAA,YAAY,CAACG,OAAb,CAAqBG,OAArB,CAA6B,CAACD,MAAD,EAASE,CAAT,KAAe;AAC1CP,QAAAA,YAAY,CAACG,OAAb,CAAqBI,CAArB,IAA0BC,IAAI,CAACC,GAAL,CAASJ,MAAT,CAA1B;AACD,OAFD;AAGD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,IAApB;AAA0B,MAAA,aAAa,EAAE,KAAKhC,KAAL,CAAWC,QAApD;AAA8D,MAAA,QAAQ,EAAEA,QAAQ,IAAI,KAAKa,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADtC,yBAEqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFrB,EAIIqB,QAAQ,CAACC,OAAT,GAAmB,IAAnB,GACE;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDD,QAAQ,CAACA,QAAT,CAAkBE,MAAtE,CALN,CADF,EAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvC,oBAVF,CADF,EAiBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,qCADF,EAKIF,QAAQ,CAACC,OAAT,GAAmB,IAAnB,GAEED,QAAQ,CAACA,QAAT,CAAkBE,MAAlB,KAA6B,CAA7B,GACA,iCADA,GACoC,IAR1C,EAWE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,KAAK,EAAE;AAAE,mBAAW,MAAb;AAAqB,sBAAc;AAAnC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,SAAS,EAAC,4CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,qBAArC;AACE,MAAA,QAAQ,EAAE,KAAKZ,QADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,CAACU,QAAQ,CAACC,OAAV,IAAqBD,QAAQ,CAACA,QAAT,CAAkBe,GAAlB,CAAuBT,OAAD,IACzC;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAACH,GAArB;AAA0B,MAAA,KAAK,EAAEG,OAAO,CAACH,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CG,OAAO,CAACU,IAAvD,CADmB,CAHzB,CADF,CAJF,CAXF,EA6BE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,KAAK,EAAE;AAAE,mBAAW,MAAb;AAAqB,sBAAc;AAAnC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,gBAArC;AAAsD,MAAA,KAAK,EAAEnC,cAA7D;AAA6E,MAAA,QAAQ,EAAE,KAAKS,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,EAA8C,IAA9C,EAAmD,IAAnD,EAAwD,IAAxD,EAA8DyB,GAA9D,CAAkE,CAACE,KAAD,EAAOL,CAAP,KAChE;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,KAA/B,CADF,CAFJ,CADF,CAJF,CADF,CADF,EAmBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,KAAK,EAAE;AAAE,mBAAW,MAAb;AAAqB,sBAAc;AAAnC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,eAArC;AAAqD,MAAA,KAAK,EAAEjC,aAA5D;AAA2E,MAAA,QAAQ,EAAE,KAAKM,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAE,IAAIR,IAAJ,GAAWG,WAAX,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,IAAIH,IAAJ,GAAWG,WAAX,EAA1C,CADF,EAEE;AAAQ,MAAA,KAAK,EAAE,IAAIH,IAAJ,GAAWG,WAAX,KAAyB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,IAAIH,IAAJ,GAAWG,WAAX,KAAyB,CAArE,CAFF,CADF,CAJF,CADF,CAnBF,CA7BF,CAFF,EAmEIoB,YAAY,CAACa,SAAb,GACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF,GAQIb,YAAY,CAACc,MAAb,KAAwB,CAAxB,IAA6Bd,YAAY,CAACe,OAAb,KAAyB,CAAtD,GACA;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mFAAf;AAAmG,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,eAAnB;AAAoCC,QAAAA,eAAe,EAAE;AAArD,OAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OAC+C;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC/C,aAAa,CAAC+B,OAAO,CAACiB,QAAT,CAA7C,EAAiE,CAAClB,YAAY,CAACJ,OAAd,IAAyB3B,QAAQ,CAAC+B,YAAY,CAACc,MAAd,CAAjC,GAAyD3C,gBAAgB,CAAC6B,YAAY,CAACc,MAAd,CAAzE,GAAiG,EAAlK,CAD/C,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACgD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B5C,aAAa,CAAC+B,OAAO,CAACiB,QAAT,CAA5C,EAAgE,CAAClB,YAAY,CAACJ,OAAd,IAAyB3B,QAAQ,CAAC+B,YAAY,CAACe,OAAd,CAAjC,GAA0D5C,gBAAgB,CAACqC,IAAI,CAACC,GAAL,CAAST,YAAY,CAACe,OAAtB,CAAD,CAA1E,GAA6G,EAA7K,CADhD,CAJF,CADF,CADF,EAWE;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAoE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,eAAnB;AAAoCC,QAAAA,eAAe,EAAE;AAArD,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF,EAIE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE;AACPE,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,QADJ;AAENpC,UAAAA,MAAM,EAAE;AACNqC,YAAAA,MAAM,EAAE;AADF;AAFF,SADD;AAOPrC,QAAAA,MAAM,EAAE,CACN,QADM,EAEN,SAFM,CAPD;AAWPqC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAXD;AAYPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,KADD;AAELzC,cAAAA,MAAM,EAAE;AACN0C,gBAAAA,IAAI,EAAE,IADA;AAENf,gBAAAA,IAAI,EAAE;AACJe,kBAAAA,IAAI,EAAE,IADF;AAEJC,kBAAAA,KAAK,EAAE;AAFH,iBAFA;AAMNrC,gBAAAA,KAAK,EAAE;AACLoC,kBAAAA,IAAI,EAAE,IADD;AAELC,kBAAAA,KAAK,EAAE,SAFF;AAGLC,kBAAAA,OAAO,EAAE,CAHJ;AAILC,kBAAAA,QAAQ,EAAE,KAJL;AAKLC,kBAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACxB,2BAAO7D,aAAa,CAAC+B,OAAO,CAACiB,QAAT,CAAb,GAAkC,EAAlC,GAAuCa,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,uBAAvB,EAAgD,GAAhD,CAA9C;AACD;AAPI;AAND;AAFH;AADJ;AADM;AAZN,OADX;AAqCE,MAAA,MAAM,EACJ,CAACjC,YAAY,CAACJ,OAAd,IAAyB3B,QAAQ,CAAC+B,YAAY,CAACc,MAAd,CAAjC,IAA0D7C,QAAQ,CAAC+B,YAAY,CAACe,OAAd,CAAlE,GAA2F,CAACf,YAAY,CAACc,MAAd,EAAsBN,IAAI,CAACC,GAAL,CAAST,YAAY,CAACe,OAAtB,CAAtB,CAA3F,GAAmJ,EAtCvJ;AAwCE,MAAA,IAAI,EAAC,OAxCP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAXF,CADF,EA+DE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAEE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE;AACPmB,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAACnC,YAAY,CAACJ,OAAd,GAAwBI,YAAY,CAACmC,UAArC,GAAkD,EADzD;AAELnD,UAAAA,MAAM,EAAE;AACN0C,YAAAA,IAAI,EAAE,IADA;AAENU,YAAAA,MAAM,EAAE,CAAC;AAFH;AAFH,SADA;AAQPC,QAAAA,KAAK,EAAE;AACLX,UAAAA,IAAI,EAAE,KADD;AAELY,UAAAA,WAAW,EAAE,IAFR;AAGLC,UAAAA,eAAe,EAAE,CAHZ;AAILC,UAAAA,GAAG,EAAEtC,WAAW,CAACL,MAAZ,KAAuB,CAAvB,GAA2B,CAA3B,GACF,CAACG,YAAY,CAACJ,OAAd,GAAwBY,IAAI,CAACgC,GAAL,CAAS,GAAGxC,YAAY,CAACG,OAAzB,CAAxB,GAA4D;AAL1D,SARA;AAePmB,QAAAA,WAAW,EAAE;AACXmB,UAAAA,GAAG,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADM,SAfN;AAoBPC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC;AApBL,OADX;AAyBE,MAAA,MAAM,EACJ,CAAC;AACCjC,QAAAA,IAAI,EAAE,QADP;AAECkC,QAAAA,IAAI,EAAE,CAAC7C,YAAY,CAACJ,OAAd,GAAwBI,YAAY,CAACG,OAArC,GAA+C;AAFtD,OAAD,CA1BJ;AA+BE,MAAA,IAAI,EAAC,KA/BP;AAgCE,MAAA,KAAK,EAAC,MAhCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA/DF,CADF,CA9EV,CAjBF,EA2ME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CA3MF,CADF,CAHF,EAyNE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzNF,CADF;AA6ND;;AAjR8B;;AAoRjC,MAAM2C,eAAe,GAAGzE,KAAK,KAAK;AAChCsB,EAAAA,QAAQ,EAAEtB,KAAK,CAACsB,QADgB;AAEhCK,EAAAA,YAAY,EAAE3B,KAAK,CAAC2B,YAFY;AAGhC+C,EAAAA,OAAO,EAAE1E,KAAK,CAAC0E;AAHiB,CAAL,CAA7B;;AAMA,eAAelF,OAAO,CAACiF,eAAD,EAAkB;AAAEhF,EAAAA,YAAF;AAAgBE,EAAAA;AAAhB,CAAlB,CAAP,CAAoDI,QAApD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\nimport { isNumber } from 'util';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { numberWithCommas } from '../utils/Utils';\n\nclass Evaluate extends Component {\n  state = {\n    tabIndex: 0,\n    selected_account_id: '',\n    selected_month: new Date().getMonth()+1,\n    selected_year: new Date().getFullYear(),\n    rendered: false,\n\n    options: {},\n    series: [],\n    labels: []\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { accounts} = nextProps;\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({ rendered: true}, () => {\n            this.props.analysis(this.state.selected_account_id);\n          })\n        }\n      })\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    }, () => {\n      this.props.analysis(this.state.selected_account_id);\n    })\n  }\n\n  render() {\n    const {selected_month, selected_year} = this.state;\n    const {accounts, dataAnalysis } = this.props;\n    const {account} = dataAnalysis;\n    let hasPositive = [];\n    if (!dataAnalysis.loading){\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n      dataAnalysis.amounts.forEach((amount, i) => {\n        dataAnalysis.amounts[i] = Math.abs(amount)\n      })\n    }\n    return (\n      <div>\n        <NavBar active=\"evaluate\" />\n\n        <div className=\"container mt-3 mb-5\">\n          <Tabs defaultFocus={true} selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n            <TabList>\n              <Tab>\n                <i className='fas fa-chart-bar'></i><span>&nbsp;&nbsp;</span>\n                Expense statistics <span>&nbsp;&nbsp;</span>\n                {\n                  accounts.loading ? null :\n                    <span className=\"badge badge-secondary badge-pill\">{accounts.accounts.length}</span>\n                }\n\n              </Tab>\n              <Tab>\n                <i className='fas fa-calculator'></i><span>&nbsp;&nbsp;</span>\n                Investing tools\n              </Tab>\n            </TabList>\n\n            <TabPanel >\n              <br />\n              <div id='statistics' className='m-auto'>\n                <h4 className='text-muted'>\n                  <i className='fas fa-piggy-bank'>&nbsp;</i> Know what you're spending daily\n                </h4>\n                {\n                  accounts.loading ? null :\n                  (\n                    accounts.accounts.length === 0 ?\n                    'You currently have no accounts.' : null\n                  )\n                }\n                <div className=\"form-group row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                  <label htmlFor=\"currency\" className=\"col-md-4 col-sm-6 col-xs-12 col-form-label\">\n                    <span className='lead text-muted'>Select account:</span>\n                  </label>\n                  <div className=\"form-group col-md-7 col-sm-5 col-xs-12 mt-2\">\n                    <select className=\"custom-select\" id='selected_account_id' \n                      onChange={this.onChange} >\n                      {\n                        !accounts.loading && accounts.accounts.map((account) => \n                          <option key={account._id} value={account._id}>{account.name}</option>\n                        )\n                      }\n                    </select>\n                    \n                  </div>\n                </div>\n                \n\n                <div className=\"row justify-content-between mb-3\">\n                  <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                      <label htmlFor=\"month\" className=\"col-5 col-form-label\">\n                        <span className='lead text-muted'>Month:</span>\n                      </label>\n                      <div className=\"form-group col-7 mt-2\">\n                        <select className=\"custom-select\" id='selected_month' value={selected_month} onChange={this.onChange} >\n                          {\n                            ['01','02','03','04','05','06','07','08','09','10','11','12'].map((month,i) =>\n                              <option key={i} value={month}>{month}</option>\n                            )\n                          }\n                          \n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                      <label htmlFor=\"year\" className=\"col-5 col-form-label\">\n                        <span className='lead text-muted'>Year:</span>\n                      </label>\n                      <div className=\"form-group col-7 mt-2\">\n                        <select className=\"custom-select\" id='selected_year' value={selected_year} onChange={this.onChange} >\n                          <option value={new Date().getFullYear()}>{new Date().getFullYear()}</option>\n                          <option value={new Date().getFullYear()-1}>{new Date().getFullYear()-1}</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {\n                dataAnalysis.analyzing ?\n                  <div className=\"d-flex justify-content-center mb-4\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  </div>\n                  :\n                  (\n                    dataAnalysis.earned === 0 && dataAnalysis.expense === 0 ?\n                    <p className='lead text-muted'>No transactions found.</p>\n                    :\n                      <div>\n                        <div className=\"row justify-content-between\">\n                          <div className=\"col-md-6 col-sm-12\">\n                            <div className='card card-header rounded-0 border-top-0 border-left-0 border-right-0 border-light' style={{ backgroundColor: 'rgb(27,52,75)', backgroundImage: 'linear-gradient(90deg, rgba(27,52,75,1) 0%, rgba(74,17,88,1) 100%)' }}>\n                              <div className='d-flex'>\n                                <div className='mr-auto'>\n                                  <small className='text-dark'>Earned:</small> <span className='text-success'>{currencyTypes[account.currency]}{!dataAnalysis.loading && isNumber(dataAnalysis.earned) ? numberWithCommas(dataAnalysis.earned) : ''}</span>\n                                </div>\n                                <div>\n                                  <small className='text-dark'>Expense:</small> <span className='text-danger'>{currencyTypes[account.currency]}{!dataAnalysis.loading && isNumber(dataAnalysis.expense) ? numberWithCommas(Math.abs(dataAnalysis.expense)) : ''}</span>\n                                </div>\n                              </div>\n                            </div>\n                            <div className='card border-0 rounded-0 shadow text-dark pt-3 pb-3' style={{ backgroundColor: 'rgb(27,52,75)', backgroundImage: 'linear-gradient(90deg, rgba(27,52,75,1) 0%, rgba(74,17,88,1) 100%)' }}>\n                              <div className='m-auto text-center'>\n                                <div className='mb-3'>\n                                  <small className='lead text-info'>Click on labels to view details</small>\n                                </div>\n                                <Chart\n                                  options={{\n                                    legend: {\n                                      position: 'bottom',\n                                      labels: {\n                                        colors: '#ffffff'\n                                      }\n                                    },\n                                    labels: [\n                                      'earned',\n                                      'expense'\n                                    ],\n                                    colors: ['#66DA26', '#E91E63'],\n                                    plotOptions: {\n                                      pie: {\n                                        donut: {\n                                          size: '55%',\n                                          labels: {\n                                            show: true,\n                                            name: {\n                                              show: true,\n                                              color: '#ffffff'\n                                            },\n                                            value: {\n                                              show: true,\n                                              color: '#ffffff',\n                                              offsetY: 3,\n                                              fontSize: '9px',\n                                              formatter: function (val) {\n                                                return currencyTypes[account.currency] + '' + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }}\n                                  series={\n                                    !dataAnalysis.loading && isNumber(dataAnalysis.earned) && isNumber(dataAnalysis.expense) ? [dataAnalysis.earned, Math.abs(dataAnalysis.expense)] : []\n                                  }\n                                  type=\"donut\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-6 col-sm-12\">\n                            <br /><br />\n                            <Chart\n                              options={{\n                                xaxis: {\n                                  categories: !dataAnalysis.loading ? dataAnalysis.categories : [],\n                                  labels: {\n                                    show: true,\n                                    rotate: -45,\n                                  }\n                                },\n                                yaxis: {\n                                  show: false,\n                                  logarithmic: true,\n                                  decimalsInFloat: 0,\n                                  max: hasPositive.length === 0 ? 0 :\n                                    (!dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0)\n                                },\n                                plotOptions: {\n                                  bar: {\n                                    distributed: true\n                                  }\n                                },\n                                dataLabels: {\n                                  enabled: false\n                                }\n                              }}\n                              series={\n                                [{\n                                  name: 'amount',\n                                  data: !dataAnalysis.loading ? dataAnalysis.amounts : []\n                                }]\n                              }\n                              type=\"bar\"\n                              width=\"100%\"\n                            />\n                          </div>\n                        </div>\n\n                      </div>\n                  )\n              }\n\n            </TabPanel>\n            <TabPanel >\n              <br />\n              <div id='invest_tools' className='m-auto'>\n                to be updated soon ...\n              </div>\n            </TabPanel>\n\n          </Tabs>\n        </div>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n})\n\nexport default connect(mapStateToProps, { loadAccounts, analysis})(Evaluate);\n"]},"metadata":{},"sourceType":"module"}