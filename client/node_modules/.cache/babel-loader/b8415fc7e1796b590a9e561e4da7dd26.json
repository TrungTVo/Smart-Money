{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/TransactionsTable.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { currencyTypes } from '../dictionary/dictionary'; // convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport class TransactionsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    var currency = 'USD';\n    var data = [{\n      date: '2019/05/19',\n      amount: 45.89,\n      category: 'Bills',\n      notes: 'Short notes for description',\n      payee: 'Trung Vo'\n    }, {\n      date: '2019/03/20',\n      amount: 55.89,\n      category: 'Gas',\n      notes: 'Short notes for',\n      payee: 'Trung Vo'\n    }, {\n      date: '2019/05/20',\n      amount: -5.89,\n      category: 'Electric bills',\n      notes: 'Short notes for description',\n      payee: 'Trung T Vo'\n    }, {\n      date: '2019/06/20',\n      amount: 4500.89,\n      category: 'Tuition',\n      notes: 'Paid June rent already, just reminder',\n      payee: 'Trung Vo'\n    }, {\n      date: '2019/01/20',\n      amount: -445.89,\n      category: 'General',\n      notes: 'Short notes (general)',\n      payee: 'Trung Vo'\n    }, {\n      date: '2019/05/27',\n      amount: 4.89,\n      category: 'Cars payment',\n      notes: 'Short notes',\n      payee: 'Trung Vo'\n    }];\n    var columns = [{\n      Header: 'Date',\n      accessor: 'date',\n      id: 'date',\n      style: {\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }\n    }, {\n      Header: 'Amount',\n      accessor: 'amount',\n      minWidth: 160,\n      style: {\n        whiteSpace: 'normal',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      Cell: props => React.createElement(\"span\", {\n        className: \"number float-right ml-auto\",\n        style: {\n          color: props.value >= 0 ? 'green' : 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, props.value >= 0 ? '+' : '-', React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, currency === 'USD' ? currencyTypes.USD : currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(props.value)))\n    }, {\n      Header: 'Category',\n      accessor: 'category',\n      style: {\n        'whiteSpace': 'normal',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      minWidth: 200,\n      Cell: props => React.createElement(\"span\", {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, props.value)\n    }, {\n      Header: 'Notes',\n      accessor: 'notes',\n      id: 'notes',\n      style: {\n        'whiteSpace': 'normal',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      minWidth: 250,\n      Cell: props => React.createElement(\"span\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, props.value)\n    }, {\n      Header: 'Payee',\n      accessor: 'payee',\n      minWidth: 180,\n      style: {\n        'whiteSpace': 'normal',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }\n    }];\n    return React.createElement(ReactTable, {\n      className: \"-striped -highlight\",\n      sorted: [{\n        id: 'date',\n        desc: true\n      }],\n      data: data,\n      columns: columns,\n      defaultPageSize: 5,\n      pageSizeOptions: [5, 10, 15, 20],\n      defaultSorted: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n  }\n\n}\nexport default TransactionsTable;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/TransactionsTable.js"],"names":["React","Component","ReactTable","currencyTypes","numberWithCommas","x","toString","replace","TransactionsTable","state","render","currency","data","date","amount","category","notes","payee","columns","Header","accessor","id","style","textAlign","display","flexDirection","justifyContent","minWidth","whiteSpace","Cell","props","color","value","USD","VND","EUR","Math","abs","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { currencyTypes } from '../dictionary/dictionary';\n\n\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport class TransactionsTable extends Component {\n  state = {\n    \n  }\n  render() {\n    var currency = 'USD'\n    var data = [\n      {\n        date: '2019/05/19',\n        amount: 45.89,\n        category: 'Bills',\n        notes: 'Short notes for description',\n        payee: 'Trung Vo'\n      },\n      {\n        date: '2019/03/20',\n        amount: 55.89,\n        category: 'Gas',\n        notes: 'Short notes for',\n        payee: 'Trung Vo'\n      },\n      {\n        date: '2019/05/20',\n        amount: -5.89,\n        category: 'Electric bills',\n        notes: 'Short notes for description',\n        payee: 'Trung T Vo'\n      },\n      {\n        date: '2019/06/20',\n        amount: 4500.89,\n        category: 'Tuition',\n        notes: 'Paid June rent already, just reminder',\n        payee: 'Trung Vo'\n      },\n      {\n        date: '2019/01/20',\n        amount: -445.89,\n        category: 'General',\n        notes: 'Short notes (general)',\n        payee: 'Trung Vo'\n      },\n      {\n        date: '2019/05/27',\n        amount: 4.89,\n        category: 'Cars payment',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      },\n    ]\n    var columns = [\n      {\n        Header: 'Date',\n        accessor: 'date',\n        id: 'date',\n        style: { textAlign: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center' },\n      },\n      {\n        Header: 'Amount',\n        accessor: 'amount',\n        minWidth: 160,\n        style: { whiteSpace: 'normal', display: 'flex', flexDirection: 'column', justifyContent: 'center' },\n        Cell: props =>\n          <span\n            className='number float-right ml-auto'\n            style={{ color: props.value >= 0 ? 'green' : 'red' }}\n          >\n            {props.value >= 0 ? '+' : '-'}\n            <small>{currency === 'USD' ? currencyTypes.USD : (currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>\n            {numberWithCommas(Math.abs(props.value))}\n          </span>\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n        style: { 'whiteSpace': 'normal', textAlign: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center' },\n        minWidth: 200,\n        Cell: props =>\n          <span className='p-2'>\n            {props.value}\n          </span>\n      },\n      {\n        Header: 'Notes',\n        accessor: 'notes',\n        id: 'notes',\n        style: { 'whiteSpace': 'normal', textAlign: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center' },\n        minWidth: 250,\n        Cell: props =>\n          <span className='text-center'>\n            {props.value}\n          </span>\n      },\n      {\n        Header: 'Payee',\n        accessor: 'payee',\n        minWidth: 180,\n        style: { 'whiteSpace': 'normal', textAlign: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center' },\n      }\n    ]\n\n    return (\n      <ReactTable\n        className=\"-striped -highlight\"\n        sorted={[{ \n          id: 'date',\n          desc: true\n        }]}\n        data={data}\n        columns={columns}\n        defaultPageSize={5}\n        pageSizeOptions={[5, 10, 15, 20]}\n        defaultSorted={['date']}\n      />\n\n    )\n  }\n}\n\nexport default TransactionsTable;\n"]},"metadata":{},"sourceType":"module"}