{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/common/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass DoughnutChart extends Component {\n  render() {\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Customer Satisfaction\"\n      },\n      subtitles: [{\n        text: \"71% Positive\",\n        verticalAlign: \"center\",\n        fontSize: 24,\n        dockInsidePlotArea: true\n      }],\n      data: [{\n        type: \"doughnut\",\n        showInLegend: true,\n        indexLabel: \"{name}: {y}\",\n        yValueFormatString: \"#,###'%'\",\n        dataPoints: [{\n          name: \"Unsatisfied\",\n          y: 5\n        }, {\n          name: \"Very Unsatisfied\",\n          y: 31\n        }, {\n          name: \"Very Satisfied\",\n          y: 40\n        }, {\n          name: \"Satisfied\",\n          y: 17\n        }, {\n          name: \"Neutral\",\n          y: 7\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"React Doughnut Chart\"), React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/common/DoughnutChart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","DoughnutChart","render","options","animationEnabled","title","text","subtitles","verticalAlign","fontSize","dockInsidePlotArea","data","type","showInLegend","indexLabel","yValueFormatString","dataPoints","name","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,gBAAgB,EAAE,IADJ;AAEdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAFO;AAKdC,MAAAA,SAAS,EAAE,CAAC;AACVD,QAAAA,IAAI,EAAE,cADI;AAEVE,QAAAA,aAAa,EAAE,QAFL;AAGVC,QAAAA,QAAQ,EAAE,EAHA;AAIVC,QAAAA,kBAAkB,EAAE;AAJV,OAAD,CALG;AAWdC,MAAAA,IAAI,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,UAAU,EAAE,aAHP;AAILC,QAAAA,kBAAkB,EAAE,UAJf;AAKLC,QAAAA,UAAU,EAAE,CACV;AAAEC,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,CAAC,EAAE;AAA1B,SADU,EAEV;AAAED,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,CAAC,EAAE;AAA/B,SAFU,EAGV;AAAED,UAAAA,IAAI,EAAE,gBAAR;AAA0BC,UAAAA,CAAC,EAAE;AAA7B,SAHU,EAIV;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,CAAC,EAAE;AAAxB,SAJU,EAKV;AAAED,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SALU;AALP,OAAD;AAXQ,KAAhB;AA0BA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEf;AACxB;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AArCmC;;AAwCtC,eAAeF,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from '../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass DoughnutChart extends Component {\n  render() {\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Customer Satisfaction\"\n      },\n      subtitles: [{\n        text: \"71% Positive\",\n        verticalAlign: \"center\",\n        fontSize: 24,\n        dockInsidePlotArea: true\n      }],\n      data: [{\n        type: \"doughnut\",\n        showInLegend: true,\n        indexLabel: \"{name}: {y}\",\n        yValueFormatString: \"#,###'%'\",\n        dataPoints: [\n          { name: \"Unsatisfied\", y: 5 },\n          { name: \"Very Unsatisfied\", y: 31 },\n          { name: \"Very Satisfied\", y: 40 },\n          { name: \"Satisfied\", y: 17 },\n          { name: \"Neutral\", y: 7 }\n        ]\n      }]\n    }\n\n    return (\n      <div>\n        <h1>React Doughnut Chart</h1>\n        <CanvasJSChart options={options}\n        /* onRef={ref => this.chart = ref} */\n        />\n        {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;"]},"metadata":{},"sourceType":"module"}