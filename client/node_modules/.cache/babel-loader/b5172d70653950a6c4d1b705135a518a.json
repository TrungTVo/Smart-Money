{"ast":null,"code":"import axios from 'axios';\nimport * as actions from './types';\nexport const analysis = (account_id, month, year) => dispatch => {\n  dispatch({\n    type: actions.DATA_ANALYZING\n  });\n  axios.post('/analysis', {\n    account_id: account_id,\n    month: month,\n    year: year\n  }).then(res => {\n    dispatch({\n      type: actions.DATA_ANALYSIS,\n      payload: {\n        categories: res.data.categories,\n        amounts: res.data.amounts,\n        data: res.data.data,\n        earned: res.data.earned,\n        expense: res.data.expense,\n        account: res.data.account\n      }\n    });\n    dispatch({\n      type: actions.GET_SUCCESS,\n      payload: {\n        success_msg: 'Data analyzed',\n        type: actions.DATA_ANALYSIS\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: {\n        type: actions.DATA_ANALYSIS,\n        errors: err.response.data\n      }\n    });\n  });\n};\nexport const overall_analysis = (account_id, year) => dispatch => {\n  dispatch({\n    type: actions.OVERALL_ANALYZING\n  });\n  axios.post('/overall_analysis', {\n    account_id: account_id,\n    year: year\n  }).then(res => {\n    dispatch({\n      type: actions.DATA_ANALYSIS,\n      payload: {\n        categories: res.data.categories,\n        amounts: res.data.amounts,\n        data: res.data.data,\n        earned: res.data.earned,\n        expense: res.data.expense,\n        account: res.data.account\n      }\n    });\n    dispatch({\n      type: actions.GET_SUCCESS,\n      payload: {\n        success_msg: 'Data analyzed',\n        type: actions.DATA_ANALYSIS\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: {\n        type: actions.DATA_ANALYSIS,\n        errors: err.response.data\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/actions/dataAnalysis.js"],"names":["axios","actions","analysis","account_id","month","year","dispatch","type","DATA_ANALYZING","post","then","res","DATA_ANALYSIS","payload","categories","data","amounts","earned","expense","account","GET_SUCCESS","success_msg","catch","err","GET_ERRORS","errors","response","overall_analysis","OVERALL_ANALYZING"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as actions from './types';\n\nexport const analysis = (account_id, month, year) => dispatch => {\n  dispatch({\n    type: actions.DATA_ANALYZING\n  })\n  axios.post('/analysis', {\n    account_id: account_id,\n    month: month,\n    year: year\n  })\n    .then(res => {\n      dispatch({\n        type: actions.DATA_ANALYSIS,\n        payload: {\n          categories: res.data.categories,\n          amounts: res.data.amounts,\n          data: res.data.data,\n          earned: res.data.earned,\n          expense: res.data.expense,\n          account: res.data.account\n        }\n      })\n      dispatch({\n        type: actions.GET_SUCCESS,\n        payload: {\n          success_msg: 'Data analyzed',\n          type: actions.DATA_ANALYSIS\n        }\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: {\n          type: actions.DATA_ANALYSIS,\n          errors: err.response.data\n        }\n      })\n    })\n}\n\nexport const overall_analysis = (account_id, year) => dispatch => {\n  dispatch({\n    type: actions.OVERALL_ANALYZING\n  })\n  axios.post('/overall_analysis', {\n    account_id: account_id,\n    year: year\n  })\n    .then(res => {\n      dispatch({\n        type: actions.DATA_ANALYSIS,\n        payload: {\n          categories: res.data.categories,\n          amounts: res.data.amounts,\n          data: res.data.data,\n          earned: res.data.earned,\n          expense: res.data.expense,\n          account: res.data.account\n        }\n      })\n      dispatch({\n        type: actions.GET_SUCCESS,\n        payload: {\n          success_msg: 'Data analyzed',\n          type: actions.DATA_ANALYSIS\n        }\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: {\n          type: actions.DATA_ANALYSIS,\n          errors: err.response.data\n        }\n      })\n    })\n}\n"]},"metadata":{},"sourceType":"module"}