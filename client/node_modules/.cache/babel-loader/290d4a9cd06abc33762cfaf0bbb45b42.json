{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport { currencyTypes, dateConverter, dateLookup } from '../dictionary/dictionary';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableEditColumn, TableFixedColumns } from '@devexpress/dx-react-grid-bootstrap4'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.USD : currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nconst BalanceFormatter = props => {\n  const value = props.value,\n        row = props.row;\n  const currency = row.currency;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, value >= 0 ? '' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, currency === 'USD' ? currencyTypes.USD : currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst BalanceTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: BalanceFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}));\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\n\n\nconst DateFormatter = props => {\n  const row = props.row;\n  const date = row.date;\n  const split = date.split('/');\n  const y = split[0].trim();\n  const m = split[1].trim();\n  const d = split[2].trim();\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, y + '/' + m.padStart(2, '0') + '/' + d.padStart(2, '0'));\n};\n\nconst DateTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: DateFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}));\n/*\n==================================================================\nTable styles\n==================================================================\n*/\n\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => {\n  return row.id;\n};\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\n\nconst CommandButton = ({\n  onExecute,\n  icon,\n  text,\n  hint,\n  color\n}) => {\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link boder-0 mr-2\",\n    style: {\n      padding: 11\n    },\n    onClick: e => {\n      onExecute();\n      e.stopPropagation();\n    },\n    title: hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color || 'undefined',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, icon ? React.createElement(\"i\", {\n    className: \"fas fa-\".concat(icon),\n    style: {\n      marginRight: text ? 5 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }) : null, text));\n};\n\nconst AddButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"plus\",\n  hint: \"Create new row\",\n  onExecute: onExecute,\n  text: 'Add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n});\n\nconst EditButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"pen\",\n  hint: \"Edit row\",\n  color: \"text-warning\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n});\n\nconst DeleteButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"trash\",\n  hint: \"Delete row\",\n  color: \"text-danger\",\n  onExecute: () => {\n    // eslint-disable-next-line\n    if (window.confirm('Are you sure you want to delete this row?')) {\n      onExecute();\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n});\n\nconst CommitButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"check\",\n  hint: \"Save changes\",\n  color: \"text-success\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n});\n\nconst CancelButton = ({\n  onExecute\n}) => React.createElement(CommandButton, {\n  icon: \"times\",\n  hint: \"Cancel changes\",\n  color: \"text-danger\",\n  onExecute: onExecute,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n});\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton\n};\n\nconst Command = ({\n  id,\n  onExecute\n}) => {\n  const ButtonComponent = commandComponents[id];\n  return React.createElement(ButtonComponent, {\n    onExecute: onExecute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  });\n};\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\n\nconst LookupEditCell = ({\n  column,\n  selectColumns_values,\n  value,\n  onValueChange\n}) => React.createElement(\"td\", {\n  style: {\n    verticalAlign: 'middle',\n    padding: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  className: \"form-control\",\n  style: {\n    width: '100%',\n    textAlign: column.align\n  },\n  value: value,\n  onChange: e => onValueChange(e.target.value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 201\n  },\n  __self: this\n}, selectColumns_values.map(val => React.createElement(\"option\", {\n  key: val,\n  value: val,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 208\n  },\n  __self: this\n}, val))));\n\nconst Cell = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }));\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = props => {\n  const column = props.column;\n  const selectColumns_values = selectColumns[column.name];\n\n  if (selectColumns_values) {\n    return React.createElement(LookupEditCell, Object.assign({}, props, {\n      selectColumns_values: selectColumns_values,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(TableEditRow.Cell, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }));\n};\n\nexport default class DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeAddedRows = addedRows => {\n      const d = new Date();\n      const initialized = addedRows.map(row => Object.keys(row).length ? row : {\n        date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2, '0') + '/' + String(d.getDate()).padStart(2, '0'),\n        amount: 0.0,\n        balance: 0.0,\n        currency: Object.keys(currencyTypes)[0]\n      });\n      this.setState({\n        addedRows: initialized\n      });\n    };\n\n    this.changeEditingRowIds = editingRowIds => {\n      this.setState({\n        editingRowIds\n      });\n    };\n\n    this.changeRowChanges = rowChanges => {\n      this.setState({\n        rowChanges\n      });\n    };\n\n    this.commitChanges = ({\n      added,\n      changed,\n      deleted\n    }) => {\n      let rows = this.state.rows;\n\n      if (added) {\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n        rows = [...rows, ...added.map((row, index) => _objectSpread({\n          id: startingAddedId + index\n        }, row))];\n      }\n\n      if (changed) {\n        rows = rows.map(row => changed[row.id] ? _objectSpread({}, row, changed[row.id]) : row);\n      }\n\n      if (deleted) {\n        rows = this.deleteRows(deleted);\n      }\n\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteRows = deletedIds => {\n      const rows = this.state.rows.slice();\n      deletedIds.forEach(rowId => {\n        const index = rows.findIndex(row => row.id === rowId);\n\n        if (index > -1) {\n          rows.splice(index, 1);\n        }\n      });\n      return rows;\n    };\n\n    this.state = {\n      columns: [{\n        name: 'date',\n        title: \"Date\"\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'balance',\n        title: 'Balance'\n      }, {\n        name: 'currency',\n        title: 'Currency'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 100\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'balance',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'currency',\n        align: 'right',\n        width: 70\n      }, {\n        columnName: 'category',\n        align: 'right',\n        width: 130\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'center',\n        width: 180\n      }],\n      rows: [{\n        id: 1,\n        date: '2019/09/14',\n        amount: 450,\n        category: 'Bills',\n        balance: 500,\n        currency: 'VND',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 2,\n        date: '2019/08/15',\n        amount: -550,\n        category: 'Groceries',\n        balance: 1500,\n        currency: 'EUR',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 3,\n        date: '2019/07/16',\n        amount: 250,\n        category: 'Cars',\n        balance: 5000000,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        id: 4,\n        date: '2019/06/14',\n        amount: -550,\n        category: 'Tuition',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        id: 5,\n        date: '2019/05/14',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 6,\n        date: '2019/05/10',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 7,\n        date: '2019/04/14',\n        amount: -150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 8,\n        date: '2019/03/14',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 9,\n        date: '2019/03/01',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        id: 10,\n        date: '2019/02/14',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }],\n      sorting: [{\n        columnName: 'date',\n        direction: 'desc'\n      }],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n\n    this.changeSorting = sorting => this.setState({\n      sorting\n    });\n  } // update rows after adding\n\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          sorting = _this$state.sorting,\n          paymentColumns = _this$state.paymentColumns,\n          balanceColumns = _this$state.balanceColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage,\n          leftFixedColumns = _this$state.leftFixedColumns,\n          editingRowIds = _this$state.editingRowIds,\n          rowChanges = _this$state.rowChanges,\n          addedRows = _this$state.addedRows;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(BalanceTypeProvider, {\n      for: balanceColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(DateTypeProvider, {\n      for: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      sorting: sorting,\n      defaultSorting: sorting,\n      onSortingChange: this.changeSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      editingRowIds: editingRowIds,\n      onEditingRowIdsChange: this.changeEditingRowIds,\n      rowChanges: rowChanges,\n      onRowChangesChange: this.changeRowChanges,\n      addedRows: addedRows,\n      onAddedRowsChange: this.changeAddedRows,\n      onCommitChanges: this.commitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }), React.createElement(TableEditRow, {\n      cellComponent: EditCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), React.createElement(TableEditColumn, {\n      showAddCommand: !addedRows.length,\n      showEditCommand: true,\n      showDeleteCommand: true,\n      commandComponent: Command,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(TableFixedColumns, {\n      leftColumns: leftFixedColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","dateConverter","dateLookup","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","SortingState","IntegratedSorting","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableEditColumn","TableFixedColumns","numberWithCommas","x","toString","replace","PaymentFormatter","props","value","row","currency","color","USD","VND","EUR","Math","abs","PaymentTypeProvider","BalanceFormatter","BalanceTypeProvider","DateFormatter","date","split","y","trim","m","d","padStart","DateTypeProvider","TableComponent","restProps","getRowId","id","CommandButton","onExecute","icon","text","hint","padding","e","stopPropagation","marginRight","AddButton","EditButton","DeleteButton","window","confirm","CommitButton","CancelButton","commandComponents","add","edit","delete","commit","cancel","Command","ButtonComponent","LookupEditCell","column","selectColumns_values","onValueChange","verticalAlign","width","textAlign","align","target","map","val","Cell","selectColumns","Object","keys","EditCell","name","DataTable","PureComponent","constructor","changeAddedRows","addedRows","Date","initialized","length","getFullYear","String","getMonth","getDate","amount","balance","setState","changeEditingRowIds","editingRowIds","changeRowChanges","rowChanges","commitChanges","added","changed","deleted","rows","state","startingAddedId","index","deleteRows","deletedIds","slice","forEach","rowId","findIndex","splice","columns","title","tableColumnExtensions","columnName","wordWrapEnabled","category","notes","payee","sorting","direction","paymentColumns","balanceColumns","currentPage","pageSize","pageSizes","searchValue","leftFixedColumns","COLUMN_TYPE","changeCurrentPage","changePageSize","changeSearchValue","changeSorting","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {currencyTypes, dateConverter, dateLookup} from '../dictionary/dictionary';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState,\n  SortingState,\n  IntegratedSorting\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableEditColumn,\n  TableFixedColumns\n} from '@devexpress/dx-react-grid-bootstrap4';\n\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PaymentFormatter = (props) => {\n  const {value, row} = props;\n  const {currency} = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{currency === 'USD' ? currencyTypes.USD : (currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\nconst BalanceFormatter = (props) => {\n  const { value, row } = props;\n  const { currency } = row;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '' : '-'}<small>{currency === 'USD' ? currencyTypes.USD : (currency === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst BalanceTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BalanceFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\nconst DateFormatter = (props) => {\n  const { row } = props;\n  const { date } = row;\n  const split = date.split('/');\n  const y = split[0].trim();\n  const m = split[1].trim();\n  const d = split[2].trim();\n  return (\n    <span >\n      {y + '/' + m.padStart(2,'0') + '/' + d.padStart(2,'0')}\n    </span>\n  );\n}\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={DateFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nTable styles\n==================================================================\n*/\nconst TableComponent = ({ ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className=\"table-striped\"\n  />\n);\n\nconst getRowId = row => {return row.id};\n\n\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\nconst CommandButton = ({\n  onExecute, icon, text, hint, color,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-link boder-0 mr-2\"\n      style={{ padding: 11 }}\n      onClick={(e) => {\n        onExecute();\n        e.stopPropagation();\n      }}\n      title={hint}\n    >\n      <span className={color || 'undefined'}>\n        {icon ? <i className={`fas fa-${icon}`} style={{ marginRight: text ? 5 : 0 }} /> : null}\n        {text}\n      </span>\n    </button>\n  );\n}\n\nconst AddButton = ({ onExecute }) => (\n  <CommandButton icon=\"plus\" hint=\"Create new row\" onExecute={onExecute} text={'Add'} />\n);\n\nconst EditButton = ({ onExecute }) => (\n  <CommandButton icon=\"pen\" hint=\"Edit row\" color=\"text-warning\" onExecute={onExecute} />\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <CommandButton\n    icon=\"trash\"\n    hint=\"Delete row\"\n    color=\"text-danger\"\n    onExecute={() => {\n      // eslint-disable-next-line\n      if (window.confirm('Are you sure you want to delete this row?')) {\n        onExecute();\n      }\n    }}\n  />\n);\n\nconst CommitButton = ({ onExecute }) => (\n  <CommandButton icon=\"check\" hint=\"Save changes\" color=\"text-success\" onExecute={onExecute} />\n);\n\nconst CancelButton = ({ onExecute }) => (\n  <CommandButton icon=\"times\" hint=\"Cancel changes\" color=\"text-danger\" onExecute={onExecute} />\n);\n\nconst commandComponents = {\n  add: AddButton,\n  edit: EditButton,\n  delete: DeleteButton,\n  commit: CommitButton,\n  cancel: CancelButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const ButtonComponent = commandComponents[id];\n  return (\n    <ButtonComponent\n      onExecute={onExecute}\n    />\n  );\n};\n\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\nconst LookupEditCell = ({\n  column, selectColumns_values, value, onValueChange,\n}) => (\n    <td\n      style={{\n        verticalAlign: 'middle',\n        padding: 1,\n      }}\n    >\n      <select\n        className=\"form-control\"\n        style={{ width: '100%', textAlign: column.align }}\n        value={value}\n        onChange={e => onValueChange(e.target.value)}\n      >\n        {selectColumns_values.map(val => (\n          <option key={val} value={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n    </td>\n  );\n\nconst Cell = (props) => {\n  return <Table.Cell {...props} style={{verticalAlign: 'middle'}} />;\n};\n\nconst selectColumns = {\n  currency: Object.keys(currencyTypes)\n};\n\nconst EditCell = (props) => {\n  const { column } = props;\n  const selectColumns_values = selectColumns[column.name];\n  if (selectColumns_values) {\n    return <LookupEditCell {...props} selectColumns_values={selectColumns_values} />;\n  }\n  return <TableEditRow.Cell {...props} />;\n};\n\n\nexport default class DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'date', title: `Date` },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'balance', title: 'Balance' },\n        { name: 'currency', title: 'Currency' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 100 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'balance', align: 'right', width: 110 },\n        { columnName: 'currency', align: 'right', width: 70 },\n        { columnName: 'category', align: 'right', width: 130 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'center', width: 180 }\n      ],\n      rows: [\n        {\n          id: 1,\n          date: '2019/09/14',\n          amount: 450,\n          category: 'Bills',\n          balance: 500,\n          currency: 'VND',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 2,\n          date: '2019/08/15',\n          amount: -550,\n          category: 'Groceries',\n          balance: 1500,\n          currency: 'EUR',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 3,\n          date: '2019/07/16',\n          amount: 250,\n          category: 'Cars',\n          balance: 5000000,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 4,\n          date: '2019/06/14',\n          amount: -550,\n          category: 'Tuition',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 5,\n          date: '2019/05/14',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 6,\n          date: '2019/05/10',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 7,\n          date: '2019/04/14',\n          amount: -150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 8,\n          date: '2019/03/14',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 9,\n          date: '2019/03/01',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          id: 10,\n          date: '2019/02/14',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        }\n      ],\n      sorting: [{columnName: 'date', direction: 'desc'}],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n    };\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n  // update rows after adding\n  changeAddedRows = (addedRows) => {\n    const d = new Date();\n    const initialized = addedRows.map(row => (Object.keys(row).length ? row : {\n      date: d.getFullYear() + '/' + String(d.getMonth() + 1).padStart(2,'0') + '/' + String(d.getDate()).padStart(2,'0'),\n      amount: 0.0,\n      balance: 0.0,\n      currency: Object.keys(currencyTypes)[0]\n    }));\n    this.setState({ addedRows: initialized });\n  }\n\n  // update rows after editing\n  changeEditingRowIds = (editingRowIds) => {\n    this.setState({ editingRowIds });\n  }\n\n  // update rows after changing\n  changeRowChanges = (rowChanges) => {\n    this.setState({ rowChanges });\n  }\n\n  // updates rows after modifying\n  commitChanges = ({ added, changed, deleted }) => {\n    let { rows } = this.state;\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n      rows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      rows = this.deleteRows(deleted);\n    }\n    this.setState({ rows });\n  }\n\n  // update rows after deleting\n  deleteRows = (deletedIds) => {\n    const rows = this.state.rows.slice();\n    deletedIds.forEach((rowId) => {\n      const index = rows.findIndex(row => row.id === rowId);\n      if (index > -1) {\n        rows.splice(index, 1);\n      }\n    });\n    return rows;\n  };\n\n\n  render() {\n    const { \n      rows, columns, tableColumnExtensions, searchValue, sorting,\n      paymentColumns, balanceColumns, pageSize, pageSizes, currentPage,\n      leftFixedColumns, editingRowIds, rowChanges, addedRows\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          rows={rows}\n          columns={columns}\n          getRowId={getRowId}\n        >\n          {/* Paging for table */}\n          <PagingState\n            defaultCurrentPage={currentPage}\n            onCurrentPageChange={this.changeCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={this.changePageSize}\n          />\n          <IntegratedPaging />\n          <PagingPanel pageSizes={pageSizes} />\n\n          {/* Currency styles formatter */}\n          <PaymentTypeProvider for={paymentColumns} />\n          <BalanceTypeProvider for={balanceColumns} />\n          <DateTypeProvider for={['date']} />\n\n          {/* Searching tool */}\n          <SearchState\n            value={searchValue}\n            onValueChange={this.changeSearchValue}\n          />\n          <IntegratedFiltering />\n          <Toolbar />\n          <SearchPanel />\n\n          {/** Sorting tools */}\n          <SortingState\n            sorting={sorting}\n            defaultSorting={sorting}\n            onSortingChange={this.changeSorting}\n          />\n          <IntegratedSorting />\n\n          {/* Editing tool */}\n          <EditingState\n            editingRowIds={editingRowIds}\n            onEditingRowIdsChange={this.changeEditingRowIds}\n            rowChanges={rowChanges}\n            onRowChangesChange={this.changeRowChanges}\n            addedRows={addedRows}\n            onAddedRowsChange={this.changeAddedRows}\n            onCommitChanges={this.commitChanges}\n          />\n          \n          {/* Table itself */}\n          <Table columnExtensions={tableColumnExtensions} \n                tableComponent={TableComponent}\n                cellComponent={Cell}\n          />\n        \n          <TableHeaderRow showSortingControls />\n          <TableEditRow cellComponent={EditCell} />\n          <TableEditColumn\n            showAddCommand={!addedRows.length}\n            showEditCommand\n            showDeleteCommand\n            commandComponent={Command}\n          />\n          <TableFixedColumns\n            leftColumns={leftFixedColumns}\n          />\n\n          \n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}