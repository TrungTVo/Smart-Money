{"ast":null,"code":"import _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport { PagingState, IntegratedPaging, DataTypeProvider } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel } from '@devexpress/dx-react-grid-bootstrap4'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = ({\n  value\n}) => {\n  console.log(value);\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', \"$\", Math.abs(value));\n};\n\nconst PaymentTypeProvider = props => {\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst BalanceFormatter = ({\n  value\n}) => React.createElement(\"b\", {\n  style: {\n    color: 'darkblue'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, value >= 0 ? '' : '-', \"$\", Math.abs(value));\n\nconst BalanceTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: BalanceFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}));\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    className: \"table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        name: 'date',\n        title: 'Date'\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'balance',\n        title: 'Balance'\n      }, {\n        name: 'currency',\n        title: 'Currency'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 90\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'balance',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'currency',\n        align: 'right',\n        width: 70\n      }, {\n        columnName: 'category',\n        align: 'center',\n        width: 130\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'center',\n        width: 180\n      }],\n      rows: [{\n        date: 'April 14, 2019',\n        amount: 450,\n        category: 'Bills',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Jan 15, 2019',\n        amount: -550,\n        category: 'Groceries',\n        balance: 1500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Aug 16, 2019',\n        amount: 250,\n        category: 'Cars',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        date: 'Feb 14, 2019',\n        amount: -550,\n        category: 'Tuition',\n        balance: 500,\n        currency: 'USD',\n        notes: 'Short notes',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: -150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }, {\n        date: 'May 14, 2019',\n        amount: 150,\n        category: 'Drinks',\n        balance: 500,\n        currency: 'USD',\n        notes: '',\n        payee: 'Trung Vo'\n      }],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30]\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          paymentColumns = _this$state.paymentColumns,\n          balanceColumns = _this$state.balanceColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage;\n    return React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      currencyType: ['currency'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(BalanceTypeProvider, {\n      for: balanceColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","Grid","Table","TableHeaderRow","PagingPanel","PaymentFormatter","value","console","log","color","Math","abs","PaymentTypeProvider","props","BalanceFormatter","BalanceTypeProvider","TableComponent","restProps","DataTable","PureComponent","constructor","state","columns","name","title","tableColumnExtensions","columnName","align","width","wordWrapEnabled","rows","date","amount","category","balance","currency","notes","payee","paymentColumns","balanceColumns","currentPage","pageSize","pageSizes","changeCurrentPage","setState","changePageSize","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport currencyTypes from '../currencyTypes/currencyTypes';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel\n} from '@devexpress/dx-react-grid-bootstrap4';\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\nconst PaymentFormatter = ({ value }) => {\n  console.log(value);\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+':'-'}${Math.abs(value)}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\nconst BalanceFormatter = ({ value }) => (\n  <b style={{ color: 'darkblue' }}>\n    {value >= 0 ? '' : '-'}${Math.abs(value)}\n  </b>\n);\n\nconst BalanceTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BalanceFormatter}\n    {...props}\n  />\n);\n\nconst TableComponent = ({ ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className=\"table-striped\"\n  />\n);\n\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'date', title: 'Date' },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'balance', title: 'Balance' },\n        { name: 'currency', title: 'Currency' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 90 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'balance', align: 'right', width: 110 },\n        { columnName: 'currency', align: 'right', width: 70 },\n        { columnName: 'category', align: 'center', width: 130 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'center', width: 180 }\n      ],\n      rows: [\n        {\n          date: 'April 14, 2019',\n          amount: 450,\n          category: 'Bills',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Jan 15, 2019',\n          amount: -550,\n          category: 'Groceries',\n          balance: 1500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Aug 16, 2019',\n          amount: 250,\n          category: 'Cars',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'Feb 14, 2019',\n          amount: -550,\n          category: 'Tuition',\n          balance: 500,\n          currency: 'USD',\n          notes: 'Short notes',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: -150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        },\n        {\n          date: 'May 14, 2019',\n          amount: 150,\n          category: 'Drinks',\n          balance: 500,\n          currency: 'USD',\n          notes: '',\n          payee: 'Trung Vo'\n        }\n      ],\n      paymentColumns: ['amount'],\n      balanceColumns: ['balance'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30]\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n  }\n\n  render() {\n    const {\n      rows, columns, tableColumnExtensions,\n      paymentColumns, balanceColumns, pageSize, pageSizes, currentPage\n    } = this.state;\n\n    return (\n        <Grid rows={rows} columns={columns} >\n          <PagingState\n            defaultCurrentPage={currentPage}\n            onCurrentPageChange={this.changeCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={this.changePageSize}\n          />\n          <PaymentTypeProvider\n            for={paymentColumns}\n            currencyType={['currency']}\n          />\n          <BalanceTypeProvider\n            for={balanceColumns}\n          />\n          <IntegratedPaging />\n          <Table columnExtensions={tableColumnExtensions} tableComponent={TableComponent} />\n          <TableHeaderRow />\n          <PagingPanel pageSizes={pageSizes} />\n        </Grid>\n    );\n\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}