{"ast":null,"code":"import _extends from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { PagingState, IntegratedPaging, DataTypeProvider, SearchState, IntegratedFiltering, EditingState, SortingState, IntegratedSorting, SelectionState } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, PagingPanel, SearchPanel, Toolbar, TableEditRow, TableSelection } from '@devexpress/dx-react-grid-bootstrap4';\nimport { connect } from 'react-redux';\nimport { loadTransactions } from '../actions/transactionActions';\nimport ModalDelete from '../common/ModalDelete';\nimport ModalAdd from '../common/ModalAdd';\nimport ModalEdit from '../common/ModalEdit';\nimport { isNumber } from 'util'; //import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\n\nfunction numberWithCommas(x) {\n  if (isNumber(x)) return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");else return '';\n}\n\nvar ACCOUNT_CURRENCY = '';\nvar ACCOUNT_BALANCE = '';\n\nconst PaymentFormatter = props => {\n  const value = props.value;\n  return React.createElement(\"b\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, value >= 0 ? '+' : '-', React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR), numberWithCommas(Math.abs(value)));\n};\n\nconst PaymentTypeProvider = props => {\n  const account_currency = props.account_currency;\n  ACCOUNT_CURRENCY = account_currency;\n  return React.createElement(DataTypeProvider, Object.assign({\n    formatterComponent: PaymentFormatter\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\n\n\nconst DateFormatter = props => {\n  const row = props.row;\n  const date = row.date;\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, date);\n};\n\nconst DateTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: DateFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}));\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\n\n\nconst NotesFormatter = props => {\n  const row = props.row;\n  const notes = row.notes;\n  return React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, notes);\n};\n\nconst NotesTypeProvider = props => React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: NotesFormatter\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}));\n/*\n==================================================================\nTable styles\n==================================================================\n*/\n\n\nconst TableComponent = (_ref) => {\n  let restProps = _extends({}, _ref);\n\n  return React.createElement(Table.Table, Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => row.id;\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\n\nconst SortingIcon = ({\n  direction\n}) => React.createElement(\"span\", {\n  className: \"fas fa-arrow-\".concat(direction === 'asc' ? 'up' : 'down'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n});\n\nconst SortLabel = ({\n  onSort,\n  children,\n  direction\n}) => {\n  return React.createElement(\"a\", {\n    className: \"font-weight-bold\",\n    onClick: onSort,\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, children, direction && React.createElement(SortingIcon, {\n    direction: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), children.props.children === 'Date' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"(yyyy/mm/dd)\")) : null);\n};\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\n\nconst Cell = props => {\n  return React.createElement(Table.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    className: \"p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }));\n};\n\nconst HeaderStyles = props => {\n  return React.createElement(TableHeaderRow.Cell, Object.assign({}, props, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }));\n};\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeSelection = selection => {\n      const lastSelected = selection.find(selected => this.state.selection.indexOf(selected) === -1);\n      const selected_row = this.state.rows.find(row => row.id === lastSelected);\n      this.setState({\n        selected_row: selected_row\n      });\n\n      if (lastSelected !== undefined) {\n        this.setState({\n          selection: [lastSelected]\n        });\n      } else {\n        this.setState({\n          selection: []\n        });\n      }\n    };\n\n    this.toolComponent = balance => {\n      const children = this.props.children;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"font-weight-bold bg-primary text-white p-3\",\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Current balance: \", ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR, numberWithCommas(balance), children));\n    };\n\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      loading: true,\n      columns: [{\n        name: 'date',\n        title: \"Date\"\n      }, {\n        name: 'amount',\n        title: 'Amount'\n      }, {\n        name: 'category',\n        title: 'Category'\n      }, {\n        name: 'notes',\n        title: 'Notes'\n      }, {\n        name: 'payee',\n        title: 'Payee'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'date',\n        align: 'center',\n        width: 110\n      }, {\n        columnName: 'amount',\n        align: 'right',\n        width: 110\n      }, {\n        columnName: 'category',\n        align: 'right',\n        width: 100\n      }, {\n        columnName: 'notes',\n        align: 'center',\n        wordWrapEnabled: true,\n        width: 350\n      }, {\n        columnName: 'payee',\n        align: 'left',\n        width: 110\n      }],\n      rows: [] // {\n      //   id: 1,\n      //   date: '2019/09/14',\n      //   amount: 450,\n      //   category: 'Bills for electric',\n      //   currency: 'VND',\n      //   notes: '',\n      //   payee: 'Trung Vo',\n      // }\n      ,\n      sorting: [{\n        columnName: 'date',\n        direction: 'desc'\n      }],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n      selection: [],\n      selected_row: {}\n    };\n\n    this.changeCurrentPage = currentPage => this.setState({\n      currentPage\n    });\n\n    this.changePageSize = pageSize => this.setState({\n      pageSize\n    });\n\n    this.changeSearchValue = value => this.setState({\n      searchValue: value\n    });\n\n    this.changeSorting = sorting => this.setState({\n      sorting\n    });\n  }\n\n  componentDidMount() {\n    const account = this.props.account;\n    this.props.loadTransactions(account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const transactions = nextProps.transactions;\n    transactions.transactions.forEach((transaction, i) => {\n      transaction.id = i + 1;\n    });\n    this.setState({\n      rows: transactions.transactions,\n      loading: false\n    });\n  } // change selection row\n\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          searchValue = _this$state.searchValue,\n          sorting = _this$state.sorting,\n          paymentColumns = _this$state.paymentColumns,\n          pageSize = _this$state.pageSize,\n          pageSizes = _this$state.pageSizes,\n          currentPage = _this$state.currentPage,\n          selection = _this$state.selection,\n          selected_row = _this$state.selected_row;\n    const _this$props = this.props,\n          account = _this$props.account,\n          transactions = _this$props.transactions,\n          success = _this$props.success;\n    ACCOUNT_BALANCE = transactions.loading ? account.balance : transactions.account.balance;\n    ACCOUNT_CURRENCY = account.currency;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, success.add !== '' ? React.createElement(AlertMessage, {\n      variant: 'success',\n      message: success.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }) : null, success.update !== '' ? React.createElement(AlertMessage, {\n      variant: 'success',\n      message: success.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }) : null, success.delete !== '' ? React.createElement(AlertMessage, {\n      variant: 'success',\n      message: success.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }) : null, loading ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: this.state.rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(SelectionState, {\n      selection: selection,\n      onSelectionChange: this.changeSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(PagingState, {\n      defaultCurrentPage: currentPage,\n      onCurrentPageChange: this.changeCurrentPage,\n      pageSize: pageSize,\n      onPageSizeChange: this.changePageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(IntegratedPaging, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(PagingPanel, {\n      pageSizes: pageSizes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(PaymentTypeProvider, {\n      for: paymentColumns,\n      account_currency: account.currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(DateTypeProvider, {\n      for: ['date'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(NotesTypeProvider, {\n      for: ['notes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      value: searchValue,\n      onValueChange: this.changeSearchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      rootComponent: () => this.toolComponent(transactions.loading ? '' : transactions.account.balance),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      sorting: sorting,\n      defaultSorting: sorting,\n      onSortingChange: this.changeSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(Table, {\n      columnExtensions: tableColumnExtensions,\n      tableComponent: TableComponent,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      sortLabelComponent: SortLabel,\n      cellComponent: HeaderStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(TableSelection, {\n      selectByRowClick: true,\n      highlightRow: true,\n      showSelectionColumn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card card-footer d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(ModalAdd, {\n      disabled: false,\n      variant: \"light\",\n      styles: \"p-2 mr-2\",\n      size: \"sm\",\n      type: \"add-transaction\",\n      header: \"New transaction\",\n      buttonText: \"Add\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Add\",\n      mainFuncBtn: \"Add\",\n      icon: \"fas fa-plus\",\n      currency: account.currency,\n      bankAccount: transactions.loading ? account : transactions.account,\n      auth: this.props.auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(ModalEdit, {\n      disabled: selection.length > 0 ? false : true,\n      variant: \"light\",\n      styles: \"p-2 mr-2\",\n      size: \"sm\",\n      type: \"edit-transaction\",\n      header: \"Edit transaction\",\n      buttonText: \"Update\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Update\",\n      mainFuncBtn: \"Update\",\n      icon: \"fas fa-pen\",\n      currency: account.currency,\n      bankAccount: transactions.loading ? account : transactions.account,\n      transaction: selected_row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(ModalDelete, {\n      disabled: selection.length > 0 ? false : true,\n      variant: \"light\",\n      styles: \"p-2\",\n      size: \"sm\",\n      type: \"remove-transaction\",\n      header: \"Remove transaction\",\n      body: \"Are you sure you want to remove this transaction?\",\n      buttonText: \"Remove\",\n      cancelBtn: \"Close\",\n      yesBtn: \"Yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  success: state.success,\n  transactions: state.transactions\n});\n\nexport default connect(mapStateToProps, {\n  loadTransactions\n})(DataTable);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","currencyTypes","PagingState","IntegratedPaging","DataTypeProvider","SearchState","IntegratedFiltering","EditingState","SortingState","IntegratedSorting","SelectionState","Grid","Table","TableHeaderRow","PagingPanel","SearchPanel","Toolbar","TableEditRow","TableSelection","connect","loadTransactions","ModalDelete","ModalAdd","ModalEdit","isNumber","numberWithCommas","x","toString","replace","ACCOUNT_CURRENCY","ACCOUNT_BALANCE","PaymentFormatter","props","value","color","USD","VND","EUR","Math","abs","PaymentTypeProvider","account_currency","DateFormatter","row","date","DateTypeProvider","NotesFormatter","notes","NotesTypeProvider","TableComponent","restProps","getRowId","id","SortingIcon","direction","SortLabel","onSort","children","cursor","Cell","verticalAlign","HeaderStyles","DataTable","PureComponent","constructor","changeSelection","selection","lastSelected","find","selected","state","indexOf","selected_row","rows","setState","undefined","toolComponent","balance","display","alignItems","loading","columns","name","title","tableColumnExtensions","columnName","align","width","wordWrapEnabled","sorting","paymentColumns","currentPage","pageSize","pageSizes","searchValue","editingRowIds","addedRows","rowChanges","changeCurrentPage","changePageSize","changeSearchValue","changeSorting","componentDidMount","account","componentWillReceiveProps","nextProps","transactions","forEach","transaction","i","render","success","currency","add","update","delete","auth","length","mapStateToProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {currencyTypes} from '../dictionary/dictionary';\nimport {\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n  SearchState,\n  IntegratedFiltering,\n  EditingState,\n  SortingState,\n  IntegratedSorting,\n  SelectionState\n} from '@devexpress/dx-react-grid';\n\nimport {\n  Grid, Table,\n  TableHeaderRow, PagingPanel,\n  SearchPanel, Toolbar,\n  TableEditRow,\n  TableSelection\n} from '@devexpress/dx-react-grid-bootstrap4';\n\nimport {connect} from 'react-redux';\nimport { loadTransactions } from '../actions/transactionActions';\nimport ModalDelete from '../common/ModalDelete';\nimport ModalAdd from '../common/ModalAdd';\nimport ModalEdit from '../common/ModalEdit';\nimport { isNumber } from 'util';\n\n//import \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\n\n/*\n==================================================================\nCurrency formatter\n==================================================================\n*/\n// convert number to comma form with thousands separator\nfunction numberWithCommas(x) {\n  if (isNumber(x))\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  else\n    return '';\n}\n\nvar ACCOUNT_CURRENCY = '';\nvar ACCOUNT_BALANCE = '';\n\nconst PaymentFormatter = (props) => {\n  const { value} = props;\n  return (\n    <b style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value >= 0 ? '+' : '-'}<small>{ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : (ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}</small>{numberWithCommas(Math.abs(value))}\n    </b>\n  );\n}\n\nconst PaymentTypeProvider = props => {\n  const { account_currency} = props;\n  ACCOUNT_CURRENCY = account_currency;\n  return (\n    <DataTypeProvider\n      formatterComponent={PaymentFormatter}\n      {...props}\n    />\n  );\n}\n\n/*\n==================================================================\nDates formatter\n==================================================================\n*/\nconst DateFormatter = (props) => {\n  const { row } = props;\n  const { date } = row;\n  \n  return (\n    <span >\n      {date}\n    </span>\n  )\n}\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={DateFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nNotes formatter\n==================================================================\n*/\nconst NotesFormatter = (props) => {\n  const { row } = props;\n  const { notes } = row;\n  \n  return (\n    <small>\n      {notes}\n    </small>\n  );\n}\n\nconst NotesTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={NotesFormatter}\n    {...props}\n  />\n);\n\n/*\n==================================================================\nTable styles\n==================================================================\n*/\nconst TableComponent = ({ ...restProps }) => {\n  return (\n    <Table.Table\n      {...restProps}\n      // className=\"table-striped\"\n    />\n  )\n}\n\nconst getRowId = row => row.id;\n\n/**\n * ==================================================================\n * Command button styles\n * ==================================================================\n */\n\nconst SortingIcon = ({ direction }) => (\n  <span\n    className={`fas fa-arrow-${direction === 'asc' ? 'up' : 'down'}`}\n  />\n);\n\nconst SortLabel = ({ onSort, children, direction }) => {\n  return (\n    <a\n      className=\"font-weight-bold\"\n      onClick={onSort}\n      style={{cursor: 'pointer' }}\n    >\n      {children}\n      {(direction && <SortingIcon direction={direction} />)}\n      {children.props.children === 'Date' ? <div><small>(yyyy/mm/dd)</small></div> : null}\n    </a>\n  );\n}\n\n/**\n * ===================================================\n * TABLE CELLS\n * ===================================================\n */\n\nconst Cell = (props) => {\n  return <Table.Cell {...props} style={{ verticalAlign: 'middle' }} className='p-2' />;\n};\n\nconst HeaderStyles = (props) => {\n  return <TableHeaderRow.Cell {...props} style={{ verticalAlign: 'middle' }} />\n}\n\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //fixedColumn: window.innerWidth > 945,\n      loading: true,\n      columns: [\n        { name: 'date', title: `Date` },\n        { name: 'amount', title: 'Amount' },\n        { name: 'category', title: 'Category' },\n        { name: 'notes', title: 'Notes' },\n        { name: 'payee', title: 'Payee' }\n      ],\n      tableColumnExtensions: [\n        { columnName: 'date', align: 'center', width: 110 },\n        { columnName: 'amount', align: 'right', width: 110 },\n        { columnName: 'category', align: 'right', width: 100 },\n        { columnName: 'notes', align: 'center', wordWrapEnabled: true, width: 350 },\n        { columnName: 'payee', align: 'left', width: 110 },\n      ],\n      rows: []\n        // {\n        //   id: 1,\n        //   date: '2019/09/14',\n        //   amount: 450,\n        //   category: 'Bills for electric',\n        //   currency: 'VND',\n        //   notes: '',\n        //   payee: 'Trung Vo',\n        // }\n      ,\n      sorting: [{columnName: 'date', direction: 'desc'}],\n      paymentColumns: ['amount'],\n      currentPage: 0,\n      pageSize: 10,\n      pageSizes: [10, 20, 30],\n      searchValue: '',\n      //leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\n      editingRowIds: [],\n      addedRows: [],\n      rowChanges: {},\n      selection: [],\n      selected_row: {}\n    };\n    this.changeCurrentPage = currentPage => this.setState({ currentPage });\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSearchValue = value => this.setState({ searchValue: value });\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n\n  componentDidMount() {\n    const {account } = this.props;\n    this.props.loadTransactions(account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {transactions} = nextProps;\n    transactions.transactions.forEach((transaction, i) => {\n      transaction.id = i + 1;\n    })\n    this.setState({\n      rows: transactions.transactions,\n      loading: false\n    })\n  }\n\n  // change selection row\n  changeSelection = (selection) => {\n    const lastSelected = selection\n      .find(selected => this.state.selection.indexOf(selected) === -1);\n    \n    const selected_row = this.state.rows.find(row => row.id === lastSelected);\n    this.setState({\n      selected_row: selected_row\n    })\n\n    if (lastSelected !== undefined) {\n      this.setState({ selection: [lastSelected] });\n    } else {\n      this.setState({ selection: [] });\n    }\n  }\n\n  toolComponent = (balance) => {\n    const {children} = this.props;\n    return (\n      <div>\n        <div className='font-weight-bold bg-primary text-white p-3' style={{ display: 'flex', alignItems: 'center' }}>\n          Current balance: {ACCOUNT_CURRENCY === 'USD' ? currencyTypes.USD : (ACCOUNT_CURRENCY === 'VND' ? currencyTypes.VND : currencyTypes.EUR)}{numberWithCommas(balance)}{children}\n        </div>\n      </div>\n    )\n  }\n\n\n  render() {\n    const { \n      loading, columns, tableColumnExtensions, searchValue, sorting,\n      paymentColumns, pageSize, pageSizes, currentPage,\n      selection, selected_row\n    } = this.state;\n    \n    const {account, transactions, success} = this.props;\n    ACCOUNT_BALANCE = transactions.loading ? account.balance : transactions.account.balance;\n    ACCOUNT_CURRENCY = account.currency;\n\n    return (\n      <div className=\"card\">\n        {success.add !== '' ? <AlertMessage variant={'success'} message={success.add} /> : null}\n        {success.update !== '' ? <AlertMessage variant={'success'} message={success.update} /> : null}\n        {success.delete !== '' ? <AlertMessage variant={'success'} message={success.delete} /> : null}\n\n        {\n          loading ? \n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div> :\n            <div>\n            <Grid\n              rows={this.state.rows}\n              columns={columns}\n              getRowId={getRowId}\n            >\n              <SelectionState\n                selection={selection}\n                onSelectionChange={this.changeSelection}\n              />\n\n              {/* Paging for table */}\n              <PagingState\n                defaultCurrentPage={currentPage}\n                onCurrentPageChange={this.changeCurrentPage}\n                pageSize={pageSize}\n                onPageSizeChange={this.changePageSize}\n              />\n              <IntegratedPaging />\n              <PagingPanel pageSizes={pageSizes} />\n\n              {/* Currency styles formatter */}\n              <PaymentTypeProvider for={paymentColumns} account_currency={account.currency} />\n              <DateTypeProvider for={['date']} />\n              <NotesTypeProvider for={['notes']} />\n\n              {/* Searching tool */}\n              <SearchState\n                value={searchValue}\n                onValueChange={this.changeSearchValue}\n              />\n              <IntegratedFiltering />\n              <Toolbar rootComponent={() => this.toolComponent(transactions.loading ? '' : transactions.account.balance)} />\n              <SearchPanel />\n\n              {/** Sorting tools */}\n              <SortingState\n                sorting={sorting}\n                defaultSorting={sorting}\n                onSortingChange={this.changeSorting}\n              />\n              <IntegratedSorting />              \n\n              {/* Table itself */}\n              <Table columnExtensions={tableColumnExtensions}\n                tableComponent={TableComponent}\n                cellComponent={Cell}\n              />\n\n              <TableHeaderRow showSortingControls\n                sortLabelComponent={SortLabel}\n                cellComponent={HeaderStyles}\n              />\n              <TableSelection\n                selectByRowClick\n                highlightRow\n                showSelectionColumn={true}\n              />\n             \n            </Grid>\n        \n            <div className='card card-footer d-flex flex-row'>\n\n              <ModalAdd\n                disabled={false}\n                variant='light'\n                styles='p-2 mr-2'\n                size='sm'\n                type='add-transaction'\n                header=\"New transaction\"\n                buttonText=\"Add\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Add\"\n                mainFuncBtn='Add'\n                icon='fas fa-plus'\n                currency={account.currency}\n                bankAccount={transactions.loading ? account : transactions.account}\n                auth={this.props.auth}\n              />\n\n              <ModalEdit\n                disabled={selection.length > 0 ? false : true}\n                variant='light'\n                styles='p-2 mr-2'\n                size='sm'\n                type='edit-transaction'\n                header=\"Edit transaction\"\n                buttonText=\"Update\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Update\"\n                mainFuncBtn='Update'\n                icon='fas fa-pen'\n                currency={account.currency}\n                bankAccount={transactions.loading ? account : transactions.account}\n                transaction={selected_row}\n              />\n\n              <ModalDelete\n                disabled={selection.length > 0 ? false : true}\n                variant='light'\n                styles='p-2'\n                size='sm'\n                type='remove-transaction'\n                header=\"Remove transaction\"\n                body=\"Are you sure you want to remove this transaction?\"\n                buttonText=\"Remove\"\n                cancelBtn=\"Close\"\n                yesBtn=\"Yes\"\n              />\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  success: state.success,\n  transactions: state.transactions\n})\n\nexport default connect(mapStateToProps, {loadTransactions})(DataTable);"]},"metadata":{},"sourceType":"module"}