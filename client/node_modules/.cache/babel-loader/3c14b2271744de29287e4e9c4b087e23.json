{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js\";\nimport React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\nimport { isNumber } from 'util';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { numberWithCommas } from '../utils/Utils';\n\nclass Evaluate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabIndex: 0,\n      selected_account_id: '',\n      rendered: false,\n      options: {},\n      series: [],\n      labels: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        selected_account_id: e.target.value\n      }, () => {\n        this.props.analysis(this.state.selected_account_id);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const accounts = nextProps.accounts;\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({\n            rendered: true\n          }, () => {\n            this.props.analysis(this.state.selected_account_id);\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          accounts = _this$props.accounts,\n          dataAnalysis = _this$props.dataAnalysis;\n    const account = dataAnalysis.account;\n    let hasPositive = [];\n\n    if (!dataAnalysis.loading) {\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n      dataAnalysis.amounts.forEach((amount, i) => {\n        dataAnalysis.amounts[i] = Math.abs(amount);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      active: \"evaluate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mt-3 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultFocus: true,\n      selectedIndex: this.state.tabIndex,\n      onSelect: tabIndex => this.setState({\n        tabIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chart-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Expense statistics \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), accounts.loading ? null : React.createElement(\"span\", {\n      className: \"badge badge-secondary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, accounts.accounts.length)), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Investing tools\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"statistics\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, accounts.loading ? null : accounts.accounts.length === 0 ? 'You currently have no accounts.' : null, React.createElement(\"div\", {\n      className: \"form-group row justify-content-start\",\n      style: {\n        'display': 'flex',\n        'alignItems': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      className: \"col-md-4 col-sm-6 col-xs-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Select account\"), React.createElement(\"div\", {\n      className: \"form-group col-md-7 col-sm-5 col-xs-12 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"account\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, !accounts.loading && accounts.accounts.map(account => React.createElement(\"option\", {\n      key: account._id,\n      value: account._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, account.name)))))), dataAnalysis.analyzing ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-header bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Earned: \", React.createElement(\"small\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, currencyTypes[account.currency], !dataAnalysis.loading && isNumber(dataAnalysis.earned) ? numberWithCommas(dataAnalysis.earned) : '')), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Expense: \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, currencyTypes[account.currency], !dataAnalysis.loading && isNumber(dataAnalysis.expense) ? numberWithCommas(Math.abs(dataAnalysis.expense)) : '')))), React.createElement(\"div\", {\n      className: \"card border-0 shadow bg-primary text-white pt-3 pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"m-auto text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"lead text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Click on labels to view details\")), React.createElement(Chart, {\n      options: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            colors: '#ffffff'\n          }\n        },\n        labels: ['earned', 'expense'],\n        plotOptions: {\n          pie: {\n            donut: {\n              size: '55%',\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  color: '#ffffff'\n                },\n                value: {\n                  show: true,\n                  color: '#ffffff'\n                }\n              }\n            }\n          }\n        }\n      },\n      series: !dataAnalysis.loading && isNumber(dataAnalysis.earned) && isNumber(dataAnalysis.expense) ? [dataAnalysis.earned, Math.abs(dataAnalysis.expense)] : [],\n      type: \"donut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: {\n        xaxis: {\n          categories: !dataAnalysis.loading ? dataAnalysis.categories : [],\n          labels: {\n            show: true,\n            rotate: -45\n          }\n        },\n        yaxis: {\n          show: false,\n          logarithmic: true,\n          decimalsInFloat: 0,\n          max: hasPositive.length === 0 ? 0 : !dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0\n        },\n        plotOptions: {\n          bar: {\n            distributed: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        }\n      },\n      series: [{\n        name: 'amount',\n        data: !dataAnalysis.loading ? dataAnalysis.amounts : []\n      }],\n      type: \"bar\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(Chart, {\n      series: [{\n        name: \"Series 1\",\n        data: [45, 52, 38, 45, 19, 23, 2]\n      }],\n      options: {\n        chart: {\n          height: 380,\n          type: \"area\"\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.9,\n            stops: [0, 90, 100]\n          }\n        },\n        xaxis: {\n          categories: [\"01 Jan\", \"02 Jan\", \"03 Jan\", \"04 Jan\", \"05 Jan\", \"06 Jan\", \"07 Jan\"]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"invest_tools\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"to be updated soon ...\")))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  loadAccounts,\n  analysis\n})(Evaluate);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/evaluate/Evaluate.js"],"names":["React","Component","NavBar","Footer","Tab","Tabs","TabList","TabPanel","connect","loadAccounts","Chart","analysis","isNumber","currencyTypes","numberWithCommas","Evaluate","state","tabIndex","selected_account_id","rendered","options","series","labels","onChange","e","setState","target","value","props","componentDidMount","componentWillReceiveProps","nextProps","accounts","loading","length","_id","render","dataAnalysis","account","hasPositive","amounts","filter","amount","forEach","i","Math","abs","map","name","analyzing","currency","earned","expense","legend","position","colors","plotOptions","pie","donut","size","show","color","xaxis","categories","rotate","yaxis","logarithmic","decimalsInFloat","max","bar","distributed","dataLabels","enabled","data","chart","height","type","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","mapStateToProps","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from '../layouts/NavBar';\nimport Footer from '../layouts/Footer';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { loadAccounts } from '../actions/accountActions';\nimport Chart from \"react-apexcharts\";\nimport { analysis } from '../actions/dataAnalysis';\nimport { isNumber } from 'util';\nimport { currencyTypes } from '../dictionary/dictionary';\nimport { numberWithCommas } from '../utils/Utils';\n\nclass Evaluate extends Component {\n  state = {\n    tabIndex: 0,\n    selected_account_id: '',\n    rendered: false,\n\n    options: {},\n    series: [],\n    labels: []\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { accounts} = nextProps;\n\n    if (!accounts.loading && accounts.accounts.length > 0) {\n      this.setState({\n        selected_account_id: accounts.accounts[0]._id\n      }, () => {\n        if (!this.state.rendered) {\n          this.setState({ rendered: true}, () => {\n            this.props.analysis(this.state.selected_account_id);\n          })\n        }\n      })\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      selected_account_id: e.target.value\n    }, () => {\n      this.props.analysis(this.state.selected_account_id);\n    })\n  }\n\n  render() {\n    const {accounts, dataAnalysis } = this.props;\n    const {account} = dataAnalysis;\n    let hasPositive = [];\n    if (!dataAnalysis.loading){\n      hasPositive = dataAnalysis.amounts.filter(amount => amount > 0);\n      dataAnalysis.amounts.forEach((amount, i) => {\n        dataAnalysis.amounts[i] = Math.abs(amount)\n      })\n    }\n    return (\n      <div>\n        <NavBar active=\"evaluate\" />\n\n        <div className=\"container mt-3 mb-5\">\n          <Tabs defaultFocus={true} selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n            <TabList>\n              <Tab>\n                <i className='fas fa-chart-bar'></i><span>&nbsp;&nbsp;</span>\n                Expense statistics <span>&nbsp;&nbsp;</span>\n                {\n                  accounts.loading ? null :\n                    <span className=\"badge badge-secondary badge-pill\">{accounts.accounts.length}</span>\n                }\n\n              </Tab>\n              <Tab>\n                <i className='fas fa-calculator'></i><span>&nbsp;&nbsp;</span>\n                Investing tools\n              </Tab>\n            </TabList>\n\n            <TabPanel >\n              <br />\n              <div id='statistics' className='m-auto'>\n                {\n                  accounts.loading ? null :\n                  (\n                    accounts.accounts.length === 0 ?\n                    'You currently have no accounts.' : null\n                  )\n                }\n                <div className=\"form-group row justify-content-start\" style={{ 'display': 'flex', 'alignItems': 'center' }}>\n                  <label htmlFor=\"currency\" className=\"col-md-4 col-sm-6 col-xs-12 col-form-label\">\n                    Select account\n                  </label>\n                  <div className=\"form-group col-md-7 col-sm-5 col-xs-12 mt-2\">\n                    <select className=\"custom-select\" id='account' \n                      onChange={this.onChange} >\n                      {\n                        !accounts.loading && accounts.accounts.map((account) => \n                          <option key={account._id} value={account._id}>{account.name}</option>\n                        )\n                      }\n                    </select>\n                    \n                  </div>\n                </div>\n              </div>\n\n              {\n                dataAnalysis.analyzing ?\n                  <div className=\"d-flex justify-content-center mb-4\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  </div>\n                  :\n                  <div>\n                    <div className=\"row justify-content-between\">\n                      <div className=\"col-md-6 col-sm-12\">\n                        <div className='card card-header bg-light'>\n                          <div className='d-flex'>\n                            <div className='mr-auto'>\n                              Earned: <small className='text-success'>{currencyTypes[account.currency]}{!dataAnalysis.loading && isNumber(dataAnalysis.earned) ? numberWithCommas(dataAnalysis.earned) : '' }</small>\n                            </div>\n                            <div>\n                              Expense: <small>{currencyTypes[account.currency]}{!dataAnalysis.loading && isNumber(dataAnalysis.expense) ? numberWithCommas(Math.abs(dataAnalysis.expense)) : ''}</small>\n                            </div>\n                          </div>\n                        </div>\n                        <div className='card border-0 shadow bg-primary text-white pt-3 pb-3'>\n                          <div className='m-auto text-center'>\n                            <div className='mb-3'>\n                              <small className='lead text-muted'>Click on labels to view details</small>\n                            </div>\n                            <Chart\n                              options={{\n                                legend: {\n                                  position: 'bottom',\n                                  labels: {\n                                    colors: '#ffffff'\n                                  }\n                                },\n                                labels: [\n                                  'earned',\n                                  'expense'\n                                ],\n                                plotOptions: {\n                                  pie: {\n                                    donut: {\n                                      size: '55%',\n                                      labels: {\n                                        show: true,\n                                        name: {\n                                          show: true,\n                                          color: '#ffffff'\n                                        },\n                                        value: {\n                                          show: true,\n                                          color: '#ffffff'\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }}\n                              series={\n                                !dataAnalysis.loading && isNumber(dataAnalysis.earned) && isNumber(dataAnalysis.expense) ? [dataAnalysis.earned, Math.abs(dataAnalysis.expense)] : []\n                              }\n                              type=\"donut\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"col-md-6 col-sm-12\">\n                        <br/><br/>\n                          <Chart\n                            options={{\n                              xaxis: {\n                                categories: !dataAnalysis.loading ? dataAnalysis.categories : [],\n                                labels: {\n                                  show: true,\n                                  rotate: -45,\n                                }\n                              },\n                              yaxis: {\n                                show: false,\n                                logarithmic: true,\n                                decimalsInFloat: 0,\n                                max: hasPositive.length === 0 ? 0 :\n                                  (!dataAnalysis.loading ? Math.max(...dataAnalysis.amounts) : 0)\n                              },\n                              plotOptions: {\n                                bar: {\n                                  distributed: true\n                                }\n                              },\n                              dataLabels: {\n                                enabled: false\n                              }\n                            }}\n                            series={\n                              [{\n                                name: 'amount',\n                                data: !dataAnalysis.loading ? dataAnalysis.amounts : [] \n                              }]\n                            }\n                            type=\"bar\"\n                            width=\"100%\"\n                          />                             \n                      </div>\n                    </div>\n\n                    <Chart \n                      series={\n                        [\n                          {\n                            name: \"Series 1\",\n                            data: [45, 52, 38, 45, 19, 23, 2]\n                          }\n                        ]\n                      }\n                      options={{\n                        chart: {\n                          height: 380,\n                          type: \"area\"\n                        },\n                        \n                        fill: {\n                          type: 'gradient',\n                          gradient: {\n                            shadeIntensity: 1,\n                            opacityFrom: 0.7,\n                            opacityTo: 0.9,\n                            stops: [0, 90, 100]\n                          }\n                        },\n                        xaxis: {\n                          categories: [\n                            \"01 Jan\",\n                            \"02 Jan\",\n                            \"03 Jan\",\n                            \"04 Jan\",\n                            \"05 Jan\",\n                            \"06 Jan\",\n                            \"07 Jan\"\n                          ]\n                        }\n                      }}\n                    />\n                </div>\n              }\n\n            </TabPanel>\n            <TabPanel >\n              <br />\n              <div id='invest_tools' className='m-auto'>\n                to be updated soon ...\n              </div>\n            </TabPanel>\n\n          </Tabs>\n        </div>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts,\n  dataAnalysis: state.dataAnalysis,\n  success: state.success\n})\n\nexport default connect(mapStateToProps, { loadAccounts, analysis})(Evaluate);\n"]},"metadata":{},"sourceType":"module"}