{"ast":null,"code":"import axios from 'axios';\nimport * as actions from './types';\nimport jwt_decode from 'jwt-decode';\nexport const createUser = (newUser, history) => dispatch => {\n  axios.post('/users/register', newUser).then(res => {\n    dispatch({\n      type: actions.SINGLE_USER,\n      payload: res.data.newUser\n    });\n    history.push({\n      pathname: '/users/login',\n      state: {\n        success: true\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const loginUser = user => dispatch => {\n  axios.post('/users/login', user).then(res => {\n    //console.log(res);\n    // save token to localstorage\n    localStorage.setItem('jwtToken', res.data.token); // Set token to Auth header\n\n    if (res.data.token) {\n      // Apply to every request\n      axios.defaults.headers.common['Authorization'] = res.data.token;\n    } else {\n      // Delete auth header\n      delete axios.defaults.headers.common['Authorization'];\n    } // Decode token to get user data\n\n\n    const decoded = jwt_decode(res.data.token); // Set current user\n\n    dispatch({\n      type: actions.SET_CURRENT_USER,\n      payload: decoded\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Log user out\n\nexport const logoutUser = history => dispatch => {\n  console.log(history); // Remove token from localStorage\n\n  localStorage.removeItem('jwtToken'); // Remove auth header for future requests\n  // Delete auth header\n\n  delete axios.defaults.headers.common['Authorization']; // Set current user to {} which will set isAuthenticated to false\n\n  dispatch({\n    type: actions.SET_CURRENT_USER,\n    payload: {}\n  }); //history.push('/');\n};","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/actions/usersActions.js"],"names":["axios","actions","jwt_decode","createUser","newUser","history","dispatch","post","then","res","type","SINGLE_USER","payload","data","push","pathname","state","success","catch","err","GET_ERRORS","response","loginUser","user","localStorage","setItem","token","defaults","headers","common","decoded","SET_CURRENT_USER","logoutUser","console","log","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsBC,QAAQ,IAAI;AAC1DN,EAAAA,KAAK,CAACO,IAAN,CAAW,iBAAX,EAA8BH,OAA9B,EACGI,IADH,CACQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACU,WADP;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAAST;AAFX,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACS,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE,cADC;AAEXC,MAAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAFI,KAAb;AAID,GAVH,EAWGC,KAXH,CAWSC,GAAG,IAAI;AACZb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACmB,UADP;AAEPR,MAAAA,OAAO,EAAEO,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAR;AAID,GAhBH;AAiBD,CAlBM;AAoBP,OAAO,MAAMS,SAAS,GAAIC,IAAD,IAAUjB,QAAQ,IAAI;AAC7CN,EAAAA,KAAK,CAACO,IAAN,CAAW,cAAX,EAA2BgB,IAA3B,EACGf,IADH,CACQC,GAAG,IAAI;AACX;AACA;AACAe,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiChB,GAAG,CAACI,IAAJ,CAASa,KAA1C,EAHW,CAIX;;AACA,QAAIjB,GAAG,CAACI,IAAJ,CAASa,KAAb,EAAoB;AAClB;AACA1B,MAAAA,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDpB,GAAG,CAACI,IAAJ,CAASa,KAA1D;AACD,KAHD,MAGO;AACL;AACA,aAAO1B,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD,KAXU,CAYX;;;AACA,UAAMC,OAAO,GAAG5B,UAAU,CAACO,GAAG,CAACI,IAAJ,CAASa,KAAV,CAA1B,CAbW,CAcX;;AACApB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAAC8B,gBADP;AAEPnB,MAAAA,OAAO,EAAEkB;AAFF,KAAD,CAAR;AAID,GApBH,EAqBGZ,KArBH,CAqBSC,GAAG,IAAI;AACZb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACmB,UADP;AAEPR,MAAAA,OAAO,EAAEO,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAR;AAID,GA1BH;AA2BD,CA5BM,C,CA8BP;;AACA,OAAO,MAAMmB,UAAU,GAAI3B,OAAD,IAAaC,QAAQ,IAAI;AACjD2B,EAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ,EADiD,CAEjD;;AACAmB,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB,EAHiD,CAIjD;AACA;;AACA,SAAOnC,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP,CANiD,CAOjD;;AACAvB,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,OAAO,CAAC8B,gBADP;AAEPnB,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR,CARiD,CAYjD;AACD,CAbM","sourcesContent":["import axios from 'axios';\nimport * as actions from './types';\nimport jwt_decode from 'jwt-decode';\n\nexport const createUser = (newUser, history) => dispatch => {\n  axios.post('/users/register', newUser)\n    .then(res => {\n      dispatch({\n        type: actions.SINGLE_USER,\n        payload: res.data.newUser\n      })\n      history.push({\n        pathname: '/users/login',\n        state: {success: true}\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n};\n\nexport const loginUser = (user) => dispatch => {\n  axios.post('/users/login', user)\n    .then(res => {\n      //console.log(res);\n      // save token to localstorage\n      localStorage.setItem('jwtToken', res.data.token);\n      // Set token to Auth header\n      if (res.data.token) {\n        // Apply to every request\n        axios.defaults.headers.common['Authorization'] = res.data.token;\n      } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n      }\n      // Decode token to get user data\n      const decoded = jwt_decode(res.data.token);\n      // Set current user\n      dispatch({\n        type: actions.SET_CURRENT_USER,\n        payload: decoded\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// Log user out\nexport const logoutUser = (history) => dispatch => {\n  console.log(history);\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  // Delete auth header\n  delete axios.defaults.headers.common['Authorization'];\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch({\n    type: actions.SET_CURRENT_USER,\n    payload: {}\n  })\n  //history.push('/');\n};"]},"metadata":{},"sourceType":"module"}