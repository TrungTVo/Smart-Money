{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_ALL_ACCOUNTS, GET_ACCOUNTS_LOADING, ADD_ACCOUNT, LOAD_ACCOUNT, DELETE_ACCOUNT } from \"../actions/types\";\nconst initialState = {\n  accounts: [],\n  account: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_ACCOUNTS_LOADING) {\n    return _objectSpread({}, state, {\n      loading: true\n    });\n  } else if (action.type === GET_ALL_ACCOUNTS) {\n    return _objectSpread({}, state, {\n      accounts: action.payload,\n      loading: false\n    });\n  } else if (action.type === ADD_ACCOUNT) {\n    return _objectSpread({}, state, {\n      accounts: [action.payload, ...state.accounts],\n      account: action.payload\n    });\n  } else if (action.type === DELETE_ACCOUNT) {\n    return _objectSpread({}, state, {\n      accounts: state.accounts.filter(account => account._id !== action.payload)\n    });\n  } else if (action.type === LOAD_ACCOUNT) {\n    return _objectSpread({}, state, {\n      account: action.payload,\n      loading: false\n    });\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/reducers/accountReducer.js"],"names":["GET_ALL_ACCOUNTS","GET_ACCOUNTS_LOADING","ADD_ACCOUNT","LOAD_ACCOUNT","DELETE_ACCOUNT","initialState","accounts","account","loading","state","action","type","payload","filter","_id"],"mappings":";AAAA,SAASA,gBAAT,EACIC,oBADJ,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,cAJJ,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,oBAApB,EAA0C;AACxC,6BACKQ,KADL;AAEED,MAAAA,OAAO,EAAE;AAFX;AAID,GALD,MAKO,IAAIE,MAAM,CAACC,IAAP,KAAgBX,gBAApB,EAAsC;AAC3C,6BACKS,KADL;AAEEH,MAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFnB;AAGEJ,MAAAA,OAAO,EAAE;AAHX;AAKD,GANM,MAMA,IAAIE,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AACtC,6BACKO,KADL;AAEEH,MAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B,CAFZ;AAGEC,MAAAA,OAAO,EAAEG,MAAM,CAACE;AAHlB;AAKD,GANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgBP,cAApB,EAAoC;AACzC,6BACKK,KADL;AAEEH,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBN,OAAO,IAAIA,OAAO,CAACO,GAAR,KAAgBJ,MAAM,CAACE,OAAxD;AAFZ;AAID,GALM,MAKA,IAAIF,MAAM,CAACC,IAAP,KAAgBR,YAApB,EAAkC;AACvC,6BACKM,KADL;AAEEF,MAAAA,OAAO,EAAEG,MAAM,CAACE,OAFlB;AAGEJ,MAAAA,OAAO,EAAE;AAHX;AAKD,GANM,MAMA;AACL,WAAOC,KAAP;AACD;AACF","sourcesContent":["import { GET_ALL_ACCOUNTS, \n    GET_ACCOUNTS_LOADING, \n    ADD_ACCOUNT,\n    LOAD_ACCOUNT,\n    DELETE_ACCOUNT\n} from \"../actions/types\";\n\nconst initialState = {\n  accounts: [],\n  account: {},\n  loading: false\n}\n\nexport default function (state = initialState, action) {\n  if (action.type === GET_ACCOUNTS_LOADING) {\n    return {\n      ...state,\n      loading: true\n    }\n  } else if (action.type === GET_ALL_ACCOUNTS) {\n    return {\n      ...state,\n      accounts: action.payload,\n      loading: false\n    }\n  } else if (action.type === ADD_ACCOUNT) {\n    return {\n      ...state,\n      accounts: [action.payload, ...state.accounts],\n      account: action.payload\n    }\n  } else if (action.type === DELETE_ACCOUNT) { \n    return {\n      ...state,\n      accounts: state.accounts.filter(account => account._id !== action.payload)\n    }\n  } else if (action.type === LOAD_ACCOUNT) {\n    return {\n      ...state,\n      account: action.payload,\n      loading: false\n    }\n  } else {\n    return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}