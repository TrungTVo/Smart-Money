{"ast":null,"code":"import _objectSpread from \"/Users/trungvo/javascript-stack/smart-money/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js\";\nimport * as React from 'react';\nimport { SortingState, SelectionState, FilteringState, GroupingState, SearchState, IntegratedFiltering, IntegratedGrouping, IntegratedSorting, IntegratedSelection } from '@devexpress/dx-react-grid';\nimport { Grid, VirtualTable, TableHeaderRow, TableFilterRow, TableSelection, TableGroupRow, GroupingPanel, DragDropProvider, TableColumnReordering, Toolbar, SearchPanel } from '@devexpress/dx-react-grid-bootstrap4';\nimport { ProgressBarCell } from '../../../theme-sources/bootstrap4/components/progress-bar-cell';\nimport { HighlightedCell } from '../../../theme-sources/bootstrap4/components/highlighted-cell';\nimport { CurrencyTypeProvider } from '../../../theme-sources/bootstrap4/components/currency-type-provider';\nimport { PercentTypeProvider } from '../../../theme-sources/bootstrap4/components/percent-type-provider';\nimport { BooleanTypeProvider } from '../../../theme-sources/bootstrap4/components/boolean-type-provider';\nimport { generateRows, globalSalesValues } from '../../../demo-data/generator';\n\nconst Cell = props => {\n  const column = props.column;\n\n  if (column.name === 'discount') {\n    return React.createElement(ProgressBarCell, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n  if (column.name === 'amount') {\n    return React.createElement(HighlightedCell, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(VirtualTable.Cell, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst getRowId = row => row.id;\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        name: 'product',\n        title: 'Product'\n      }, {\n        name: 'region',\n        title: 'Region'\n      }, {\n        name: 'sector',\n        title: 'Sector'\n      }, {\n        name: 'channel',\n        title: 'Channel'\n      }, {\n        name: 'amount',\n        title: 'Sale Amount'\n      }, {\n        name: 'discount',\n        title: 'Discount'\n      }, {\n        name: 'saleDate',\n        title: 'Sale Date'\n      }, {\n        name: 'customer',\n        title: 'Customer'\n      }, {\n        name: 'units',\n        title: 'Units'\n      }, {\n        name: 'shipped',\n        title: 'Shipped'\n      }],\n      tableColumnExtensions: [{\n        columnName: 'amount',\n        align: 'right'\n      }, {\n        columnName: 'units',\n        align: 'right'\n      }],\n      rows: generateRows({\n        columnValues: _objectSpread({\n          id: ({\n            index\n          }) => index\n        }, globalSalesValues),\n        length: 200000\n      }),\n      currencyColumns: ['amount'],\n      percentColumns: ['discount'],\n      booleanColumns: ['shipped']\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns,\n          tableColumnExtensions = _this$state.tableColumnExtensions,\n          currencyColumns = _this$state.currencyColumns,\n          percentColumns = _this$state.percentColumns,\n          booleanColumns = _this$state.booleanColumns;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      rows: rows,\n      columns: columns,\n      getRowId: getRowId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(DragDropProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FilteringState, {\n      defaultFilters: [{\n        columnName: 'saleDate',\n        value: '2016-02'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(SearchState, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(SortingState, {\n      defaultSorting: [{\n        columnName: 'product',\n        direction: 'asc'\n      }, {\n        columnName: 'saleDate',\n        direction: 'asc'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(GroupingState, {\n      defaultGrouping: [{\n        columnName: 'product'\n      }],\n      defaultExpandedGroups: ['EnviroCare Max'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(SelectionState, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(IntegratedFiltering, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(IntegratedSorting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(IntegratedGrouping, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(IntegratedSelection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(CurrencyTypeProvider, {\n      for: currencyColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(PercentTypeProvider, {\n      for: percentColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(BooleanTypeProvider, {\n      for: booleanColumns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(VirtualTable, {\n      columnExtensions: tableColumnExtensions,\n      cellComponent: Cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(TableHeaderRow, {\n      showSortingControls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(TableColumnReordering, {\n      defaultOrder: columns.map(column => column.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(TableFilterRow, {\n      showFilterSelector: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(TableSelection, {\n      showSelectAll: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(TableGroupRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(GroupingPanel, {\n      showSortingControls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DataTable.js"],"names":["React","SortingState","SelectionState","FilteringState","GroupingState","SearchState","IntegratedFiltering","IntegratedGrouping","IntegratedSorting","IntegratedSelection","Grid","VirtualTable","TableHeaderRow","TableFilterRow","TableSelection","TableGroupRow","GroupingPanel","DragDropProvider","TableColumnReordering","Toolbar","SearchPanel","ProgressBarCell","HighlightedCell","CurrencyTypeProvider","PercentTypeProvider","BooleanTypeProvider","generateRows","globalSalesValues","Cell","props","column","name","getRowId","row","id","DataTable","PureComponent","constructor","state","columns","title","tableColumnExtensions","columnName","align","rows","columnValues","index","length","currencyColumns","percentColumns","booleanColumns","render","value","direction","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  SortingState, SelectionState, FilteringState, GroupingState, SearchState,\n  IntegratedFiltering, IntegratedGrouping, IntegratedSorting, IntegratedSelection,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  VirtualTable, TableHeaderRow, TableFilterRow, TableSelection, TableGroupRow,\n  GroupingPanel, DragDropProvider, TableColumnReordering, Toolbar, SearchPanel,\n} from '@devexpress/dx-react-grid-bootstrap4';\n\nimport { ProgressBarCell } from '../../../theme-sources/bootstrap4/components/progress-bar-cell';\nimport { HighlightedCell } from '../../../theme-sources/bootstrap4/components/highlighted-cell';\nimport { CurrencyTypeProvider } from '../../../theme-sources/bootstrap4/components/currency-type-provider';\nimport { PercentTypeProvider } from '../../../theme-sources/bootstrap4/components/percent-type-provider';\nimport { BooleanTypeProvider } from '../../../theme-sources/bootstrap4/components/boolean-type-provider';\n\nimport {\n  generateRows,\n  globalSalesValues,\n} from '../../../demo-data/generator';\n\nconst Cell = (props) => {\n  const { column } = props;\n  if (column.name === 'discount') {\n    return <ProgressBarCell {...props} />;\n  }\n  if (column.name === 'amount') {\n    return <HighlightedCell {...props} />;\n  }\n  return <VirtualTable.Cell {...props} />;\n};\n\nconst getRowId = row => row.id;\n\nclass DataTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'product', title: 'Product' },\n        { name: 'region', title: 'Region' },\n        { name: 'sector', title: 'Sector' },\n        { name: 'channel', title: 'Channel' },\n        { name: 'amount', title: 'Sale Amount' },\n        { name: 'discount', title: 'Discount' },\n        { name: 'saleDate', title: 'Sale Date' },\n        { name: 'customer', title: 'Customer' },\n        { name: 'units', title: 'Units' },\n        { name: 'shipped', title: 'Shipped' },\n      ],\n      tableColumnExtensions: [\n        { columnName: 'amount', align: 'right' },\n        { columnName: 'units', align: 'right' },\n      ],\n      rows: generateRows({\n        columnValues: { id: ({ index }) => index, ...globalSalesValues },\n        length: 200000,\n      }),\n      currencyColumns: ['amount'],\n      percentColumns: ['discount'],\n      booleanColumns: ['shipped'],\n    };\n  }\n\n  render() {\n    const {\n      rows, columns, tableColumnExtensions,\n      currencyColumns, percentColumns, booleanColumns,\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          rows={rows}\n          columns={columns}\n          getRowId={getRowId}\n        >\n          <DragDropProvider />\n\n          <FilteringState\n            defaultFilters={[{ columnName: 'saleDate', value: '2016-02' }]}\n          />\n          <SearchState />\n          <SortingState\n            defaultSorting={[\n              { columnName: 'product', direction: 'asc' },\n              { columnName: 'saleDate', direction: 'asc' },\n            ]}\n          />\n          <GroupingState\n            defaultGrouping={[{ columnName: 'product' }]}\n            defaultExpandedGroups={['EnviroCare Max']}\n          />\n          <SelectionState />\n\n          <IntegratedFiltering />\n          <IntegratedSorting />\n          <IntegratedGrouping />\n          <IntegratedSelection />\n\n          <CurrencyTypeProvider for={currencyColumns} />\n          <PercentTypeProvider for={percentColumns} />\n          <BooleanTypeProvider for={booleanColumns} />\n\n          <VirtualTable\n            columnExtensions={tableColumnExtensions}\n            cellComponent={Cell}\n          />\n          <TableHeaderRow showSortingControls />\n          <TableColumnReordering defaultOrder={columns.map(column => column.name)} />\n          <TableFilterRow showFilterSelector />\n          <TableSelection showSelectAll />\n          <TableGroupRow />\n          <Toolbar />\n          <SearchPanel />\n          <GroupingPanel showSortingControls />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}