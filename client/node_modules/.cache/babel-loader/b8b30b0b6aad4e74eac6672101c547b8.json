{"ast":null,"code":"import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess'; // add new account\n\nexport const addAccount = account => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearSuccess());\n  axios.post('/accounts/new', account).then(res => {\n    dispatch({\n      type: actions.GET_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // load all accounts\n\nexport const loadAccounts = () => dispatch => {\n  dispatch(accountsLoading());\n  axios.get('/accounts/all').then(res => {\n    dispatch({\n      type: actions.GET_ALL_ACCOUNTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: actions.GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // set accounts loading\n\nconst accountsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_ACCOUNTS_LOADING\n  });\n};","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/actions/accountActions.js"],"names":["axios","actions","clearErrors","clearSuccess","addAccount","account","dispatch","post","then","res","type","GET_SUCCESS","payload","data","catch","err","GET_ERRORS","response","loadAccounts","accountsLoading","get","GET_ALL_ACCOUNTS","GET_ACCOUNTS_LOADING"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mBAA1C,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACAI,EAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AAEAH,EAAAA,KAAK,CAACO,IAAN,CAAW,eAAX,EAA4BF,OAA5B,EACGG,IADH,CACQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACU,WADP;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACe,UADP;AAEPJ,MAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,KAAD,CAAR;AAID,GAZH;AAaD,CAjBM,C,CAmBP;;AACA,OAAO,MAAMK,YAAY,GAAG,MAAMZ,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAACa,eAAe,EAAhB,CAAR;AACAnB,EAAAA,KAAK,CAACoB,GAAN,CAAU,eAAV,EACGZ,IADH,CACQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACoB,gBADP;AAEPT,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,OAAO,CAACe,UADP;AAEPJ,MAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,KAAD,CAAR;AAID,GAZH;AAaD,CAfM,C,CAiBP;;AACA,MAAMM,eAAe,GAAG,MAAMb,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,OAAO,CAACqB;AADP,GAAD,CAAR;AAGD,CAJD","sourcesContent":["import axios from 'axios';\nimport * as actions from './types';\nimport { clearErrors, clearSuccess } from './clearErrSuccess';\n\n// add new account\nexport const addAccount = (account) => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearSuccess());\n\n  axios.post('/accounts/new', account)\n    .then(res => {\n      dispatch({\n        type: actions.GET_SUCCESS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// load all accounts\nexport const loadAccounts = () => dispatch => {\n  dispatch(accountsLoading());\n  axios.get('/accounts/all')\n    .then(res => {\n      dispatch({\n        type: actions.GET_ALL_ACCOUNTS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: actions.GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// set accounts loading\nconst accountsLoading = () => dispatch => {\n  dispatch({\n    type: actions.GET_ACCOUNTS_LOADING\n  })\n}"]},"metadata":{},"sourceType":"module"}