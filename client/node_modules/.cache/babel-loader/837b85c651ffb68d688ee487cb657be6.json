{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/common/ModalEdit.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { InputGroup } from './InputGroup';\nimport DatePicker from \"react-datepicker\";\nimport { connect } from 'react-redux';\nimport { updateTransaction } from '../actions/transactionActions';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport class ModalEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeDate = date => {\n      this.setState({\n        date: date\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.updateTransaction = (e, bankAccount) => {\n      e.preventDefault();\n      const _this$state = this.state,\n            date = _this$state.date,\n            amount = _this$state.amount,\n            category = _this$state.category,\n            notes = _this$state.notes,\n            payee = _this$state.payee;\n      this.props.updateTransaction({\n        date: date === '' || date === null ? '' : date.toISOString().split('T')[0].replace(/-/g, '/'),\n        amount: amount,\n        category: category,\n        notes: notes,\n        payee: payee,\n        bankAccount: bankAccount\n      });\n    };\n\n    this.state = {\n      show: false,\n      date: new Date(),\n      amount: '',\n      category: '',\n      notes: '',\n      payee: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof nextProps.transaction !== 'undefined' && Object.keys(nextProps.transaction).length > 0) {\n      this.setState({\n        date: new Date(nextProps.transaction.date),\n        amount: nextProps.transaction.amount,\n        category: nextProps.transaction.category,\n        notes: nextProps.transaction.notes,\n        payee: nextProps.transaction.payee\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          styles = _this$props.styles,\n          header = _this$props.header,\n          buttonText = _this$props.buttonText,\n          cancelBtn = _this$props.cancelBtn,\n          currency = _this$props.currency,\n          mainFuncBtn = _this$props.mainFuncBtn,\n          bankAccount = _this$props.bankAccount,\n          size = _this$props.size,\n          variant = _this$props.variant,\n          disabled = _this$props.disabled,\n          icon = _this$props.icon;\n    const _this$state2 = this.state,\n          date = _this$state2.date,\n          amount = _this$state2.amount,\n          category = _this$state2.category,\n          notes = _this$state2.notes,\n          payee = _this$state2.payee;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: variant,\n      className: styles,\n      onClick: this.handleShow,\n      size: size,\n      disabled: disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), buttonText), React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\"), header)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Date\", React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\xA0*\\xA0\"), React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"(yyyy/mm/dd)\")), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      dateFormat: \"yyyy/MM/dd\",\n      selected: date,\n      onChange: this.handleChangeDate,\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"amount\",\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Amount \", React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"(\", currency, \")\"), \" \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"+ for deposit, - for expense\"))),\n      type: \"amount\",\n      id: \"amount\",\n      name: \"amount\",\n      onChange: this.onChange,\n      value: amount,\n      placeholder: \"Enter amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"category\",\n      label: \"Category\",\n      type: \"category\",\n      id: \"category\",\n      name: \"category\",\n      onChange: this.onChange,\n      value: category,\n      placeholder: \"Enter category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"notes\",\n      label: \"Notes\",\n      type: \"notes\",\n      id: \"notes\",\n      name: \"notes\",\n      onChange: this.onChange,\n      value: notes,\n      placeholder: \"Enter notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      htmlFor: \"payee\",\n      label: \"Payee\",\n      type: \"payee\",\n      id: \"payee\",\n      name: \"payee\",\n      onChange: this.onChange,\n      value: payee,\n      placeholder: \"Enter payee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: e => this.updateTransaction(e, bankAccount),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      className: \"mr-2\",\n      type: \"submit\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, mainFuncBtn), React.createElement(Button, {\n      variant: \"secondary\",\n      type: \"button\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, cancelBtn)))));\n  }\n\n}\nexport default connect(null, {\n  updateTransaction\n})(ModalEdit);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/common/ModalEdit.js"],"names":["React","Component","Modal","Button","Form","InputGroup","DatePicker","connect","updateTransaction","ModalEdit","constructor","props","handleChangeDate","date","setState","handleClose","show","handleShow","onChange","e","target","name","value","bankAccount","preventDefault","state","amount","category","notes","payee","toISOString","split","replace","Date","componentWillReceiveProps","nextProps","transaction","Object","keys","length","render","styles","header","buttonText","cancelBtn","currency","mainFuncBtn","size","variant","disabled","icon","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { InputGroup } from './InputGroup';\nimport DatePicker from \"react-datepicker\";\nimport { connect } from 'react-redux';\nimport { updateTransaction } from '../actions/transactionActions';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport class ModalEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      date: new Date(),\n      amount: '',\n      category: '',\n      notes: '',\n      payee: '',\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof nextProps.transaction !== 'undefined' && Object.keys(nextProps.transaction).length > 0) {\n      this.setState({\n        date: new Date(nextProps.transaction.date),\n        amount: nextProps.transaction.amount,\n        category: nextProps.transaction.category,\n        notes: nextProps.transaction.notes,\n        payee: nextProps.transaction.payee\n      })\n    }\n  }\n\n  handleChangeDate = (date) => {\n    this.setState({\n      date: date\n    });\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  updateTransaction = (e, bankAccount) => {\n    e.preventDefault();\n    const {date, amount, category, notes, payee} = this.state;\n    this.props.updateTransaction({\n      date: date === '' || date === null ? '' : date.toISOString().split('T')[0].replace(/-/g, '/'),\n      amount: amount,\n      category: category,\n      notes: notes,\n      payee: payee,\n      bankAccount: bankAccount\n    });\n  }\n\n\n  render() {\n    const { styles, header, buttonText, cancelBtn, currency,\n      mainFuncBtn, bankAccount, size, variant, disabled, icon } = this.props;\n\n    const { date, amount, category, notes, payee } = this.state;\n\n    return (\n      <div>\n        <Button variant={variant} className={styles} onClick={this.handleShow} size={size} disabled={disabled} >\n          <i className={icon}>&nbsp;&nbsp;</i>{buttonText}\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <i className={icon}></i>\n              <span>&nbsp;&nbsp;&nbsp;</span>{header}\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <label>Date \n              <span style={{ color: 'red' }}>&nbsp;*&nbsp;</span>\n              <small className='text-muted'>(yyyy/mm/dd)</small>\n            </label> <br />\n            <DatePicker\n              dateFormat=\"yyyy/MM/dd\"\n              selected={date}\n              onChange={this.handleChangeDate}\n              className='mb-4'\n            />\n\n            <InputGroup\n              htmlFor=\"amount\"\n              label={<span><span>Amount <small className='text-muted'>({currency})</small> <span style={{ color: 'red' }}>*</span></span><br /> <span><small className='text-muted'>+ for deposit, - for expense</small></span></span>}\n              type=\"amount\"\n              id=\"amount\"\n              name=\"amount\"\n              onChange={this.onChange}\n              value={amount}\n              placeholder=\"Enter amount\"\n            />\n            <InputGroup\n              htmlFor=\"category\"\n              label=\"Category\"\n              type=\"category\"\n              id=\"category\"\n              name=\"category\"\n              onChange={this.onChange}\n              value={category}\n              placeholder=\"Enter category\"\n            />\n            <InputGroup\n              htmlFor=\"notes\"\n              label=\"Notes\"\n              type=\"notes\"\n              id=\"notes\"\n              name=\"notes\"\n              onChange={this.onChange}\n              value={notes}\n              placeholder=\"Enter notes\"\n            />\n            <InputGroup\n              htmlFor=\"payee\"\n              label=\"Payee\"\n              type=\"payee\"\n              id=\"payee\"\n              name=\"payee\"\n              onChange={this.onChange}\n              value={payee}\n              placeholder=\"Enter payee\"\n            />\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Form onSubmit={(e) => this.updateTransaction(e, bankAccount)}>\n              <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={this.handleClose}>\n                {mainFuncBtn}\n              </Button>\n              <Button variant=\"secondary\" type=\"button\" onClick={this.handleClose}>\n                {cancelBtn}\n              </Button>\n            </Form>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, {updateTransaction})(ModalEdit);\n"]},"metadata":{},"sourceType":"module"}