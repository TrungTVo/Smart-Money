{"ast":null,"code":"var _jsxFileName = \"/Users/trungvo/javascript-stack/smart-money/client/src/tools/DailyTransactions.js\";\nimport React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport AccountDetails from './AccountDetails';\nimport { connect } from 'react-redux';\nimport AlertMessage from '../common/AlertMessage';\nimport * as actions from '../actions/types';\n\nclass DailyTransactions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabIndex: 0\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          accounts = _this$props.accounts,\n          success = _this$props.success;\n    console.log(accounts);\n    let content;\n\n    if (accounts.loading) {\n      content = React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, success.type === actions.DELETE_ACCOUNT && typeof success.success_msg !== 'undefined' && success.success_msg !== '' ? React.createElement(AlertMessage, {\n        variant: 'success',\n        message: success.success_msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }) : null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"You currently have \", accounts.accounts.length, \" accounts.\"), React.createElement(Tabs, {\n        defaultFocus: true,\n        selectedIndex: this.state.tabIndex,\n        onSelect: tabIndex => this.setState({\n          tabIndex\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(TabList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, accounts.accounts.map((account, i) => React.createElement(Tab, {\n        key: account._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, account.name))), accounts.accounts.map((account, i) => React.createElement(TabPanel, {\n        key: account._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(AccountDetails, {\n        account: account,\n        reTab: () => this.setState({\n          tabIndex: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, null)(DailyTransactions);","map":{"version":3,"sources":["/Users/trungvo/javascript-stack/smart-money/client/src/tools/DailyTransactions.js"],"names":["React","Component","Tab","Tabs","TabList","TabPanel","AccountDetails","connect","AlertMessage","actions","DailyTransactions","state","tabIndex","render","props","accounts","success","console","log","content","loading","type","DELETE_ACCOUNT","success_msg","length","setState","map","account","i","_id","name","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport AccountDetails from './AccountDetails';\nimport {connect} from 'react-redux';\nimport AlertMessage from '../common/AlertMessage';\nimport * as actions from '../actions/types';\n\nclass DailyTransactions extends Component {\n  state = {\n    tabIndex: 0\n  }\n  render() {\n    const { accounts, success} = this.props;\n    console.log(accounts)\n    let content;\n    if (accounts.loading) {\n      content = <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    } else {\n      content = \n      <div>\n        {\n          success.type === actions.DELETE_ACCOUNT && typeof success.success_msg !== 'undefined' && success.success_msg !== '' ?\n            <AlertMessage variant={'success'} message={success.success_msg} /> : null\n        }\n  \n        <p>You currently have {accounts.accounts.length} accounts.</p>\n        <Tabs defaultFocus={true} selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n          <TabList>\n            {\n              accounts.accounts.map((account, i) => \n                <Tab key={account._id}>{account.name}</Tab>\n              )\n            }\n          </TabList>\n          {\n            accounts.accounts.map((account, i) =>\n              <TabPanel key={account._id} >\n                <br/>\n                <AccountDetails account={account} reTab={() => this.setState({tabIndex: 0})} />\n              </TabPanel>\n            )\n          }\n        </Tabs>\n      </div>\n    }\n\n    return (\n      <div>\n        {content}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, null)(DailyTransactions);\n"]},"metadata":{},"sourceType":"module"}